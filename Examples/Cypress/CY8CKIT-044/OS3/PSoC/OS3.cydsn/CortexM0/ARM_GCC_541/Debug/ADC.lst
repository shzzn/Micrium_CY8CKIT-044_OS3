ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_initVar
  20              		.bss
  21              		.type	ADC_initVar, %object
  22              		.size	ADC_initVar, 1
  23              	ADC_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_offset,2,4
  26              		.comm	ADC_countsPer10Volt,4,4
  27              		.section	.rodata
  28              		.align	2
  29              		.type	ADC_channelsConfig, %object
  30              		.size	ADC_channelsConfig, 4
  31              	ADC_channelsConfig:
  32 0000 00010000 		.word	256
  33              		.section	.text.ADC_Start,"ax",%progbits
  34              		.align	2
  35              		.global	ADC_Start
  36              		.code	16
  37              		.thumb_func
  38              		.type	ADC_Start, %function
  39              	ADC_Start:
  40              	.LFB1:
  41              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 2


  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000100u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  42              		.loc 1 64 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 3


  51              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  52              		.loc 1 66 0
  53 0004 064B     		ldr	r3, .L3
  54 0006 1B78     		ldrb	r3, [r3]
  55 0008 002B     		cmp	r3, #0
  56 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  57              		.loc 1 68 0
  58 000c FFF7FEFF 		bl	ADC_Init
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  59              		.loc 1 69 0
  60 0010 034B     		ldr	r3, .L3
  61 0012 0122     		movs	r2, #1
  62 0014 1A70     		strb	r2, [r3]
  63              	.L2:
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  64              		.loc 1 71 0
  65 0016 FFF7FEFF 		bl	ADC_Enable
  72:Generated_Source\PSoC4/ADC.c **** }
  66              		.loc 1 72 0
  67 001a C046     		nop
  68 001c BD46     		mov	sp, r7
  69              		@ sp needed
  70 001e 80BD     		pop	{r7, pc}
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 0020 00000000 		.word	ADC_initVar
  75              		.cfi_endproc
  76              	.LFE1:
  77              		.size	ADC_Start, .-ADC_Start
  78              		.section	.text.ADC_Init,"ax",%progbits
  79              		.align	2
  80              		.global	ADC_Init
  81              		.code	16
  82              		.thumb_func
  83              		.type	ADC_Init, %function
  84              	ADC_Init:
  85              	.LFB2:
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 4


  87:Generated_Source\PSoC4/ADC.c **** * Return:
  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  86              		.loc 1 95 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 16
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 80B5     		push	{r7, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 0002 84B0     		sub	sp, sp, #16
  95              		.cfi_def_cfa_offset 24
  96 0004 00AF     		add	r7, sp, #0
  97              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 5


 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  98              		.loc 1 172 0
  99 0006 0321     		movs	r1, #3
 100 0008 1020     		movs	r0, #16
 101 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 102              		.loc 1 173 0
 103 000e 524B     		ldr	r3, .L17
 104 0010 1900     		movs	r1, r3
 105 0012 1020     		movs	r0, #16
 106 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 107              		.loc 1 177 0
 108 0018 504B     		ldr	r3, .L17+4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 6


 109 001a 0122     		movs	r2, #1
 110 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 111              		.loc 1 180 0
 112 001e 504B     		ldr	r3, .L17+8
 113 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 114              		.loc 1 178 0
 115 0022 002B     		cmp	r3, #0
 116 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 117              		.loc 1 178 0 is_stmt 0 discriminator 1
 118 0026 4F49     		ldr	r1, .L17+12
 119 0028 00E0     		b	.L7
 120              	.L6:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 121              		.loc 1 178 0 discriminator 2
 122 002a 4F49     		ldr	r1, .L17+16
 123              	.L7:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 124              		.loc 1 178 0 discriminator 4
 125 002c 4F4B     		ldr	r3, .L17+20
 126 002e 4F4A     		ldr	r2, .L17+20
 127 0030 1268     		ldr	r2, [r2]
 128 0032 0A43     		orrs	r2, r1
 129 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 130              		.loc 1 182 0 is_stmt 1 discriminator 4
 131 0036 4E4B     		ldr	r3, .L17+24
 132 0038 4E4A     		ldr	r2, .L17+28
 133 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 134              		.loc 1 183 0 discriminator 4
 135 003c 4E4B     		ldr	r3, .L17+32
 136 003e 4F4A     		ldr	r2, .L17+36
 137 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 138              		.loc 1 184 0 discriminator 4
 139 0042 4F4B     		ldr	r3, .L17+40
 140 0044 0022     		movs	r2, #0
 141 0046 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 142              		.loc 1 185 0 discriminator 4
 143 0048 4E4B     		ldr	r3, .L17+44
 144 004a 4F4A     		ldr	r2, .L17+48
 145 004c 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 146              		.loc 1 186 0 discriminator 4
 147 004e 4F4B     		ldr	r3, .L17+52
 148 0050 4F4A     		ldr	r2, .L17+56
 149 0052 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 7


 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 150              		.loc 1 197 0 discriminator 4
 151 0054 4F4B     		ldr	r3, .L17+60
 152 0056 0022     		movs	r2, #0
 153 0058 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 154              		.loc 1 198 0 discriminator 4
 155 005a 4F4B     		ldr	r3, .L17+64
 156 005c 0022     		movs	r2, #0
 157 005e 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 158              		.loc 1 199 0 discriminator 4
 159 0060 4E4B     		ldr	r3, .L17+68
 160 0062 0122     		movs	r2, #1
 161 0064 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 162              		.loc 1 206 0 discriminator 4
 163 0066 4E4B     		ldr	r3, .L17+72
 164 0068 1B68     		ldr	r3, [r3]
 165 006a 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 166              		.loc 1 207 0 discriminator 4
 167 006c 7B68     		ldr	r3, [r7, #4]
 168 006e 4D4A     		ldr	r2, .L17+76
 169 0070 1340     		ands	r3, r2
 170 0072 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 171              		.loc 1 218 0 discriminator 4
 172 0074 7B68     		ldr	r3, [r7, #4]
 173 0076 0122     		movs	r2, #1
 174 0078 1343     		orrs	r3, r2
 175 007a 7B60     		str	r3, [r7, #4]
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 8


 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 176              		.loc 1 226 0 discriminator 4
 177 007c 484B     		ldr	r3, .L17+72
 178 007e 7A68     		ldr	r2, [r7, #4]
 179 0080 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 180              		.loc 1 232 0 discriminator 4
 181 0082 0023     		movs	r3, #0
 182 0084 FB60     		str	r3, [r7, #12]
 183 0086 60E0     		b	.L8
 184              	.L16:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 185              		.loc 1 234 0
 186 0088 8023     		movs	r3, #128
 187 008a 5A00     		lsls	r2, r3, #1
 188 008c DC23     		movs	r3, #220
 189 008e 9B01     		lsls	r3, r3, #6
 190 0090 1340     		ands	r3, r2
 191 0092 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 192              		.loc 1 253 0
 193 0094 FB68     		ldr	r3, [r7, #12]
 194 0096 9B00     		lsls	r3, r3, #2
 195 0098 434A     		ldr	r2, .L17+80
 196 009a 9446     		mov	ip, r2
 197 009c 6344     		add	r3, r3, ip
 198 009e 7A68     		ldr	r2, [r7, #4]
 199 00a0 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 9


 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 200              		.loc 1 255 0
 201 00a2 8023     		movs	r3, #128
 202 00a4 5B00     		lsls	r3, r3, #1
 203 00a6 0122     		movs	r2, #1
 204 00a8 1340     		ands	r3, r2
 205 00aa 0AD0     		beq	.L9
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 206              		.loc 1 257 0
 207 00ac 394B     		ldr	r3, .L17+60
 208 00ae 394A     		ldr	r2, .L17+60
 209 00b0 1168     		ldr	r1, [r2]
 210 00b2 0120     		movs	r0, #1
 211 00b4 FA68     		ldr	r2, [r7, #12]
 212 00b6 9040     		lsls	r0, r0, r2
 213 00b8 0200     		movs	r2, r0
 214 00ba 1204     		lsls	r2, r2, #16
 215 00bc 120C     		lsrs	r2, r2, #16
 216 00be 0A43     		orrs	r2, r1
 217 00c0 1A60     		str	r2, [r3]
 218              	.L9:
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 219              		.loc 1 260 0
 220 00c2 8023     		movs	r3, #128
 221 00c4 5B00     		lsls	r3, r3, #1
 222 00c6 0222     		movs	r2, #2
 223 00c8 1340     		ands	r3, r2
 224 00ca 0AD0     		beq	.L10
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 225              		.loc 1 262 0
 226 00cc 324B     		ldr	r3, .L17+64
 227 00ce 324A     		ldr	r2, .L17+64
 228 00d0 1168     		ldr	r1, [r2]
 229 00d2 0120     		movs	r0, #1
 230 00d4 FA68     		ldr	r2, [r7, #12]
 231 00d6 9040     		lsls	r0, r0, r2
 232 00d8 0200     		movs	r2, r0
 233 00da 1204     		lsls	r2, r2, #16
 234 00dc 120C     		lsrs	r2, r2, #16
 235 00de 0A43     		orrs	r2, r1
 236 00e0 1A60     		str	r2, [r3]
 237              	.L10:
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 10


 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 238              		.loc 1 282 0
 239 00e2 8023     		movs	r3, #128
 240 00e4 5A00     		lsls	r2, r3, #1
 241 00e6 8023     		movs	r3, #128
 242 00e8 9B00     		lsls	r3, r3, #2
 243 00ea 1340     		ands	r3, r2
 244 00ec 03D0     		beq	.L11
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 245              		.loc 1 284 0
 246 00ee 8023     		movs	r3, #128
 247 00f0 5B00     		lsls	r3, r3, #1
 248 00f2 BB60     		str	r3, [r7, #8]
 249 00f4 02E0     		b	.L12
 250              	.L11:
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 251              		.loc 1 288 0
 252 00f6 8023     		movs	r3, #128
 253 00f8 5B01     		lsls	r3, r3, #5
 254 00fa BB60     		str	r3, [r7, #8]
 255              	.L12:
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 256              		.loc 1 291 0
 257 00fc 8023     		movs	r3, #128
 258 00fe 5A00     		lsls	r2, r3, #1
 259 0100 8023     		movs	r3, #128
 260 0102 5B00     		lsls	r3, r3, #1
 261 0104 1340     		ands	r3, r2
 262 0106 05D1     		bne	.L13
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 263              		.loc 1 298 0
 264 0108 284B     		ldr	r3, .L17+84
 265 010a FA68     		ldr	r2, [r7, #12]
 266 010c 5200     		lsls	r2, r2, #1
 267 010e 0021     		movs	r1, #0
 268 0110 D152     		strh	r1, [r2, r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 11


 269 0112 04E0     		b	.L14
 270              	.L13:
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 271              		.loc 1 307 0
 272 0114 254B     		ldr	r3, .L17+84
 273 0116 FA68     		ldr	r2, [r7, #12]
 274 0118 5200     		lsls	r2, r2, #1
 275 011a 0021     		movs	r1, #0
 276 011c D152     		strh	r1, [r2, r3]
 277              	.L14:
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 278              		.loc 1 311 0 discriminator 2
 279 011e BB68     		ldr	r3, [r7, #8]
 280 0120 234A     		ldr	r2, .L17+88
 281 0122 5343     		muls	r3, r2
 282 0124 8022     		movs	r2, #128
 283 0126 D200     		lsls	r2, r2, #3
 284 0128 9446     		mov	ip, r2
 285 012a 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 286              		.loc 1 312 0 discriminator 2
 287 012c 002B     		cmp	r3, #0
 288 012e 02DA     		bge	.L15
 289 0130 204A     		ldr	r2, .L17+92
 290 0132 9446     		mov	ip, r2
 291 0134 6344     		add	r3, r3, ip
 292              	.L15:
 293 0136 DB12     		asrs	r3, r3, #11
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 294              		.loc 1 311 0 discriminator 2
 295 0138 1BB2     		sxth	r3, r3
 296 013a 1900     		movs	r1, r3
 297 013c 1E4B     		ldr	r3, .L17+96
 298 013e FA68     		ldr	r2, [r7, #12]
 299 0140 9200     		lsls	r2, r2, #2
 300 0142 D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC.c ****     {
 301              		.loc 1 232 0 discriminator 2
 302 0144 FB68     		ldr	r3, [r7, #12]
 303 0146 0133     		adds	r3, r3, #1
 304 0148 FB60     		str	r3, [r7, #12]
 305              	.L8:
 232:Generated_Source\PSoC4/ADC.c ****     {
 306              		.loc 1 232 0 is_stmt 0 discriminator 1
 307 014a FB68     		ldr	r3, [r7, #12]
 308 014c 002B     		cmp	r3, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 12


 309 014e 9BD0     		beq	.L16
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 310              		.loc 1 314 0 is_stmt 1
 311 0150 C046     		nop
 312 0152 BD46     		mov	sp, r7
 313 0154 04B0     		add	sp, sp, #16
 314              		@ sp needed
 315 0156 80BD     		pop	{r7, pc}
 316              	.L18:
 317              		.align	2
 318              	.L17:
 319 0158 00000000 		.word	ADC_ISR
 320 015c 20003A40 		.word	1077542944
 321 0160 80033A40 		.word	1077543808
 322 0164 40021053 		.word	1393558080
 323 0168 40020053 		.word	1392509504
 324 016c 00003A40 		.word	1077542912
 325 0170 04003A40 		.word	1077542916
 326 0174 8C000080 		.word	-2147483508
 327 0178 18003A40 		.word	1077542936
 328 017c 0000FF07 		.word	134152192
 329 0180 1C003A40 		.word	1077542940
 330 0184 10003A40 		.word	1077542928
 331 0188 F4010200 		.word	131572
 332 018c 14003A40 		.word	1077542932
 333 0190 02000200 		.word	131074
 334 0194 28023A40 		.word	1077543464
 335 0198 38023A40 		.word	1077543480
 336 019c 18023A40 		.word	1077543448
 337 01a0 30003A40 		.word	1077542960
 338 01a4 FFFFFFDF 		.word	-536870913
 339 01a8 80003A40 		.word	1077543040
 340 01ac 00000000 		.word	ADC_offset
 341 01b0 10270000 		.word	10000
 342 01b4 FF070000 		.word	2047
 343 01b8 00000000 		.word	ADC_countsPer10Volt
 344              		.cfi_endproc
 345              	.LFE2:
 346              		.size	ADC_Init, .-ADC_Init
 347              		.section	.text.ADC_Enable,"ax",%progbits
 348              		.align	2
 349              		.global	ADC_Enable
 350              		.code	16
 351              		.thumb_func
 352              		.type	ADC_Enable, %function
 353              	ADC_Enable:
 354              	.LFB3:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 13


 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 355              		.loc 1 331 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359 0000 80B5     		push	{r7, lr}
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 7, -8
 362              		.cfi_offset 14, -4
 363 0002 00AF     		add	r7, sp, #0
 364              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 365              		.loc 1 332 0
 366 0004 0A4B     		ldr	r3, .L23
 367 0006 1B68     		ldr	r3, [r3]
 368 0008 002B     		cmp	r3, #0
 369 000a 0EDB     		blt	.L22
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 370              		.loc 1 336 0
 371 000c C046     		nop
 372              	.L21:
 373              		.loc 1 336 0 is_stmt 0 discriminator 1
 374 000e 094B     		ldr	r3, .L23+4
 375 0010 1B68     		ldr	r3, [r3]
 376 0012 002B     		cmp	r3, #0
 377 0014 FBDB     		blt	.L21
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 378              		.loc 1 342 0 is_stmt 1
 379 0016 064B     		ldr	r3, .L23
 380 0018 054A     		ldr	r2, .L23
 381 001a 1268     		ldr	r2, [r2]
 382 001c 8021     		movs	r1, #128
 383 001e 0906     		lsls	r1, r1, #24
 384 0020 0A43     		orrs	r2, r1
 385 0022 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 386              		.loc 1 345 0
 387 0024 0A20     		movs	r0, #10
 388 0026 FFF7FEFF 		bl	CyDelayUs
 389              	.L22:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 14


 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 390              		.loc 1 347 0
 391 002a C046     		nop
 392 002c BD46     		mov	sp, r7
 393              		@ sp needed
 394 002e 80BD     		pop	{r7, pc}
 395              	.L24:
 396              		.align	2
 397              	.L23:
 398 0030 00003A40 		.word	1077542912
 399 0034 08023A40 		.word	1077543432
 400              		.cfi_endproc
 401              	.LFE3:
 402              		.size	ADC_Enable, .-ADC_Enable
 403              		.section	.text.ADC_Stop,"ax",%progbits
 404              		.align	2
 405              		.global	ADC_Stop
 406              		.code	16
 407              		.thumb_func
 408              		.type	ADC_Stop, %function
 409              	ADC_Stop:
 410              	.LFB4:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 411              		.loc 1 366 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415 0000 80B5     		push	{r7, lr}
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
 419 0002 00AF     		add	r7, sp, #0
 420              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 421              		.loc 1 367 0
 422 0004 044B     		ldr	r3, .L26
 423 0006 044A     		ldr	r2, .L26
 424 0008 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 15


 425 000a 5200     		lsls	r2, r2, #1
 426 000c 5208     		lsrs	r2, r2, #1
 427 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC.c **** }
 428              		.loc 1 368 0
 429 0010 C046     		nop
 430 0012 BD46     		mov	sp, r7
 431              		@ sp needed
 432 0014 80BD     		pop	{r7, pc}
 433              	.L27:
 434 0016 C046     		.align	2
 435              	.L26:
 436 0018 00003A40 		.word	1077542912
 437              		.cfi_endproc
 438              	.LFE4:
 439              		.size	ADC_Stop, .-ADC_Stop
 440              		.section	.text.ADC_StartConvert,"ax",%progbits
 441              		.align	2
 442              		.global	ADC_StartConvert
 443              		.code	16
 444              		.thumb_func
 445              		.type	ADC_StartConvert, %function
 446              	ADC_StartConvert:
 447              	.LFB5:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 448              		.loc 1 392 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452 0000 80B5     		push	{r7, lr}
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 7, -8
 455              		.cfi_offset 14, -4
 456 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 16


 457              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 458              		.loc 1 394 0
 459 0004 044B     		ldr	r3, .L29
 460 0006 044A     		ldr	r2, .L29
 461 0008 1268     		ldr	r2, [r2]
 462 000a 8021     		movs	r1, #128
 463 000c 4902     		lsls	r1, r1, #9
 464 000e 0A43     		orrs	r2, r1
 465 0010 1A60     		str	r2, [r3]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 466              		.loc 1 399 0
 467 0012 C046     		nop
 468 0014 BD46     		mov	sp, r7
 469              		@ sp needed
 470 0016 80BD     		pop	{r7, pc}
 471              	.L30:
 472              		.align	2
 473              	.L29:
 474 0018 04003A40 		.word	1077542916
 475              		.cfi_endproc
 476              	.LFE5:
 477              		.size	ADC_StartConvert, .-ADC_StartConvert
 478              		.section	.text.ADC_StopConvert,"ax",%progbits
 479              		.align	2
 480              		.global	ADC_StopConvert
 481              		.code	16
 482              		.thumb_func
 483              		.type	ADC_StopConvert, %function
 484              	ADC_StopConvert:
 485              	.LFB6:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 486              		.loc 1 417 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 17


 489              		@ frame_needed = 1, uses_anonymous_args = 0
 490 0000 80B5     		push	{r7, lr}
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 7, -8
 493              		.cfi_offset 14, -4
 494 0002 00AF     		add	r7, sp, #0
 495              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 496              		.loc 1 419 0
 497 0004 044B     		ldr	r3, .L32
 498 0006 044A     		ldr	r2, .L32
 499 0008 1268     		ldr	r2, [r2]
 500 000a 0449     		ldr	r1, .L32+4
 501 000c 0A40     		ands	r2, r1
 502 000e 1A60     		str	r2, [r3]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 503              		.loc 1 421 0
 504 0010 C046     		nop
 505 0012 BD46     		mov	sp, r7
 506              		@ sp needed
 507 0014 80BD     		pop	{r7, pc}
 508              	.L33:
 509 0016 C046     		.align	2
 510              	.L32:
 511 0018 04003A40 		.word	1077542916
 512 001c FFFFFEFF 		.word	-65537
 513              		.cfi_endproc
 514              	.LFE6:
 515              		.size	ADC_StopConvert, .-ADC_StopConvert
 516              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 517              		.align	2
 518              		.global	ADC_IsEndConversion
 519              		.code	16
 520              		.thumb_func
 521              		.type	ADC_IsEndConversion, %function
 522              	ADC_IsEndConversion:
 523              	.LFB7:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 18


 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 524              		.loc 1 451 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 16
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528 0000 80B5     		push	{r7, lr}
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 7, -8
 531              		.cfi_offset 14, -4
 532 0002 84B0     		sub	sp, sp, #16
 533              		.cfi_def_cfa_offset 24
 534 0004 00AF     		add	r7, sp, #0
 535              		.cfi_def_cfa_register 7
 536 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 537              		.loc 1 452 0
 538 0008 0023     		movs	r3, #0
 539 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 540              		.loc 1 454 0
 541 000c 7B68     		ldr	r3, [r7, #4]
 542 000e 0322     		movs	r2, #3
 543 0010 1340     		ands	r3, r2
 544 0012 11D0     		beq	.L35
 545              	.L37:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 546              		.loc 1 458 0 discriminator 2
 547 0014 0B4B     		ldr	r3, .L39
 548 0016 1B68     		ldr	r3, [r3]
 549 0018 0122     		movs	r2, #1
 550 001a 1340     		ands	r3, r2
 551 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 552              		.loc 1 459 0 discriminator 2
 553 001e FB68     		ldr	r3, [r7, #12]
 554 0020 002B     		cmp	r3, #0
 555 0022 03D1     		bne	.L36
 556              		.loc 1 459 0 is_stmt 0 discriminator 1
 557 0024 7B68     		ldr	r3, [r7, #4]
 558 0026 0222     		movs	r2, #2
 559 0028 1340     		ands	r3, r2
 560 002a F3D1     		bne	.L37
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 19


 561              	.L36:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 562              		.loc 1 461 0 is_stmt 1
 563 002c FB68     		ldr	r3, [r7, #12]
 564 002e 002B     		cmp	r3, #0
 565 0030 02D0     		beq	.L35
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 566              		.loc 1 464 0
 567 0032 044B     		ldr	r3, .L39
 568 0034 0122     		movs	r2, #1
 569 0036 1A60     		str	r2, [r3]
 570              	.L35:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 571              		.loc 1 485 0
 572 0038 FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/ADC.c **** }
 573              		.loc 1 486 0
 574 003a 1800     		movs	r0, r3
 575 003c BD46     		mov	sp, r7
 576 003e 04B0     		add	sp, sp, #16
 577              		@ sp needed
 578 0040 80BD     		pop	{r7, pc}
 579              	.L40:
 580 0042 C046     		.align	2
 581              	.L39:
 582 0044 10023A40 		.word	1077543440
 583              		.cfi_endproc
 584              	.LFE7:
 585              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 586              		.section	.text.ADC_GetResult16,"ax",%progbits
 587              		.align	2
 588              		.global	ADC_GetResult16
 589              		.code	16
 590              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 20


 591              		.type	ADC_GetResult16, %function
 592              	ADC_GetResult16:
 593              	.LFB8:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 594              		.loc 1 505 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 16
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598 0000 80B5     		push	{r7, lr}
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 84B0     		sub	sp, sp, #16
 603              		.cfi_def_cfa_offset 24
 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 606 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 607              		.loc 1 509 0
 608 0008 7B68     		ldr	r3, [r7, #4]
 609 000a 002B     		cmp	r3, #0
 610 000c 02D0     		beq	.L42
 611              		.loc 1 509 0 is_stmt 0 discriminator 1
 612 000e 0020     		movs	r0, #0
 613 0010 FFF7FEFF 		bl	CyHalt
 614              	.L42:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 615              		.loc 1 511 0 is_stmt 1
 616 0014 7B68     		ldr	r3, [r7, #4]
 617 0016 002B     		cmp	r3, #0
 618 0018 09D1     		bne	.L43
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 619              		.loc 1 513 0
 620 001a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 21


 621 001c 9B00     		lsls	r3, r3, #2
 622 001e 084A     		ldr	r2, .L46
 623 0020 9446     		mov	ip, r2
 624 0022 6344     		add	r3, r3, ip
 625 0024 1B68     		ldr	r3, [r3]
 626 0026 1B04     		lsls	r3, r3, #16
 627 0028 1B0C     		lsrs	r3, r3, #16
 628 002a FB60     		str	r3, [r7, #12]
 629 002c 01E0     		b	.L44
 630              	.L43:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 631              		.loc 1 521 0
 632 002e 0023     		movs	r3, #0
 633 0030 FB60     		str	r3, [r7, #12]
 634              	.L44:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 635              		.loc 1 525 0
 636 0032 FB68     		ldr	r3, [r7, #12]
 637 0034 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC.c **** }
 638              		.loc 1 526 0
 639 0036 1800     		movs	r0, r3
 640 0038 BD46     		mov	sp, r7
 641 003a 04B0     		add	sp, sp, #16
 642              		@ sp needed
 643 003c 80BD     		pop	{r7, pc}
 644              	.L47:
 645 003e C046     		.align	2
 646              	.L46:
 647 0040 80013A40 		.word	1077543296
 648              		.cfi_endproc
 649              	.LFE8:
 650              		.size	ADC_GetResult16, .-ADC_GetResult16
 651              		.section	.text.ADC_SetChanMask,"ax",%progbits
 652              		.align	2
 653              		.global	ADC_SetChanMask
 654              		.code	16
 655              		.thumb_func
 656              		.type	ADC_SetChanMask, %function
 657              	ADC_SetChanMask:
 658              	.LFB9:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 22


 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 659              		.loc 1 550 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 8
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663 0000 80B5     		push	{r7, lr}
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 7, -8
 666              		.cfi_offset 14, -4
 667 0002 82B0     		sub	sp, sp, #8
 668              		.cfi_def_cfa_offset 16
 669 0004 00AF     		add	r7, sp, #0
 670              		.cfi_def_cfa_register 7
 671 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 672              		.loc 1 551 0
 673 0008 044B     		ldr	r3, .L49
 674 000a 7A68     		ldr	r2, [r7, #4]
 675 000c 0121     		movs	r1, #1
 676 000e 0A40     		ands	r2, r1
 677 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 678              		.loc 1 552 0
 679 0012 C046     		nop
 680 0014 BD46     		mov	sp, r7
 681 0016 02B0     		add	sp, sp, #8
 682              		@ sp needed
 683 0018 80BD     		pop	{r7, pc}
 684              	.L50:
 685 001a C046     		.align	2
 686              	.L49:
 687 001c 20003A40 		.word	1077542944
 688              		.cfi_endproc
 689              	.LFE9:
 690              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 691              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 692              		.align	2
 693              		.global	ADC_SetLowLimit
 694              		.code	16
 695              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 23


 696              		.type	ADC_SetLowLimit, %function
 697              	ADC_SetLowLimit:
 698              	.LFB10:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 699              		.loc 1 594 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 8
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 0000 80B5     		push	{r7, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 82B0     		sub	sp, sp, #8
 708              		.cfi_def_cfa_offset 16
 709 0004 00AF     		add	r7, sp, #0
 710              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 24


 711 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 712              		.loc 1 595 0
 713 0008 084B     		ldr	r3, .L52
 714 000a 084A     		ldr	r2, .L52
 715 000c 1268     		ldr	r2, [r2]
 716 000e 120C     		lsrs	r2, r2, #16
 717 0010 1204     		lsls	r2, r2, #16
 718 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 719              		.loc 1 596 0
 720 0014 054B     		ldr	r3, .L52
 721 0016 054A     		ldr	r2, .L52
 722 0018 1168     		ldr	r1, [r2]
 723 001a 7A68     		ldr	r2, [r7, #4]
 724 001c 1204     		lsls	r2, r2, #16
 725 001e 120C     		lsrs	r2, r2, #16
 726 0020 0A43     		orrs	r2, r1
 727 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC.c **** }
 728              		.loc 1 597 0
 729 0024 C046     		nop
 730 0026 BD46     		mov	sp, r7
 731 0028 02B0     		add	sp, sp, #8
 732              		@ sp needed
 733 002a 80BD     		pop	{r7, pc}
 734              	.L53:
 735              		.align	2
 736              	.L52:
 737 002c 18003A40 		.word	1077542936
 738              		.cfi_endproc
 739              	.LFE10:
 740              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 741              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 742              		.align	2
 743              		.global	ADC_SetHighLimit
 744              		.code	16
 745              		.thumb_func
 746              		.type	ADC_SetHighLimit, %function
 747              	ADC_SetHighLimit:
 748              	.LFB11:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 25


 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 749              		.loc 1 615 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 8
 752              		@ frame_needed = 1, uses_anonymous_args = 0
 753 0000 80B5     		push	{r7, lr}
 754              		.cfi_def_cfa_offset 8
 755              		.cfi_offset 7, -8
 756              		.cfi_offset 14, -4
 757 0002 82B0     		sub	sp, sp, #8
 758              		.cfi_def_cfa_offset 16
 759 0004 00AF     		add	r7, sp, #0
 760              		.cfi_def_cfa_register 7
 761 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 762              		.loc 1 616 0
 763 0008 084B     		ldr	r3, .L55
 764 000a 084A     		ldr	r2, .L55
 765 000c 1268     		ldr	r2, [r2]
 766 000e 1204     		lsls	r2, r2, #16
 767 0010 120C     		lsrs	r2, r2, #16
 768 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 769              		.loc 1 617 0
 770 0014 054B     		ldr	r3, .L55
 771 0016 054A     		ldr	r2, .L55
 772 0018 1168     		ldr	r1, [r2]
 773 001a 7A68     		ldr	r2, [r7, #4]
 774 001c 1204     		lsls	r2, r2, #16
 775 001e 0A43     		orrs	r2, r1
 776 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC.c **** }
 777              		.loc 1 618 0
 778 0022 C046     		nop
 779 0024 BD46     		mov	sp, r7
 780 0026 02B0     		add	sp, sp, #8
 781              		@ sp needed
 782 0028 80BD     		pop	{r7, pc}
 783              	.L56:
 784 002a C046     		.align	2
 785              	.L55:
 786 002c 18003A40 		.word	1077542936
 787              		.cfi_endproc
 788              	.LFE11:
 789              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 790              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 791              		.align	2
 792              		.global	ADC_SetLimitMask
 793              		.code	16
 794              		.thumb_func
 795              		.type	ADC_SetLimitMask, %function
 796              	ADC_SetLimitMask:
 797              	.LFB12:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 26


 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 798              		.loc 1 639 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 8
 801              		@ frame_needed = 1, uses_anonymous_args = 0
 802 0000 80B5     		push	{r7, lr}
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 82B0     		sub	sp, sp, #8
 807              		.cfi_def_cfa_offset 16
 808 0004 00AF     		add	r7, sp, #0
 809              		.cfi_def_cfa_register 7
 810 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 811              		.loc 1 640 0
 812 0008 044B     		ldr	r3, .L58
 813 000a 7A68     		ldr	r2, [r7, #4]
 814 000c 0121     		movs	r1, #1
 815 000e 0A40     		ands	r2, r1
 816 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 817              		.loc 1 641 0
 818 0012 C046     		nop
 819 0014 BD46     		mov	sp, r7
 820 0016 02B0     		add	sp, sp, #8
 821              		@ sp needed
 822 0018 80BD     		pop	{r7, pc}
 823              	.L59:
 824 001a C046     		.align	2
 825              	.L58:
 826 001c 38023A40 		.word	1077543480
 827              		.cfi_endproc
 828              	.LFE12:
 829              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 830              		.section	.text.ADC_SetSatMask,"ax",%progbits
 831              		.align	2
 832              		.global	ADC_SetSatMask
 833              		.code	16
 834              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 27


 835              		.type	ADC_SetSatMask, %function
 836              	ADC_SetSatMask:
 837              	.LFB13:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 838              		.loc 1 662 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 8
 841              		@ frame_needed = 1, uses_anonymous_args = 0
 842 0000 80B5     		push	{r7, lr}
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
 846 0002 82B0     		sub	sp, sp, #8
 847              		.cfi_def_cfa_offset 16
 848 0004 00AF     		add	r7, sp, #0
 849              		.cfi_def_cfa_register 7
 850 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 851              		.loc 1 663 0
 852 0008 044B     		ldr	r3, .L61
 853 000a 7A68     		ldr	r2, [r7, #4]
 854 000c 0121     		movs	r1, #1
 855 000e 0A40     		ands	r2, r1
 856 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 857              		.loc 1 664 0
 858 0012 C046     		nop
 859 0014 BD46     		mov	sp, r7
 860 0016 02B0     		add	sp, sp, #8
 861              		@ sp needed
 862 0018 80BD     		pop	{r7, pc}
 863              	.L62:
 864 001a C046     		.align	2
 865              	.L61:
 866 001c 28023A40 		.word	1077543464
 867              		.cfi_endproc
 868              	.LFE13:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 28


 869              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 870              		.section	.text.ADC_SetOffset,"ax",%progbits
 871              		.align	2
 872              		.global	ADC_SetOffset
 873              		.code	16
 874              		.thumb_func
 875              		.type	ADC_SetOffset, %function
 876              	ADC_SetOffset:
 877              	.LFB14:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 878              		.loc 1 690 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 8
 881              		@ frame_needed = 1, uses_anonymous_args = 0
 882 0000 80B5     		push	{r7, lr}
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 886 0002 82B0     		sub	sp, sp, #8
 887              		.cfi_def_cfa_offset 16
 888 0004 00AF     		add	r7, sp, #0
 889              		.cfi_def_cfa_register 7
 890 0006 7860     		str	r0, [r7, #4]
 891 0008 0A00     		movs	r2, r1
 892 000a BB1C     		adds	r3, r7, #2
 893 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 894              		.loc 1 692 0
 895 000e 7B68     		ldr	r3, [r7, #4]
 896 0010 002B     		cmp	r3, #0
 897 0012 02D0     		beq	.L64
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 29


 898              		.loc 1 692 0 is_stmt 0 discriminator 1
 899 0014 0020     		movs	r0, #0
 900 0016 FFF7FEFF 		bl	CyHalt
 901              	.L64:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 902              		.loc 1 694 0 is_stmt 1
 903 001a 054B     		ldr	r3, .L65
 904 001c 7A68     		ldr	r2, [r7, #4]
 905 001e 5200     		lsls	r2, r2, #1
 906 0020 B91C     		adds	r1, r7, #2
 907 0022 0988     		ldrh	r1, [r1]
 908 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 909              		.loc 1 695 0
 910 0026 C046     		nop
 911 0028 BD46     		mov	sp, r7
 912 002a 02B0     		add	sp, sp, #8
 913              		@ sp needed
 914 002c 80BD     		pop	{r7, pc}
 915              	.L66:
 916 002e C046     		.align	2
 917              	.L65:
 918 0030 00000000 		.word	ADC_offset
 919              		.cfi_endproc
 920              	.LFE14:
 921              		.size	ADC_SetOffset, .-ADC_SetOffset
 922              		.section	.text.ADC_SetGain,"ax",%progbits
 923              		.align	2
 924              		.global	ADC_SetGain
 925              		.code	16
 926              		.thumb_func
 927              		.type	ADC_SetGain, %function
 928              	ADC_SetGain:
 929              	.LFB15:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 30


 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 930              		.loc 1 724 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 8
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934 0000 80B5     		push	{r7, lr}
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 7, -8
 937              		.cfi_offset 14, -4
 938 0002 82B0     		sub	sp, sp, #8
 939              		.cfi_def_cfa_offset 16
 940 0004 00AF     		add	r7, sp, #0
 941              		.cfi_def_cfa_register 7
 942 0006 7860     		str	r0, [r7, #4]
 943 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 944              		.loc 1 726 0
 945 000a 7B68     		ldr	r3, [r7, #4]
 946 000c 002B     		cmp	r3, #0
 947 000e 02D0     		beq	.L68
 948              		.loc 1 726 0 is_stmt 0 discriminator 1
 949 0010 0020     		movs	r0, #0
 950 0012 FFF7FEFF 		bl	CyHalt
 951              	.L68:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 952              		.loc 1 728 0 is_stmt 1
 953 0016 044B     		ldr	r3, .L69
 954 0018 7A68     		ldr	r2, [r7, #4]
 955 001a 9200     		lsls	r2, r2, #2
 956 001c 3968     		ldr	r1, [r7]
 957 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 958              		.loc 1 729 0
 959 0020 C046     		nop
 960 0022 BD46     		mov	sp, r7
 961 0024 02B0     		add	sp, sp, #8
 962              		@ sp needed
 963 0026 80BD     		pop	{r7, pc}
 964              	.L70:
 965              		.align	2
 966              	.L69:
 967 0028 00000000 		.word	ADC_countsPer10Volt
 968              		.cfi_endproc
 969              	.LFE15:
 970              		.size	ADC_SetGain, .-ADC_SetGain
 971              		.global	__aeabi_idiv
 972              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 973              		.align	2
 974              		.global	ADC_CountsTo_mVolts
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 31


 975              		.code	16
 976              		.thumb_func
 977              		.type	ADC_CountsTo_mVolts, %function
 978              	ADC_CountsTo_mVolts:
 979              	.LFB16:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 980              		.loc 1 757 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 16
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984 0000 80B5     		push	{r7, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 7, -8
 987              		.cfi_offset 14, -4
 988 0002 84B0     		sub	sp, sp, #16
 989              		.cfi_def_cfa_offset 24
 990 0004 00AF     		add	r7, sp, #0
 991              		.cfi_def_cfa_register 7
 992 0006 7860     		str	r0, [r7, #4]
 993 0008 0A00     		movs	r2, r1
 994 000a BB1C     		adds	r3, r7, #2
 995 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 996              		.loc 1 761 0
 997 000e 7B68     		ldr	r3, [r7, #4]
 998 0010 002B     		cmp	r3, #0
 999 0012 02D0     		beq	.L72
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 32


 1000              		.loc 1 761 0 is_stmt 0 discriminator 1
 1001 0014 0020     		movs	r0, #0
 1002 0016 FFF7FEFF 		bl	CyHalt
 1003              	.L72:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1004              		.loc 1 772 0 is_stmt 1
 1005 001a 1E4B     		ldr	r3, .L78
 1006 001c 7A68     		ldr	r2, [r7, #4]
 1007 001e 5200     		lsls	r2, r2, #1
 1008 0020 D35A     		ldrh	r3, [r2, r3]
 1009 0022 19B2     		sxth	r1, r3
 1010 0024 BB1C     		adds	r3, r7, #2
 1011 0026 1A88     		ldrh	r2, [r3]
 1012 0028 8BB2     		uxth	r3, r1
 1013 002a D31A     		subs	r3, r2, r3
 1014 002c 9AB2     		uxth	r2, r3
 1015 002e BB1C     		adds	r3, r7, #2
 1016 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1017              		.loc 1 774 0
 1018 0032 BB1C     		adds	r3, r7, #2
 1019 0034 0022     		movs	r2, #0
 1020 0036 9B5E     		ldrsh	r3, [r3, r2]
 1021 0038 174A     		ldr	r2, .L78+4
 1022 003a 5A43     		muls	r2, r3
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1023              		.loc 1 775 0
 1024 003c BB1C     		adds	r3, r7, #2
 1025 003e 0021     		movs	r1, #0
 1026 0040 5B5E     		ldrsh	r3, [r3, r1]
 1027 0042 002B     		cmp	r3, #0
 1028 0044 08DD     		ble	.L73
 1029              		.loc 1 775 0 is_stmt 0 discriminator 1
 1030 0046 154B     		ldr	r3, .L78+8
 1031 0048 7968     		ldr	r1, [r7, #4]
 1032 004a 8900     		lsls	r1, r1, #2
 1033 004c CB58     		ldr	r3, [r1, r3]
 1034 004e 002B     		cmp	r3, #0
 1035 0050 00DA     		bge	.L74
 1036 0052 0133     		adds	r3, r3, #1
 1037              	.L74:
 1038 0054 5B10     		asrs	r3, r3, #1
 1039 0056 08E0     		b	.L75
 1040              	.L73:
 1041              		.loc 1 775 0 discriminator 2
 1042 0058 104B     		ldr	r3, .L78+8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 33


 1043 005a 7968     		ldr	r1, [r7, #4]
 1044 005c 8900     		lsls	r1, r1, #2
 1045 005e CB58     		ldr	r3, [r1, r3]
 1046 0060 002B     		cmp	r3, #0
 1047 0062 00DA     		bge	.L76
 1048 0064 0133     		adds	r3, r3, #1
 1049              	.L76:
 1050 0066 5B10     		asrs	r3, r3, #1
 1051 0068 5B42     		rsbs	r3, r3, #0
 1052              	.L75:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1053              		.loc 1 774 0 is_stmt 1
 1054 006a D018     		adds	r0, r2, r3
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1055              		.loc 1 776 0
 1056 006c 0B4B     		ldr	r3, .L78+8
 1057 006e 7A68     		ldr	r2, [r7, #4]
 1058 0070 9200     		lsls	r2, r2, #2
 1059 0072 D358     		ldr	r3, [r2, r3]
 1060 0074 1900     		movs	r1, r3
 1061 0076 FFF7FEFF 		bl	__aeabi_idiv
 1062 007a 0300     		movs	r3, r0
 1063 007c 1A00     		movs	r2, r3
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1064              		.loc 1 774 0
 1065 007e 0E23     		movs	r3, #14
 1066 0080 FB18     		adds	r3, r7, r3
 1067 0082 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1068              		.loc 1 778 0
 1069 0084 0E23     		movs	r3, #14
 1070 0086 FB18     		adds	r3, r7, r3
 1071 0088 0022     		movs	r2, #0
 1072 008a 9B5E     		ldrsh	r3, [r3, r2]
 779:Generated_Source\PSoC4/ADC.c ****     }
 1073              		.loc 1 779 0
 1074 008c 1800     		movs	r0, r3
 1075 008e BD46     		mov	sp, r7
 1076 0090 04B0     		add	sp, sp, #16
 1077              		@ sp needed
 1078 0092 80BD     		pop	{r7, pc}
 1079              	.L79:
 1080              		.align	2
 1081              	.L78:
 1082 0094 00000000 		.word	ADC_offset
 1083 0098 10270000 		.word	10000
 1084 009c 00000000 		.word	ADC_countsPer10Volt
 1085              		.cfi_endproc
 1086              	.LFE16:
 1087              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1088              		.global	__aeabi_lmul
 1089              		.global	__aeabi_ldivmod
 1090              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1091              		.align	2
 1092              		.global	ADC_CountsTo_uVolts
 1093              		.code	16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 34


 1094              		.thumb_func
 1095              		.type	ADC_CountsTo_uVolts, %function
 1096              	ADC_CountsTo_uVolts:
 1097              	.LFB17:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 1098              		.loc 1 811 0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 24
 1101              		@ frame_needed = 1, uses_anonymous_args = 0
 1102 0000 B0B5     		push	{r4, r5, r7, lr}
 1103              		.cfi_def_cfa_offset 16
 1104              		.cfi_offset 4, -16
 1105              		.cfi_offset 5, -12
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 86B0     		sub	sp, sp, #24
 1109              		.cfi_def_cfa_offset 40
 1110 0004 00AF     		add	r7, sp, #0
 1111              		.cfi_def_cfa_register 7
 1112 0006 F860     		str	r0, [r7, #12]
 1113 0008 0A00     		movs	r2, r1
 1114 000a 0A23     		movs	r3, #10
 1115 000c FB18     		adds	r3, r7, r3
 1116 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 35


 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1117              		.loc 1 815 0
 1118 0010 FB68     		ldr	r3, [r7, #12]
 1119 0012 002B     		cmp	r3, #0
 1120 0014 02D0     		beq	.L81
 1121              		.loc 1 815 0 is_stmt 0 discriminator 1
 1122 0016 0020     		movs	r0, #0
 1123 0018 FFF7FEFF 		bl	CyHalt
 1124              	.L81:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1125              		.loc 1 826 0 is_stmt 1
 1126 001c 194B     		ldr	r3, .L83
 1127 001e FA68     		ldr	r2, [r7, #12]
 1128 0020 5200     		lsls	r2, r2, #1
 1129 0022 D35A     		ldrh	r3, [r2, r3]
 1130 0024 19B2     		sxth	r1, r3
 1131 0026 0A23     		movs	r3, #10
 1132 0028 FB18     		adds	r3, r7, r3
 1133 002a 1A88     		ldrh	r2, [r3]
 1134 002c 8BB2     		uxth	r3, r1
 1135 002e D31A     		subs	r3, r2, r3
 1136 0030 9AB2     		uxth	r2, r3
 1137 0032 0A23     		movs	r3, #10
 1138 0034 FB18     		adds	r3, r7, r3
 1139 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1140              		.loc 1 828 0
 1141 0038 0A23     		movs	r3, #10
 1142 003a FB18     		adds	r3, r7, r3
 1143 003c 1B88     		ldrh	r3, [r3]
 1144 003e 1BB2     		sxth	r3, r3
 1145 0040 3B60     		str	r3, [r7]
 1146 0042 DB17     		asrs	r3, r3, #31
 1147 0044 7B60     		str	r3, [r7, #4]
 1148 0046 104A     		ldr	r2, .L83+4
 1149 0048 0023     		movs	r3, #0
 1150 004a 3868     		ldr	r0, [r7]
 1151 004c 7968     		ldr	r1, [r7, #4]
 1152 004e FFF7FEFF 		bl	__aeabi_lmul
 1153 0052 0200     		movs	r2, r0
 1154 0054 0B00     		movs	r3, r1
 1155 0056 1000     		movs	r0, r2
 1156 0058 1900     		movs	r1, r3
 1157 005a 0C4B     		ldr	r3, .L83+8
 1158 005c FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 36


 1159 005e 9200     		lsls	r2, r2, #2
 1160 0060 D358     		ldr	r3, [r2, r3]
 1161 0062 1C00     		movs	r4, r3
 1162 0064 DB17     		asrs	r3, r3, #31
 1163 0066 1D00     		movs	r5, r3
 1164 0068 2200     		movs	r2, r4
 1165 006a 2B00     		movs	r3, r5
 1166 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1167 0070 0300     		movs	r3, r0
 1168 0072 0C00     		movs	r4, r1
 1169 0074 3B61     		str	r3, [r7, #16]
 1170 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1171              		.loc 1 830 0
 1172 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC.c ****     }
 1173              		.loc 1 831 0
 1174 007a 1800     		movs	r0, r3
 1175 007c BD46     		mov	sp, r7
 1176 007e 06B0     		add	sp, sp, #24
 1177              		@ sp needed
 1178 0080 B0BD     		pop	{r4, r5, r7, pc}
 1179              	.L84:
 1180 0082 C046     		.align	2
 1181              	.L83:
 1182 0084 00000000 		.word	ADC_offset
 1183 0088 80969800 		.word	10000000
 1184 008c 00000000 		.word	ADC_countsPer10Volt
 1185              		.cfi_endproc
 1186              	.LFE17:
 1187              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1188              		.global	__aeabi_i2f
 1189              		.global	__aeabi_fmul
 1190              		.global	__aeabi_fdiv
 1191              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1192              		.align	2
 1193              		.global	ADC_CountsTo_Volts
 1194              		.code	16
 1195              		.thumb_func
 1196              		.type	ADC_CountsTo_Volts, %function
 1197              	ADC_CountsTo_Volts:
 1198              	.LFB18:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 37


 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 1199              		.loc 1 856 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 16
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203 0000 90B5     		push	{r4, r7, lr}
 1204              		.cfi_def_cfa_offset 12
 1205              		.cfi_offset 4, -12
 1206              		.cfi_offset 7, -8
 1207              		.cfi_offset 14, -4
 1208 0002 85B0     		sub	sp, sp, #20
 1209              		.cfi_def_cfa_offset 32
 1210 0004 00AF     		add	r7, sp, #0
 1211              		.cfi_def_cfa_register 7
 1212 0006 7860     		str	r0, [r7, #4]
 1213 0008 0A00     		movs	r2, r1
 1214 000a BB1C     		adds	r3, r7, #2
 1215 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1216              		.loc 1 860 0
 1217 000e 7B68     		ldr	r3, [r7, #4]
 1218 0010 002B     		cmp	r3, #0
 1219 0012 02D0     		beq	.L86
 1220              		.loc 1 860 0 is_stmt 0 discriminator 1
 1221 0014 0020     		movs	r0, #0
 1222 0016 FFF7FEFF 		bl	CyHalt
 1223              	.L86:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1224              		.loc 1 871 0 is_stmt 1
 1225 001a 164B     		ldr	r3, .L88
 1226 001c 7A68     		ldr	r2, [r7, #4]
 1227 001e 5200     		lsls	r2, r2, #1
 1228 0020 D35A     		ldrh	r3, [r2, r3]
 1229 0022 19B2     		sxth	r1, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 38


 1230 0024 BB1C     		adds	r3, r7, #2
 1231 0026 1A88     		ldrh	r2, [r3]
 1232 0028 8BB2     		uxth	r3, r1
 1233 002a D31A     		subs	r3, r2, r3
 1234 002c 9AB2     		uxth	r2, r3
 1235 002e BB1C     		adds	r3, r7, #2
 1236 0030 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1237              		.loc 1 873 0
 1238 0032 BB1C     		adds	r3, r7, #2
 1239 0034 0022     		movs	r2, #0
 1240 0036 9B5E     		ldrsh	r3, [r3, r2]
 1241 0038 1800     		movs	r0, r3
 1242 003a FFF7FEFF 		bl	__aeabi_i2f
 1243 003e 031C     		adds	r3, r0, #0
 1244 0040 0D49     		ldr	r1, .L88+4
 1245 0042 181C     		adds	r0, r3, #0
 1246 0044 FFF7FEFF 		bl	__aeabi_fmul
 1247 0048 031C     		adds	r3, r0, #0
 1248 004a 1C1C     		adds	r4, r3, #0
 1249 004c 0B4B     		ldr	r3, .L88+8
 1250 004e 7A68     		ldr	r2, [r7, #4]
 1251 0050 9200     		lsls	r2, r2, #2
 1252 0052 D358     		ldr	r3, [r2, r3]
 1253 0054 1800     		movs	r0, r3
 1254 0056 FFF7FEFF 		bl	__aeabi_i2f
 1255 005a 031C     		adds	r3, r0, #0
 1256 005c 191C     		adds	r1, r3, #0
 1257 005e 201C     		adds	r0, r4, #0
 1258 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1259 0064 031C     		adds	r3, r0, #0
 1260 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 1261              		.loc 1 875 0
 1262 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC.c ****     }
 1263              		.loc 1 876 0
 1264 006a 181C     		adds	r0, r3, #0
 1265 006c BD46     		mov	sp, r7
 1266 006e 05B0     		add	sp, sp, #20
 1267              		@ sp needed
 1268 0070 90BD     		pop	{r4, r7, pc}
 1269              	.L89:
 1270 0072 C046     		.align	2
 1271              	.L88:
 1272 0074 00000000 		.word	ADC_offset
 1273 0078 00002041 		.word	1092616192
 1274 007c 00000000 		.word	ADC_countsPer10Volt
 1275              		.cfi_endproc
 1276              	.LFE18:
 1277              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1278              		.text
 1279              	.Letext0:
 1280              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1281              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 39


 1282              	.Ldebug_info0:
 1283 0000 8D040000 		.4byte	0x48d
 1284 0004 0400     		.2byte	0x4
 1285 0006 00000000 		.4byte	.Ldebug_abbrev0
 1286 000a 04       		.byte	0x4
 1287 000b 01       		.uleb128 0x1
 1288 000c 62010000 		.4byte	.LASF60
 1289 0010 0C       		.byte	0xc
 1290 0011 5E020000 		.4byte	.LASF61
 1291 0015 0A030000 		.4byte	.LASF62
 1292 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1293 001d 00000000 		.4byte	0
 1294 0021 00000000 		.4byte	.Ldebug_line0
 1295 0025 02       		.uleb128 0x2
 1296 0026 01       		.byte	0x1
 1297 0027 06       		.byte	0x6
 1298 0028 68000000 		.4byte	.LASF0
 1299 002c 02       		.uleb128 0x2
 1300 002d 01       		.byte	0x1
 1301 002e 08       		.byte	0x8
 1302 002f BB020000 		.4byte	.LASF1
 1303 0033 02       		.uleb128 0x2
 1304 0034 02       		.byte	0x2
 1305 0035 05       		.byte	0x5
 1306 0036 D4020000 		.4byte	.LASF2
 1307 003a 02       		.uleb128 0x2
 1308 003b 02       		.byte	0x2
 1309 003c 07       		.byte	0x7
 1310 003d 3F010000 		.4byte	.LASF3
 1311 0041 02       		.uleb128 0x2
 1312 0042 04       		.byte	0x4
 1313 0043 05       		.byte	0x5
 1314 0044 8B000000 		.4byte	.LASF4
 1315 0048 02       		.uleb128 0x2
 1316 0049 04       		.byte	0x4
 1317 004a 07       		.byte	0x7
 1318 004b 0E010000 		.4byte	.LASF5
 1319 004f 02       		.uleb128 0x2
 1320 0050 08       		.byte	0x8
 1321 0051 05       		.byte	0x5
 1322 0052 5A000000 		.4byte	.LASF6
 1323 0056 02       		.uleb128 0x2
 1324 0057 08       		.byte	0x8
 1325 0058 07       		.byte	0x7
 1326 0059 32000000 		.4byte	.LASF7
 1327 005d 03       		.uleb128 0x3
 1328 005e 04       		.byte	0x4
 1329 005f 05       		.byte	0x5
 1330 0060 696E7400 		.ascii	"int\000"
 1331 0064 02       		.uleb128 0x2
 1332 0065 04       		.byte	0x4
 1333 0066 07       		.byte	0x7
 1334 0067 FA000000 		.4byte	.LASF8
 1335 006b 04       		.uleb128 0x4
 1336 006c BC000000 		.4byte	.LASF9
 1337 0070 02       		.byte	0x2
 1338 0071 E401     		.2byte	0x1e4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 40


 1339 0073 2C000000 		.4byte	0x2c
 1340 0077 04       		.uleb128 0x4
 1341 0078 00000000 		.4byte	.LASF10
 1342 007c 02       		.byte	0x2
 1343 007d E501     		.2byte	0x1e5
 1344 007f 3A000000 		.4byte	0x3a
 1345 0083 04       		.uleb128 0x4
 1346 0084 C9000000 		.4byte	.LASF11
 1347 0088 02       		.byte	0x2
 1348 0089 E601     		.2byte	0x1e6
 1349 008b 48000000 		.4byte	0x48
 1350 008f 04       		.uleb128 0x4
 1351 0090 78030000 		.4byte	.LASF12
 1352 0094 02       		.byte	0x2
 1353 0095 E801     		.2byte	0x1e8
 1354 0097 33000000 		.4byte	0x33
 1355 009b 04       		.uleb128 0x4
 1356 009c 7B000000 		.4byte	.LASF13
 1357 00a0 02       		.byte	0x2
 1358 00a1 E901     		.2byte	0x1e9
 1359 00a3 41000000 		.4byte	0x41
 1360 00a7 04       		.uleb128 0x4
 1361 00a8 FD010000 		.4byte	.LASF14
 1362 00ac 02       		.byte	0x2
 1363 00ad EA01     		.2byte	0x1ea
 1364 00af B3000000 		.4byte	0xb3
 1365 00b3 02       		.uleb128 0x2
 1366 00b4 04       		.byte	0x4
 1367 00b5 04       		.byte	0x4
 1368 00b6 87020000 		.4byte	.LASF15
 1369 00ba 02       		.uleb128 0x2
 1370 00bb 08       		.byte	0x8
 1371 00bc 04       		.byte	0x4
 1372 00bd C2000000 		.4byte	.LASF16
 1373 00c1 04       		.uleb128 0x4
 1374 00c2 48020000 		.4byte	.LASF17
 1375 00c6 02       		.byte	0x2
 1376 00c7 EF01     		.2byte	0x1ef
 1377 00c9 4F000000 		.4byte	0x4f
 1378 00cd 02       		.uleb128 0x2
 1379 00ce 01       		.byte	0x1
 1380 00cf 08       		.byte	0x8
 1381 00d0 F2020000 		.4byte	.LASF18
 1382 00d4 04       		.uleb128 0x4
 1383 00d5 F7010000 		.4byte	.LASF19
 1384 00d9 02       		.byte	0x2
 1385 00da 9002     		.2byte	0x290
 1386 00dc E0000000 		.4byte	0xe0
 1387 00e0 05       		.uleb128 0x5
 1388 00e1 83000000 		.4byte	0x83
 1389 00e5 02       		.uleb128 0x2
 1390 00e6 08       		.byte	0x8
 1391 00e7 04       		.byte	0x4
 1392 00e8 17020000 		.4byte	.LASF20
 1393 00ec 02       		.uleb128 0x2
 1394 00ed 04       		.byte	0x4
 1395 00ee 07       		.byte	0x7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 41


 1396 00ef 05020000 		.4byte	.LASF21
 1397 00f3 06       		.uleb128 0x6
 1398 00f4 81000000 		.4byte	.LASF25
 1399 00f8 01       		.byte	0x1
 1400 00f9 3F       		.byte	0x3f
 1401 00fa 00000000 		.4byte	.LFB1
 1402 00fe 24000000 		.4byte	.LFE1-.LFB1
 1403 0102 01       		.uleb128 0x1
 1404 0103 9C       		.byte	0x9c
 1405 0104 07       		.uleb128 0x7
 1406 0105 29000000 		.4byte	.LASF36
 1407 0109 01       		.byte	0x1
 1408 010a 5E       		.byte	0x5e
 1409 010b 00000000 		.4byte	.LFB2
 1410 010f BC010000 		.4byte	.LFE2-.LFB2
 1411 0113 01       		.uleb128 0x1
 1412 0114 9C       		.byte	0x9c
 1413 0115 44010000 		.4byte	0x144
 1414 0119 08       		.uleb128 0x8
 1415 011a E7020000 		.4byte	.LASF22
 1416 011e 01       		.byte	0x1
 1417 011f 60       		.byte	0x60
 1418 0120 83000000 		.4byte	0x83
 1419 0124 02       		.uleb128 0x2
 1420 0125 91       		.byte	0x91
 1421 0126 74       		.sleb128 -12
 1422 0127 08       		.uleb128 0x8
 1423 0128 35010000 		.4byte	.LASF23
 1424 012c 01       		.byte	0x1
 1425 012d 61       		.byte	0x61
 1426 012e 83000000 		.4byte	0x83
 1427 0132 02       		.uleb128 0x2
 1428 0133 91       		.byte	0x91
 1429 0134 6C       		.sleb128 -20
 1430 0135 08       		.uleb128 0x8
 1431 0136 0F000000 		.4byte	.LASF24
 1432 013a 01       		.byte	0x1
 1433 013b 62       		.byte	0x62
 1434 013c 9B000000 		.4byte	0x9b
 1435 0140 02       		.uleb128 0x2
 1436 0141 91       		.byte	0x91
 1437 0142 70       		.sleb128 -16
 1438 0143 00       		.byte	0
 1439 0144 09       		.uleb128 0x9
 1440 0145 6D030000 		.4byte	.LASF26
 1441 0149 01       		.byte	0x1
 1442 014a 4A01     		.2byte	0x14a
 1443 014c 00000000 		.4byte	.LFB3
 1444 0150 38000000 		.4byte	.LFE3-.LFB3
 1445 0154 01       		.uleb128 0x1
 1446 0155 9C       		.byte	0x9c
 1447 0156 0A       		.uleb128 0xa
 1448 0157 DE020000 		.4byte	.LASF27
 1449 015b 01       		.byte	0x1
 1450 015c 6D01     		.2byte	0x16d
 1451 015e 00000000 		.4byte	.LFB4
 1452 0162 1C000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 42


 1453 0166 01       		.uleb128 0x1
 1454 0167 9C       		.byte	0x9c
 1455 0168 0A       		.uleb128 0xa
 1456 0169 49000000 		.4byte	.LASF28
 1457 016d 01       		.byte	0x1
 1458 016e 8701     		.2byte	0x187
 1459 0170 00000000 		.4byte	.LFB5
 1460 0174 1C000000 		.4byte	.LFE5-.LFB5
 1461 0178 01       		.uleb128 0x1
 1462 0179 9C       		.byte	0x9c
 1463 017a 0A       		.uleb128 0xa
 1464 017b 52010000 		.4byte	.LASF29
 1465 017f 01       		.byte	0x1
 1466 0180 A001     		.2byte	0x1a0
 1467 0182 00000000 		.4byte	.LFB6
 1468 0186 20000000 		.4byte	.LFE6-.LFB6
 1469 018a 01       		.uleb128 0x1
 1470 018b 9C       		.byte	0x9c
 1471 018c 0B       		.uleb128 0xb
 1472 018d 34020000 		.4byte	.LASF31
 1473 0191 01       		.byte	0x1
 1474 0192 C201     		.2byte	0x1c2
 1475 0194 83000000 		.4byte	0x83
 1476 0198 00000000 		.4byte	.LFB7
 1477 019c 48000000 		.4byte	.LFE7-.LFB7
 1478 01a0 01       		.uleb128 0x1
 1479 01a1 9C       		.byte	0x9c
 1480 01a2 C5010000 		.4byte	0x1c5
 1481 01a6 0C       		.uleb128 0xc
 1482 01a7 E1000000 		.4byte	.LASF33
 1483 01ab 01       		.byte	0x1
 1484 01ac C201     		.2byte	0x1c2
 1485 01ae 83000000 		.4byte	0x83
 1486 01b2 02       		.uleb128 0x2
 1487 01b3 91       		.byte	0x91
 1488 01b4 6C       		.sleb128 -20
 1489 01b5 0D       		.uleb128 0xd
 1490 01b6 74000000 		.4byte	.LASF30
 1491 01ba 01       		.byte	0x1
 1492 01bb C401     		.2byte	0x1c4
 1493 01bd 83000000 		.4byte	0x83
 1494 01c1 02       		.uleb128 0x2
 1495 01c2 91       		.byte	0x91
 1496 01c3 74       		.sleb128 -12
 1497 01c4 00       		.byte	0
 1498 01c5 0E       		.uleb128 0xe
 1499 01c6 93030000 		.4byte	.LASF32
 1500 01ca 01       		.byte	0x1
 1501 01cb F801     		.2byte	0x1f8
 1502 01cd 8F000000 		.4byte	0x8f
 1503 01d1 00000000 		.4byte	.LFB8
 1504 01d5 44000000 		.4byte	.LFE8-.LFB8
 1505 01d9 01       		.uleb128 0x1
 1506 01da 9C       		.byte	0x9c
 1507 01db FE010000 		.4byte	0x1fe
 1508 01df 0C       		.uleb128 0xc
 1509 01e0 ED020000 		.4byte	.LASF34
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 43


 1510 01e4 01       		.byte	0x1
 1511 01e5 F801     		.2byte	0x1f8
 1512 01e7 83000000 		.4byte	0x83
 1513 01eb 02       		.uleb128 0x2
 1514 01ec 91       		.byte	0x91
 1515 01ed 6C       		.sleb128 -20
 1516 01ee 0D       		.uleb128 0xd
 1517 01ef 8C030000 		.4byte	.LASF35
 1518 01f3 01       		.byte	0x1
 1519 01f4 FA01     		.2byte	0x1fa
 1520 01f6 83000000 		.4byte	0x83
 1521 01fa 02       		.uleb128 0x2
 1522 01fb 91       		.byte	0x91
 1523 01fc 74       		.sleb128 -12
 1524 01fd 00       		.byte	0
 1525 01fe 0F       		.uleb128 0xf
 1526 01ff 4E020000 		.4byte	.LASF37
 1527 0203 01       		.byte	0x1
 1528 0204 2502     		.2byte	0x225
 1529 0206 00000000 		.4byte	.LFB9
 1530 020a 20000000 		.4byte	.LFE9-.LFB9
 1531 020e 01       		.uleb128 0x1
 1532 020f 9C       		.byte	0x9c
 1533 0210 24020000 		.4byte	0x224
 1534 0214 0C       		.uleb128 0xc
 1535 0215 D0000000 		.4byte	.LASF38
 1536 0219 01       		.byte	0x1
 1537 021a 2502     		.2byte	0x225
 1538 021c 83000000 		.4byte	0x83
 1539 0220 02       		.uleb128 0x2
 1540 0221 91       		.byte	0x91
 1541 0222 74       		.sleb128 -12
 1542 0223 00       		.byte	0
 1543 0224 0F       		.uleb128 0xf
 1544 0225 AB020000 		.4byte	.LASF39
 1545 0229 01       		.byte	0x1
 1546 022a 5102     		.2byte	0x251
 1547 022c 00000000 		.4byte	.LFB10
 1548 0230 30000000 		.4byte	.LFE10-.LFB10
 1549 0234 01       		.uleb128 0x1
 1550 0235 9C       		.byte	0x9c
 1551 0236 4A020000 		.4byte	0x24a
 1552 023a 0C       		.uleb128 0xc
 1553 023b 0E020000 		.4byte	.LASF40
 1554 023f 01       		.byte	0x1
 1555 0240 5102     		.2byte	0x251
 1556 0242 83000000 		.4byte	0x83
 1557 0246 02       		.uleb128 0x2
 1558 0247 91       		.byte	0x91
 1559 0248 74       		.sleb128 -12
 1560 0249 00       		.byte	0
 1561 024a 0F       		.uleb128 0xf
 1562 024b 23020000 		.4byte	.LASF41
 1563 024f 01       		.byte	0x1
 1564 0250 6602     		.2byte	0x266
 1565 0252 00000000 		.4byte	.LFB11
 1566 0256 30000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 44


 1567 025a 01       		.uleb128 0x1
 1568 025b 9C       		.byte	0x9c
 1569 025c 70020000 		.4byte	0x270
 1570 0260 0C       		.uleb128 0xc
 1571 0261 8D020000 		.4byte	.LASF42
 1572 0265 01       		.byte	0x1
 1573 0266 6602     		.2byte	0x266
 1574 0268 83000000 		.4byte	0x83
 1575 026c 02       		.uleb128 0x2
 1576 026d 91       		.byte	0x91
 1577 026e 74       		.sleb128 -12
 1578 026f 00       		.byte	0
 1579 0270 0F       		.uleb128 0xf
 1580 0271 E9000000 		.4byte	.LASF43
 1581 0275 01       		.byte	0x1
 1582 0276 7E02     		.2byte	0x27e
 1583 0278 00000000 		.4byte	.LFB12
 1584 027c 20000000 		.4byte	.LFE12-.LFB12
 1585 0280 01       		.uleb128 0x1
 1586 0281 9C       		.byte	0x9c
 1587 0282 96020000 		.4byte	0x296
 1588 0286 0C       		.uleb128 0xc
 1589 0287 D0000000 		.4byte	.LASF38
 1590 028b 01       		.byte	0x1
 1591 028c 7E02     		.2byte	0x27e
 1592 028e 83000000 		.4byte	0x83
 1593 0292 02       		.uleb128 0x2
 1594 0293 91       		.byte	0x91
 1595 0294 74       		.sleb128 -12
 1596 0295 00       		.byte	0
 1597 0296 0F       		.uleb128 0xf
 1598 0297 20010000 		.4byte	.LASF44
 1599 029b 01       		.byte	0x1
 1600 029c 9502     		.2byte	0x295
 1601 029e 00000000 		.4byte	.LFB13
 1602 02a2 20000000 		.4byte	.LFE13-.LFB13
 1603 02a6 01       		.uleb128 0x1
 1604 02a7 9C       		.byte	0x9c
 1605 02a8 BC020000 		.4byte	0x2bc
 1606 02ac 0C       		.uleb128 0xc
 1607 02ad D0000000 		.4byte	.LASF38
 1608 02b1 01       		.byte	0x1
 1609 02b2 9502     		.2byte	0x295
 1610 02b4 83000000 		.4byte	0x83
 1611 02b8 02       		.uleb128 0x2
 1612 02b9 91       		.byte	0x91
 1613 02ba 74       		.sleb128 -12
 1614 02bb 00       		.byte	0
 1615 02bc 10       		.uleb128 0x10
 1616 02bd 7E030000 		.4byte	.LASF45
 1617 02c1 01       		.byte	0x1
 1618 02c2 B102     		.2byte	0x2b1
 1619 02c4 00000000 		.4byte	.LFB14
 1620 02c8 34000000 		.4byte	.LFE14-.LFB14
 1621 02cc 01       		.uleb128 0x1
 1622 02cd 9C       		.byte	0x9c
 1623 02ce F1020000 		.4byte	0x2f1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 45


 1624 02d2 0C       		.uleb128 0xc
 1625 02d3 ED020000 		.4byte	.LASF34
 1626 02d7 01       		.byte	0x1
 1627 02d8 B102     		.2byte	0x2b1
 1628 02da 83000000 		.4byte	0x83
 1629 02de 02       		.uleb128 0x2
 1630 02df 91       		.byte	0x91
 1631 02e0 74       		.sleb128 -12
 1632 02e1 0C       		.uleb128 0xc
 1633 02e2 5C030000 		.4byte	.LASF46
 1634 02e6 01       		.byte	0x1
 1635 02e7 B102     		.2byte	0x2b1
 1636 02e9 8F000000 		.4byte	0x8f
 1637 02ed 02       		.uleb128 0x2
 1638 02ee 91       		.byte	0x91
 1639 02ef 72       		.sleb128 -14
 1640 02f0 00       		.byte	0
 1641 02f1 10       		.uleb128 0x10
 1642 02f2 7B020000 		.4byte	.LASF47
 1643 02f6 01       		.byte	0x1
 1644 02f7 D302     		.2byte	0x2d3
 1645 02f9 00000000 		.4byte	.LFB15
 1646 02fd 2C000000 		.4byte	.LFE15-.LFB15
 1647 0301 01       		.uleb128 0x1
 1648 0302 9C       		.byte	0x9c
 1649 0303 26030000 		.4byte	0x326
 1650 0307 0C       		.uleb128 0xc
 1651 0308 ED020000 		.4byte	.LASF34
 1652 030c 01       		.byte	0x1
 1653 030d D302     		.2byte	0x2d3
 1654 030f 83000000 		.4byte	0x83
 1655 0313 02       		.uleb128 0x2
 1656 0314 91       		.byte	0x91
 1657 0315 74       		.sleb128 -12
 1658 0316 0C       		.uleb128 0xc
 1659 0317 07000000 		.4byte	.LASF48
 1660 031b 01       		.byte	0x1
 1661 031c D302     		.2byte	0x2d3
 1662 031e 9B000000 		.4byte	0x9b
 1663 0322 02       		.uleb128 0x2
 1664 0323 91       		.byte	0x91
 1665 0324 70       		.sleb128 -16
 1666 0325 00       		.byte	0
 1667 0326 0E       		.uleb128 0xe
 1668 0327 97020000 		.4byte	.LASF49
 1669 032b 01       		.byte	0x1
 1670 032c F402     		.2byte	0x2f4
 1671 032e 8F000000 		.4byte	0x8f
 1672 0332 00000000 		.4byte	.LFB16
 1673 0336 A0000000 		.4byte	.LFE16-.LFB16
 1674 033a 01       		.uleb128 0x1
 1675 033b 9C       		.byte	0x9c
 1676 033c 6E030000 		.4byte	0x36e
 1677 0340 0C       		.uleb128 0xc
 1678 0341 ED020000 		.4byte	.LASF34
 1679 0345 01       		.byte	0x1
 1680 0346 F402     		.2byte	0x2f4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 46


 1681 0348 83000000 		.4byte	0x83
 1682 034c 02       		.uleb128 0x2
 1683 034d 91       		.byte	0x91
 1684 034e 6C       		.sleb128 -20
 1685 034f 0C       		.uleb128 0xc
 1686 0350 63030000 		.4byte	.LASF50
 1687 0354 01       		.byte	0x1
 1688 0355 F402     		.2byte	0x2f4
 1689 0357 8F000000 		.4byte	0x8f
 1690 035b 02       		.uleb128 0x2
 1691 035c 91       		.byte	0x91
 1692 035d 6A       		.sleb128 -22
 1693 035e 0D       		.uleb128 0xd
 1694 035f F0010000 		.4byte	.LASF51
 1695 0363 01       		.byte	0x1
 1696 0364 F602     		.2byte	0x2f6
 1697 0366 8F000000 		.4byte	0x8f
 1698 036a 02       		.uleb128 0x2
 1699 036b 91       		.byte	0x91
 1700 036c 76       		.sleb128 -10
 1701 036d 00       		.byte	0
 1702 036e 0E       		.uleb128 0xe
 1703 036f 94000000 		.4byte	.LASF52
 1704 0373 01       		.byte	0x1
 1705 0374 2A03     		.2byte	0x32a
 1706 0376 9B000000 		.4byte	0x9b
 1707 037a 00000000 		.4byte	.LFB17
 1708 037e 90000000 		.4byte	.LFE17-.LFB17
 1709 0382 01       		.uleb128 0x1
 1710 0383 9C       		.byte	0x9c
 1711 0384 B6030000 		.4byte	0x3b6
 1712 0388 0C       		.uleb128 0xc
 1713 0389 ED020000 		.4byte	.LASF34
 1714 038d 01       		.byte	0x1
 1715 038e 2A03     		.2byte	0x32a
 1716 0390 83000000 		.4byte	0x83
 1717 0394 02       		.uleb128 0x2
 1718 0395 91       		.byte	0x91
 1719 0396 64       		.sleb128 -28
 1720 0397 0C       		.uleb128 0xc
 1721 0398 63030000 		.4byte	.LASF50
 1722 039c 01       		.byte	0x1
 1723 039d 2A03     		.2byte	0x32a
 1724 039f 8F000000 		.4byte	0x8f
 1725 03a3 02       		.uleb128 0x2
 1726 03a4 91       		.byte	0x91
 1727 03a5 62       		.sleb128 -30
 1728 03a6 0D       		.uleb128 0xd
 1729 03a7 07010000 		.4byte	.LASF53
 1730 03ab 01       		.byte	0x1
 1731 03ac 2C03     		.2byte	0x32c
 1732 03ae C1000000 		.4byte	0xc1
 1733 03b2 02       		.uleb128 0x2
 1734 03b3 91       		.byte	0x91
 1735 03b4 68       		.sleb128 -24
 1736 03b5 00       		.byte	0
 1737 03b6 0E       		.uleb128 0xe
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 47


 1738 03b7 16000000 		.4byte	.LASF54
 1739 03bb 01       		.byte	0x1
 1740 03bc 5703     		.2byte	0x357
 1741 03be A7000000 		.4byte	0xa7
 1742 03c2 00000000 		.4byte	.LFB18
 1743 03c6 80000000 		.4byte	.LFE18-.LFB18
 1744 03ca 01       		.uleb128 0x1
 1745 03cb 9C       		.byte	0x9c
 1746 03cc FE030000 		.4byte	0x3fe
 1747 03d0 0C       		.uleb128 0xc
 1748 03d1 ED020000 		.4byte	.LASF34
 1749 03d5 01       		.byte	0x1
 1750 03d6 5703     		.2byte	0x357
 1751 03d8 83000000 		.4byte	0x83
 1752 03dc 02       		.uleb128 0x2
 1753 03dd 91       		.byte	0x91
 1754 03de 64       		.sleb128 -28
 1755 03df 0C       		.uleb128 0xc
 1756 03e0 63030000 		.4byte	.LASF50
 1757 03e4 01       		.byte	0x1
 1758 03e5 5703     		.2byte	0x357
 1759 03e7 8F000000 		.4byte	0x8f
 1760 03eb 02       		.uleb128 0x2
 1761 03ec 91       		.byte	0x91
 1762 03ed 62       		.sleb128 -30
 1763 03ee 0D       		.uleb128 0xd
 1764 03ef 2F010000 		.4byte	.LASF55
 1765 03f3 01       		.byte	0x1
 1766 03f4 5903     		.2byte	0x359
 1767 03f6 A7000000 		.4byte	0xa7
 1768 03fa 02       		.uleb128 0x2
 1769 03fb 91       		.byte	0x91
 1770 03fc 6C       		.sleb128 -20
 1771 03fd 00       		.byte	0
 1772 03fe 11       		.uleb128 0x11
 1773 03ff 0E040000 		.4byte	0x40e
 1774 0403 0E040000 		.4byte	0x40e
 1775 0407 12       		.uleb128 0x12
 1776 0408 EC000000 		.4byte	0xec
 1777 040c 00       		.byte	0
 1778 040d 00       		.byte	0
 1779 040e 13       		.uleb128 0x13
 1780 040f 83000000 		.4byte	0x83
 1781 0413 08       		.uleb128 0x8
 1782 0414 F7020000 		.4byte	.LASF56
 1783 0418 01       		.byte	0x1
 1784 0419 21       		.byte	0x21
 1785 041a 24040000 		.4byte	0x424
 1786 041e 05       		.uleb128 0x5
 1787 041f 03       		.byte	0x3
 1788 0420 00000000 		.4byte	ADC_channelsConfig
 1789 0424 13       		.uleb128 0x13
 1790 0425 FE030000 		.4byte	0x3fe
 1791 0429 14       		.uleb128 0x14
 1792 042a D5000000 		.4byte	.LASF57
 1793 042e 01       		.byte	0x1
 1794 042f 18       		.byte	0x18
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 48


 1795 0430 6B000000 		.4byte	0x6b
 1796 0434 05       		.uleb128 0x5
 1797 0435 03       		.byte	0x3
 1798 0436 00000000 		.4byte	ADC_initVar
 1799 043a 11       		.uleb128 0x11
 1800 043b 4A040000 		.4byte	0x44a
 1801 043f 4A040000 		.4byte	0x44a
 1802 0443 12       		.uleb128 0x12
 1803 0444 EC000000 		.4byte	0xec
 1804 0448 00       		.byte	0
 1805 0449 00       		.byte	0
 1806 044a 05       		.uleb128 0x5
 1807 044b 8F000000 		.4byte	0x8f
 1808 044f 14       		.uleb128 0x14
 1809 0450 C9020000 		.4byte	.LASF58
 1810 0454 01       		.byte	0x1
 1811 0455 19       		.byte	0x19
 1812 0456 60040000 		.4byte	0x460
 1813 045a 05       		.uleb128 0x5
 1814 045b 03       		.byte	0x3
 1815 045c 00000000 		.4byte	ADC_offset
 1816 0460 05       		.uleb128 0x5
 1817 0461 3A040000 		.4byte	0x43a
 1818 0465 11       		.uleb128 0x11
 1819 0466 75040000 		.4byte	0x475
 1820 046a 75040000 		.4byte	0x475
 1821 046e 12       		.uleb128 0x12
 1822 046f EC000000 		.4byte	0xec
 1823 0473 00       		.byte	0
 1824 0474 00       		.byte	0
 1825 0475 05       		.uleb128 0x5
 1826 0476 9B000000 		.4byte	0x9b
 1827 047a 14       		.uleb128 0x14
 1828 047b A8000000 		.4byte	.LASF59
 1829 047f 01       		.byte	0x1
 1830 0480 1A       		.byte	0x1a
 1831 0481 8B040000 		.4byte	0x48b
 1832 0485 05       		.uleb128 0x5
 1833 0486 03       		.byte	0x3
 1834 0487 00000000 		.4byte	ADC_countsPer10Volt
 1835 048b 05       		.uleb128 0x5
 1836 048c 65040000 		.4byte	0x465
 1837 0490 00       		.byte	0
 1838              		.section	.debug_abbrev,"",%progbits
 1839              	.Ldebug_abbrev0:
 1840 0000 01       		.uleb128 0x1
 1841 0001 11       		.uleb128 0x11
 1842 0002 01       		.byte	0x1
 1843 0003 25       		.uleb128 0x25
 1844 0004 0E       		.uleb128 0xe
 1845 0005 13       		.uleb128 0x13
 1846 0006 0B       		.uleb128 0xb
 1847 0007 03       		.uleb128 0x3
 1848 0008 0E       		.uleb128 0xe
 1849 0009 1B       		.uleb128 0x1b
 1850 000a 0E       		.uleb128 0xe
 1851 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 49


 1852 000c 17       		.uleb128 0x17
 1853 000d 11       		.uleb128 0x11
 1854 000e 01       		.uleb128 0x1
 1855 000f 10       		.uleb128 0x10
 1856 0010 17       		.uleb128 0x17
 1857 0011 00       		.byte	0
 1858 0012 00       		.byte	0
 1859 0013 02       		.uleb128 0x2
 1860 0014 24       		.uleb128 0x24
 1861 0015 00       		.byte	0
 1862 0016 0B       		.uleb128 0xb
 1863 0017 0B       		.uleb128 0xb
 1864 0018 3E       		.uleb128 0x3e
 1865 0019 0B       		.uleb128 0xb
 1866 001a 03       		.uleb128 0x3
 1867 001b 0E       		.uleb128 0xe
 1868 001c 00       		.byte	0
 1869 001d 00       		.byte	0
 1870 001e 03       		.uleb128 0x3
 1871 001f 24       		.uleb128 0x24
 1872 0020 00       		.byte	0
 1873 0021 0B       		.uleb128 0xb
 1874 0022 0B       		.uleb128 0xb
 1875 0023 3E       		.uleb128 0x3e
 1876 0024 0B       		.uleb128 0xb
 1877 0025 03       		.uleb128 0x3
 1878 0026 08       		.uleb128 0x8
 1879 0027 00       		.byte	0
 1880 0028 00       		.byte	0
 1881 0029 04       		.uleb128 0x4
 1882 002a 16       		.uleb128 0x16
 1883 002b 00       		.byte	0
 1884 002c 03       		.uleb128 0x3
 1885 002d 0E       		.uleb128 0xe
 1886 002e 3A       		.uleb128 0x3a
 1887 002f 0B       		.uleb128 0xb
 1888 0030 3B       		.uleb128 0x3b
 1889 0031 05       		.uleb128 0x5
 1890 0032 49       		.uleb128 0x49
 1891 0033 13       		.uleb128 0x13
 1892 0034 00       		.byte	0
 1893 0035 00       		.byte	0
 1894 0036 05       		.uleb128 0x5
 1895 0037 35       		.uleb128 0x35
 1896 0038 00       		.byte	0
 1897 0039 49       		.uleb128 0x49
 1898 003a 13       		.uleb128 0x13
 1899 003b 00       		.byte	0
 1900 003c 00       		.byte	0
 1901 003d 06       		.uleb128 0x6
 1902 003e 2E       		.uleb128 0x2e
 1903 003f 00       		.byte	0
 1904 0040 3F       		.uleb128 0x3f
 1905 0041 19       		.uleb128 0x19
 1906 0042 03       		.uleb128 0x3
 1907 0043 0E       		.uleb128 0xe
 1908 0044 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 50


 1909 0045 0B       		.uleb128 0xb
 1910 0046 3B       		.uleb128 0x3b
 1911 0047 0B       		.uleb128 0xb
 1912 0048 27       		.uleb128 0x27
 1913 0049 19       		.uleb128 0x19
 1914 004a 11       		.uleb128 0x11
 1915 004b 01       		.uleb128 0x1
 1916 004c 12       		.uleb128 0x12
 1917 004d 06       		.uleb128 0x6
 1918 004e 40       		.uleb128 0x40
 1919 004f 18       		.uleb128 0x18
 1920 0050 9642     		.uleb128 0x2116
 1921 0052 19       		.uleb128 0x19
 1922 0053 00       		.byte	0
 1923 0054 00       		.byte	0
 1924 0055 07       		.uleb128 0x7
 1925 0056 2E       		.uleb128 0x2e
 1926 0057 01       		.byte	0x1
 1927 0058 3F       		.uleb128 0x3f
 1928 0059 19       		.uleb128 0x19
 1929 005a 03       		.uleb128 0x3
 1930 005b 0E       		.uleb128 0xe
 1931 005c 3A       		.uleb128 0x3a
 1932 005d 0B       		.uleb128 0xb
 1933 005e 3B       		.uleb128 0x3b
 1934 005f 0B       		.uleb128 0xb
 1935 0060 27       		.uleb128 0x27
 1936 0061 19       		.uleb128 0x19
 1937 0062 11       		.uleb128 0x11
 1938 0063 01       		.uleb128 0x1
 1939 0064 12       		.uleb128 0x12
 1940 0065 06       		.uleb128 0x6
 1941 0066 40       		.uleb128 0x40
 1942 0067 18       		.uleb128 0x18
 1943 0068 9642     		.uleb128 0x2116
 1944 006a 19       		.uleb128 0x19
 1945 006b 01       		.uleb128 0x1
 1946 006c 13       		.uleb128 0x13
 1947 006d 00       		.byte	0
 1948 006e 00       		.byte	0
 1949 006f 08       		.uleb128 0x8
 1950 0070 34       		.uleb128 0x34
 1951 0071 00       		.byte	0
 1952 0072 03       		.uleb128 0x3
 1953 0073 0E       		.uleb128 0xe
 1954 0074 3A       		.uleb128 0x3a
 1955 0075 0B       		.uleb128 0xb
 1956 0076 3B       		.uleb128 0x3b
 1957 0077 0B       		.uleb128 0xb
 1958 0078 49       		.uleb128 0x49
 1959 0079 13       		.uleb128 0x13
 1960 007a 02       		.uleb128 0x2
 1961 007b 18       		.uleb128 0x18
 1962 007c 00       		.byte	0
 1963 007d 00       		.byte	0
 1964 007e 09       		.uleb128 0x9
 1965 007f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 51


 1966 0080 00       		.byte	0
 1967 0081 3F       		.uleb128 0x3f
 1968 0082 19       		.uleb128 0x19
 1969 0083 03       		.uleb128 0x3
 1970 0084 0E       		.uleb128 0xe
 1971 0085 3A       		.uleb128 0x3a
 1972 0086 0B       		.uleb128 0xb
 1973 0087 3B       		.uleb128 0x3b
 1974 0088 05       		.uleb128 0x5
 1975 0089 27       		.uleb128 0x27
 1976 008a 19       		.uleb128 0x19
 1977 008b 11       		.uleb128 0x11
 1978 008c 01       		.uleb128 0x1
 1979 008d 12       		.uleb128 0x12
 1980 008e 06       		.uleb128 0x6
 1981 008f 40       		.uleb128 0x40
 1982 0090 18       		.uleb128 0x18
 1983 0091 9642     		.uleb128 0x2116
 1984 0093 19       		.uleb128 0x19
 1985 0094 00       		.byte	0
 1986 0095 00       		.byte	0
 1987 0096 0A       		.uleb128 0xa
 1988 0097 2E       		.uleb128 0x2e
 1989 0098 00       		.byte	0
 1990 0099 3F       		.uleb128 0x3f
 1991 009a 19       		.uleb128 0x19
 1992 009b 03       		.uleb128 0x3
 1993 009c 0E       		.uleb128 0xe
 1994 009d 3A       		.uleb128 0x3a
 1995 009e 0B       		.uleb128 0xb
 1996 009f 3B       		.uleb128 0x3b
 1997 00a0 05       		.uleb128 0x5
 1998 00a1 27       		.uleb128 0x27
 1999 00a2 19       		.uleb128 0x19
 2000 00a3 11       		.uleb128 0x11
 2001 00a4 01       		.uleb128 0x1
 2002 00a5 12       		.uleb128 0x12
 2003 00a6 06       		.uleb128 0x6
 2004 00a7 40       		.uleb128 0x40
 2005 00a8 18       		.uleb128 0x18
 2006 00a9 9742     		.uleb128 0x2117
 2007 00ab 19       		.uleb128 0x19
 2008 00ac 00       		.byte	0
 2009 00ad 00       		.byte	0
 2010 00ae 0B       		.uleb128 0xb
 2011 00af 2E       		.uleb128 0x2e
 2012 00b0 01       		.byte	0x1
 2013 00b1 3F       		.uleb128 0x3f
 2014 00b2 19       		.uleb128 0x19
 2015 00b3 03       		.uleb128 0x3
 2016 00b4 0E       		.uleb128 0xe
 2017 00b5 3A       		.uleb128 0x3a
 2018 00b6 0B       		.uleb128 0xb
 2019 00b7 3B       		.uleb128 0x3b
 2020 00b8 05       		.uleb128 0x5
 2021 00b9 27       		.uleb128 0x27
 2022 00ba 19       		.uleb128 0x19
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 52


 2023 00bb 49       		.uleb128 0x49
 2024 00bc 13       		.uleb128 0x13
 2025 00bd 11       		.uleb128 0x11
 2026 00be 01       		.uleb128 0x1
 2027 00bf 12       		.uleb128 0x12
 2028 00c0 06       		.uleb128 0x6
 2029 00c1 40       		.uleb128 0x40
 2030 00c2 18       		.uleb128 0x18
 2031 00c3 9742     		.uleb128 0x2117
 2032 00c5 19       		.uleb128 0x19
 2033 00c6 01       		.uleb128 0x1
 2034 00c7 13       		.uleb128 0x13
 2035 00c8 00       		.byte	0
 2036 00c9 00       		.byte	0
 2037 00ca 0C       		.uleb128 0xc
 2038 00cb 05       		.uleb128 0x5
 2039 00cc 00       		.byte	0
 2040 00cd 03       		.uleb128 0x3
 2041 00ce 0E       		.uleb128 0xe
 2042 00cf 3A       		.uleb128 0x3a
 2043 00d0 0B       		.uleb128 0xb
 2044 00d1 3B       		.uleb128 0x3b
 2045 00d2 05       		.uleb128 0x5
 2046 00d3 49       		.uleb128 0x49
 2047 00d4 13       		.uleb128 0x13
 2048 00d5 02       		.uleb128 0x2
 2049 00d6 18       		.uleb128 0x18
 2050 00d7 00       		.byte	0
 2051 00d8 00       		.byte	0
 2052 00d9 0D       		.uleb128 0xd
 2053 00da 34       		.uleb128 0x34
 2054 00db 00       		.byte	0
 2055 00dc 03       		.uleb128 0x3
 2056 00dd 0E       		.uleb128 0xe
 2057 00de 3A       		.uleb128 0x3a
 2058 00df 0B       		.uleb128 0xb
 2059 00e0 3B       		.uleb128 0x3b
 2060 00e1 05       		.uleb128 0x5
 2061 00e2 49       		.uleb128 0x49
 2062 00e3 13       		.uleb128 0x13
 2063 00e4 02       		.uleb128 0x2
 2064 00e5 18       		.uleb128 0x18
 2065 00e6 00       		.byte	0
 2066 00e7 00       		.byte	0
 2067 00e8 0E       		.uleb128 0xe
 2068 00e9 2E       		.uleb128 0x2e
 2069 00ea 01       		.byte	0x1
 2070 00eb 3F       		.uleb128 0x3f
 2071 00ec 19       		.uleb128 0x19
 2072 00ed 03       		.uleb128 0x3
 2073 00ee 0E       		.uleb128 0xe
 2074 00ef 3A       		.uleb128 0x3a
 2075 00f0 0B       		.uleb128 0xb
 2076 00f1 3B       		.uleb128 0x3b
 2077 00f2 05       		.uleb128 0x5
 2078 00f3 27       		.uleb128 0x27
 2079 00f4 19       		.uleb128 0x19
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 53


 2080 00f5 49       		.uleb128 0x49
 2081 00f6 13       		.uleb128 0x13
 2082 00f7 11       		.uleb128 0x11
 2083 00f8 01       		.uleb128 0x1
 2084 00f9 12       		.uleb128 0x12
 2085 00fa 06       		.uleb128 0x6
 2086 00fb 40       		.uleb128 0x40
 2087 00fc 18       		.uleb128 0x18
 2088 00fd 9642     		.uleb128 0x2116
 2089 00ff 19       		.uleb128 0x19
 2090 0100 01       		.uleb128 0x1
 2091 0101 13       		.uleb128 0x13
 2092 0102 00       		.byte	0
 2093 0103 00       		.byte	0
 2094 0104 0F       		.uleb128 0xf
 2095 0105 2E       		.uleb128 0x2e
 2096 0106 01       		.byte	0x1
 2097 0107 3F       		.uleb128 0x3f
 2098 0108 19       		.uleb128 0x19
 2099 0109 03       		.uleb128 0x3
 2100 010a 0E       		.uleb128 0xe
 2101 010b 3A       		.uleb128 0x3a
 2102 010c 0B       		.uleb128 0xb
 2103 010d 3B       		.uleb128 0x3b
 2104 010e 05       		.uleb128 0x5
 2105 010f 27       		.uleb128 0x27
 2106 0110 19       		.uleb128 0x19
 2107 0111 11       		.uleb128 0x11
 2108 0112 01       		.uleb128 0x1
 2109 0113 12       		.uleb128 0x12
 2110 0114 06       		.uleb128 0x6
 2111 0115 40       		.uleb128 0x40
 2112 0116 18       		.uleb128 0x18
 2113 0117 9742     		.uleb128 0x2117
 2114 0119 19       		.uleb128 0x19
 2115 011a 01       		.uleb128 0x1
 2116 011b 13       		.uleb128 0x13
 2117 011c 00       		.byte	0
 2118 011d 00       		.byte	0
 2119 011e 10       		.uleb128 0x10
 2120 011f 2E       		.uleb128 0x2e
 2121 0120 01       		.byte	0x1
 2122 0121 3F       		.uleb128 0x3f
 2123 0122 19       		.uleb128 0x19
 2124 0123 03       		.uleb128 0x3
 2125 0124 0E       		.uleb128 0xe
 2126 0125 3A       		.uleb128 0x3a
 2127 0126 0B       		.uleb128 0xb
 2128 0127 3B       		.uleb128 0x3b
 2129 0128 05       		.uleb128 0x5
 2130 0129 27       		.uleb128 0x27
 2131 012a 19       		.uleb128 0x19
 2132 012b 11       		.uleb128 0x11
 2133 012c 01       		.uleb128 0x1
 2134 012d 12       		.uleb128 0x12
 2135 012e 06       		.uleb128 0x6
 2136 012f 40       		.uleb128 0x40
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 54


 2137 0130 18       		.uleb128 0x18
 2138 0131 9642     		.uleb128 0x2116
 2139 0133 19       		.uleb128 0x19
 2140 0134 01       		.uleb128 0x1
 2141 0135 13       		.uleb128 0x13
 2142 0136 00       		.byte	0
 2143 0137 00       		.byte	0
 2144 0138 11       		.uleb128 0x11
 2145 0139 01       		.uleb128 0x1
 2146 013a 01       		.byte	0x1
 2147 013b 49       		.uleb128 0x49
 2148 013c 13       		.uleb128 0x13
 2149 013d 01       		.uleb128 0x1
 2150 013e 13       		.uleb128 0x13
 2151 013f 00       		.byte	0
 2152 0140 00       		.byte	0
 2153 0141 12       		.uleb128 0x12
 2154 0142 21       		.uleb128 0x21
 2155 0143 00       		.byte	0
 2156 0144 49       		.uleb128 0x49
 2157 0145 13       		.uleb128 0x13
 2158 0146 2F       		.uleb128 0x2f
 2159 0147 0B       		.uleb128 0xb
 2160 0148 00       		.byte	0
 2161 0149 00       		.byte	0
 2162 014a 13       		.uleb128 0x13
 2163 014b 26       		.uleb128 0x26
 2164 014c 00       		.byte	0
 2165 014d 49       		.uleb128 0x49
 2166 014e 13       		.uleb128 0x13
 2167 014f 00       		.byte	0
 2168 0150 00       		.byte	0
 2169 0151 14       		.uleb128 0x14
 2170 0152 34       		.uleb128 0x34
 2171 0153 00       		.byte	0
 2172 0154 03       		.uleb128 0x3
 2173 0155 0E       		.uleb128 0xe
 2174 0156 3A       		.uleb128 0x3a
 2175 0157 0B       		.uleb128 0xb
 2176 0158 3B       		.uleb128 0x3b
 2177 0159 0B       		.uleb128 0xb
 2178 015a 49       		.uleb128 0x49
 2179 015b 13       		.uleb128 0x13
 2180 015c 3F       		.uleb128 0x3f
 2181 015d 19       		.uleb128 0x19
 2182 015e 02       		.uleb128 0x2
 2183 015f 18       		.uleb128 0x18
 2184 0160 00       		.byte	0
 2185 0161 00       		.byte	0
 2186 0162 00       		.byte	0
 2187              		.section	.debug_aranges,"",%progbits
 2188 0000 A4000000 		.4byte	0xa4
 2189 0004 0200     		.2byte	0x2
 2190 0006 00000000 		.4byte	.Ldebug_info0
 2191 000a 04       		.byte	0x4
 2192 000b 00       		.byte	0
 2193 000c 0000     		.2byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 55


 2194 000e 0000     		.2byte	0
 2195 0010 00000000 		.4byte	.LFB1
 2196 0014 24000000 		.4byte	.LFE1-.LFB1
 2197 0018 00000000 		.4byte	.LFB2
 2198 001c BC010000 		.4byte	.LFE2-.LFB2
 2199 0020 00000000 		.4byte	.LFB3
 2200 0024 38000000 		.4byte	.LFE3-.LFB3
 2201 0028 00000000 		.4byte	.LFB4
 2202 002c 1C000000 		.4byte	.LFE4-.LFB4
 2203 0030 00000000 		.4byte	.LFB5
 2204 0034 1C000000 		.4byte	.LFE5-.LFB5
 2205 0038 00000000 		.4byte	.LFB6
 2206 003c 20000000 		.4byte	.LFE6-.LFB6
 2207 0040 00000000 		.4byte	.LFB7
 2208 0044 48000000 		.4byte	.LFE7-.LFB7
 2209 0048 00000000 		.4byte	.LFB8
 2210 004c 44000000 		.4byte	.LFE8-.LFB8
 2211 0050 00000000 		.4byte	.LFB9
 2212 0054 20000000 		.4byte	.LFE9-.LFB9
 2213 0058 00000000 		.4byte	.LFB10
 2214 005c 30000000 		.4byte	.LFE10-.LFB10
 2215 0060 00000000 		.4byte	.LFB11
 2216 0064 30000000 		.4byte	.LFE11-.LFB11
 2217 0068 00000000 		.4byte	.LFB12
 2218 006c 20000000 		.4byte	.LFE12-.LFB12
 2219 0070 00000000 		.4byte	.LFB13
 2220 0074 20000000 		.4byte	.LFE13-.LFB13
 2221 0078 00000000 		.4byte	.LFB14
 2222 007c 34000000 		.4byte	.LFE14-.LFB14
 2223 0080 00000000 		.4byte	.LFB15
 2224 0084 2C000000 		.4byte	.LFE15-.LFB15
 2225 0088 00000000 		.4byte	.LFB16
 2226 008c A0000000 		.4byte	.LFE16-.LFB16
 2227 0090 00000000 		.4byte	.LFB17
 2228 0094 90000000 		.4byte	.LFE17-.LFB17
 2229 0098 00000000 		.4byte	.LFB18
 2230 009c 80000000 		.4byte	.LFE18-.LFB18
 2231 00a0 00000000 		.4byte	0
 2232 00a4 00000000 		.4byte	0
 2233              		.section	.debug_ranges,"",%progbits
 2234              	.Ldebug_ranges0:
 2235 0000 00000000 		.4byte	.LFB1
 2236 0004 24000000 		.4byte	.LFE1
 2237 0008 00000000 		.4byte	.LFB2
 2238 000c BC010000 		.4byte	.LFE2
 2239 0010 00000000 		.4byte	.LFB3
 2240 0014 38000000 		.4byte	.LFE3
 2241 0018 00000000 		.4byte	.LFB4
 2242 001c 1C000000 		.4byte	.LFE4
 2243 0020 00000000 		.4byte	.LFB5
 2244 0024 1C000000 		.4byte	.LFE5
 2245 0028 00000000 		.4byte	.LFB6
 2246 002c 20000000 		.4byte	.LFE6
 2247 0030 00000000 		.4byte	.LFB7
 2248 0034 48000000 		.4byte	.LFE7
 2249 0038 00000000 		.4byte	.LFB8
 2250 003c 44000000 		.4byte	.LFE8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 56


 2251 0040 00000000 		.4byte	.LFB9
 2252 0044 20000000 		.4byte	.LFE9
 2253 0048 00000000 		.4byte	.LFB10
 2254 004c 30000000 		.4byte	.LFE10
 2255 0050 00000000 		.4byte	.LFB11
 2256 0054 30000000 		.4byte	.LFE11
 2257 0058 00000000 		.4byte	.LFB12
 2258 005c 20000000 		.4byte	.LFE12
 2259 0060 00000000 		.4byte	.LFB13
 2260 0064 20000000 		.4byte	.LFE13
 2261 0068 00000000 		.4byte	.LFB14
 2262 006c 34000000 		.4byte	.LFE14
 2263 0070 00000000 		.4byte	.LFB15
 2264 0074 2C000000 		.4byte	.LFE15
 2265 0078 00000000 		.4byte	.LFB16
 2266 007c A0000000 		.4byte	.LFE16
 2267 0080 00000000 		.4byte	.LFB17
 2268 0084 90000000 		.4byte	.LFE17
 2269 0088 00000000 		.4byte	.LFB18
 2270 008c 80000000 		.4byte	.LFE18
 2271 0090 00000000 		.4byte	0
 2272 0094 00000000 		.4byte	0
 2273              		.section	.debug_line,"",%progbits
 2274              	.Ldebug_line0:
 2275 0000 90020000 		.section	.debug_str,"MS",%progbits,1
 2275      02004000 
 2275      00000201 
 2275      FB0E0D00 
 2275      01010101 
 2276              	.LASF10:
 2277 0000 75696E74 		.ascii	"uint16\000"
 2277      313600
 2278              	.LASF48:
 2279 0007 61646347 		.ascii	"adcGain\000"
 2279      61696E00 
 2280              	.LASF24:
 2281 000f 636F756E 		.ascii	"counts\000"
 2281      747300
 2282              	.LASF54:
 2283 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2283      436F756E 
 2283      7473546F 
 2283      5F566F6C 
 2283      747300
 2284              	.LASF36:
 2285 0029 4144435F 		.ascii	"ADC_Init\000"
 2285      496E6974 
 2285      00
 2286              	.LASF7:
 2287 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2287      206C6F6E 
 2287      6720756E 
 2287      7369676E 
 2287      65642069 
 2288              	.LASF28:
 2289 0049 4144435F 		.ascii	"ADC_StartConvert\000"
 2289      53746172 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 57


 2289      74436F6E 
 2289      76657274 
 2289      00
 2290              	.LASF6:
 2291 005a 6C6F6E67 		.ascii	"long long int\000"
 2291      206C6F6E 
 2291      6720696E 
 2291      7400
 2292              	.LASF0:
 2293 0068 7369676E 		.ascii	"signed char\000"
 2293      65642063 
 2293      68617200 
 2294              	.LASF30:
 2295 0074 73746174 		.ascii	"status\000"
 2295      757300
 2296              	.LASF13:
 2297 007b 696E7433 		.ascii	"int32\000"
 2297      3200
 2298              	.LASF25:
 2299 0081 4144435F 		.ascii	"ADC_Start\000"
 2299      53746172 
 2299      7400
 2300              	.LASF4:
 2301 008b 6C6F6E67 		.ascii	"long int\000"
 2301      20696E74 
 2301      00
 2302              	.LASF52:
 2303 0094 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2303      436F756E 
 2303      7473546F 
 2303      5F75566F 
 2303      6C747300 
 2304              	.LASF59:
 2305 00a8 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2305      636F756E 
 2305      74735065 
 2305      72313056 
 2305      6F6C7400 
 2306              	.LASF9:
 2307 00bc 75696E74 		.ascii	"uint8\000"
 2307      3800
 2308              	.LASF16:
 2309 00c2 646F7562 		.ascii	"double\000"
 2309      6C6500
 2310              	.LASF11:
 2311 00c9 75696E74 		.ascii	"uint32\000"
 2311      333200
 2312              	.LASF38:
 2313 00d0 6D61736B 		.ascii	"mask\000"
 2313      00
 2314              	.LASF57:
 2315 00d5 4144435F 		.ascii	"ADC_initVar\000"
 2315      696E6974 
 2315      56617200 
 2316              	.LASF33:
 2317 00e1 7265744D 		.ascii	"retMode\000"
 2317      6F646500 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 58


 2318              	.LASF43:
 2319 00e9 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2319      5365744C 
 2319      696D6974 
 2319      4D61736B 
 2319      00
 2320              	.LASF8:
 2321 00fa 756E7369 		.ascii	"unsigned int\000"
 2321      676E6564 
 2321      20696E74 
 2321      00
 2322              	.LASF53:
 2323 0107 75566F6C 		.ascii	"uVolts\000"
 2323      747300
 2324              	.LASF5:
 2325 010e 6C6F6E67 		.ascii	"long unsigned int\000"
 2325      20756E73 
 2325      69676E65 
 2325      6420696E 
 2325      7400
 2326              	.LASF44:
 2327 0120 4144435F 		.ascii	"ADC_SetSatMask\000"
 2327      53657453 
 2327      61744D61 
 2327      736B00
 2328              	.LASF55:
 2329 012f 766F6C74 		.ascii	"volts\000"
 2329      7300
 2330              	.LASF23:
 2331 0135 746D7052 		.ascii	"tmpRegVal\000"
 2331      65675661 
 2331      6C00
 2332              	.LASF3:
 2333 013f 73686F72 		.ascii	"short unsigned int\000"
 2333      7420756E 
 2333      7369676E 
 2333      65642069 
 2333      6E7400
 2334              	.LASF29:
 2335 0152 4144435F 		.ascii	"ADC_StopConvert\000"
 2335      53746F70 
 2335      436F6E76 
 2335      65727400 
 2336              	.LASF60:
 2337 0162 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2337      43313120 
 2337      352E342E 
 2337      31203230 
 2337      31363036 
 2338 0195 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2338      20726576 
 2338      6973696F 
 2338      6E203233 
 2338      37373135 
 2339 01c8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2339      66756E63 
 2339      74696F6E 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 59


 2339      2D736563 
 2339      74696F6E 
 2340              	.LASF51:
 2341 01f0 6D566F6C 		.ascii	"mVolts\000"
 2341      747300
 2342              	.LASF19:
 2343 01f7 72656733 		.ascii	"reg32\000"
 2343      3200
 2344              	.LASF14:
 2345 01fd 666C6F61 		.ascii	"float32\000"
 2345      74333200 
 2346              	.LASF21:
 2347 0205 73697A65 		.ascii	"sizetype\000"
 2347      74797065 
 2347      00
 2348              	.LASF40:
 2349 020e 6C6F774C 		.ascii	"lowLimit\000"
 2349      696D6974 
 2349      00
 2350              	.LASF20:
 2351 0217 6C6F6E67 		.ascii	"long double\000"
 2351      20646F75 
 2351      626C6500 
 2352              	.LASF41:
 2353 0223 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2353      53657448 
 2353      6967684C 
 2353      696D6974 
 2353      00
 2354              	.LASF31:
 2355 0234 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2355      4973456E 
 2355      64436F6E 
 2355      76657273 
 2355      696F6E00 
 2356              	.LASF17:
 2357 0248 696E7436 		.ascii	"int64\000"
 2357      3400
 2358              	.LASF37:
 2359 024e 4144435F 		.ascii	"ADC_SetChanMask\000"
 2359      53657443 
 2359      68616E4D 
 2359      61736B00 
 2360              	.LASF61:
 2361 025e 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2361      72617465 
 2361      645F536F 
 2361      75726365 
 2361      5C50536F 
 2362              	.LASF47:
 2363 027b 4144435F 		.ascii	"ADC_SetGain\000"
 2363      53657447 
 2363      61696E00 
 2364              	.LASF15:
 2365 0287 666C6F61 		.ascii	"float\000"
 2365      7400
 2366              	.LASF42:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 60


 2367 028d 68696768 		.ascii	"highLimit\000"
 2367      4C696D69 
 2367      7400
 2368              	.LASF49:
 2369 0297 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2369      436F756E 
 2369      7473546F 
 2369      5F6D566F 
 2369      6C747300 
 2370              	.LASF39:
 2371 02ab 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2371      5365744C 
 2371      6F774C69 
 2371      6D697400 
 2372              	.LASF1:
 2373 02bb 756E7369 		.ascii	"unsigned char\000"
 2373      676E6564 
 2373      20636861 
 2373      7200
 2374              	.LASF58:
 2375 02c9 4144435F 		.ascii	"ADC_offset\000"
 2375      6F666673 
 2375      657400
 2376              	.LASF2:
 2377 02d4 73686F72 		.ascii	"short int\000"
 2377      7420696E 
 2377      7400
 2378              	.LASF27:
 2379 02de 4144435F 		.ascii	"ADC_Stop\000"
 2379      53746F70 
 2379      00
 2380              	.LASF22:
 2381 02e7 63684E75 		.ascii	"chNum\000"
 2381      6D00
 2382              	.LASF34:
 2383 02ed 6368616E 		.ascii	"chan\000"
 2383      00
 2384              	.LASF18:
 2385 02f2 63686172 		.ascii	"char\000"
 2385      00
 2386              	.LASF56:
 2387 02f7 4144435F 		.ascii	"ADC_channelsConfig\000"
 2387      6368616E 
 2387      6E656C73 
 2387      436F6E66 
 2387      696700
 2388              	.LASF62:
 2389 030a 443A5C43 		.ascii	"D:\\CYTEST\\Micrium_CY8CKIT-044_OS3\\Examples\\Cypr"
 2389      59544553 
 2389      545C4D69 
 2389      63726975 
 2389      6D5F4359 
 2390 0339 6573735C 		.ascii	"ess\\CY8CKIT-044\\OS3\\PSoC\\OS3.cydsn\000"
 2390      43593843 
 2390      4B49542D 
 2390      3034345C 
 2390      4F53335C 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccwUeDZQ.s 			page 61


 2391              	.LASF46:
 2392 035c 6F666673 		.ascii	"offset\000"
 2392      657400
 2393              	.LASF50:
 2394 0363 61646343 		.ascii	"adcCounts\000"
 2394      6F756E74 
 2394      7300
 2395              	.LASF26:
 2396 036d 4144435F 		.ascii	"ADC_Enable\000"
 2396      456E6162 
 2396      6C6500
 2397              	.LASF12:
 2398 0378 696E7431 		.ascii	"int16\000"
 2398      3600
 2399              	.LASF45:
 2400 037e 4144435F 		.ascii	"ADC_SetOffset\000"
 2400      5365744F 
 2400      66667365 
 2400      7400
 2401              	.LASF35:
 2402 038c 72657375 		.ascii	"result\000"
 2402      6C7400
 2403              	.LASF32:
 2404 0393 4144435F 		.ascii	"ADC_GetResult16\000"
 2404      47657452 
 2404      6573756C 
 2404      74313600 
 2405              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
