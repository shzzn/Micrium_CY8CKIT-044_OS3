ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 006CDC02 		.word	48000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 80BB0000 		.word	48000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 30       		.byte	48
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000C05D 		.word	1572864000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.global	CySysClkPumpConfig
 106              		.data
 107              		.align	2
 108              		.type	CySysClkPumpConfig, %object
 109              		.size	CySysClkPumpConfig, 4
 110              	CySysClkPumpConfig:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 3


 111 0010 01000000 		.word	1
 112              		.section	.text.CySysClkImoStart,"ax",%progbits
 113              		.align	2
 114              		.global	CySysClkImoStart
 115              		.code	16
 116              		.thumb_func
 117              		.type	CySysClkImoStart, %function
 118              	CySysClkImoStart:
 119              	.LFB1:
 120              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.80
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 4


  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
 121              		.loc 1 99 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 5


 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 131              		.loc 1 100 0
 132 0004 044B     		ldr	r3, .L2
 133 0006 044A     		ldr	r2, .L2
 134 0008 1268     		ldr	r2, [r2]
 135 000a 8021     		movs	r1, #128
 136 000c 0906     		lsls	r1, r1, #24
 137 000e 0A43     		orrs	r2, r1
 138 0010 1A60     		str	r2, [r3]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
 139              		.loc 1 115 0
 140 0012 C046     		nop
 141 0014 BD46     		mov	sp, r7
 142              		@ sp needed
 143 0016 80BD     		pop	{r7, pc}
 144              	.L3:
 145              		.align	2
 146              	.L2:
 147 0018 08010B40 		.word	1074462984
 148              		.cfi_endproc
 149              	.LFE1:
 150              		.size	CySysClkImoStart, .-CySysClkImoStart
 151              		.section	.text.CySysClkImoStop,"ax",%progbits
 152              		.align	2
 153              		.global	CySysClkImoStop
 154              		.code	16
 155              		.thumb_func
 156              		.type	CySysClkImoStop, %function
 157              	CySysClkImoStop:
 158              	.LFB2:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 6


 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 126:Generated_Source\PSoC4/CyLib.c **** *
 127:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 130:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 131:Generated_Source\PSoC4/CyLib.c **** {
 159              		.loc 1 131 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 132:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 133:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 169              		.loc 1 133 0
 170 0004 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 134:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 135:Generated_Source\PSoC4/CyLib.c **** 
 136:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 137:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 138:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 139:Generated_Source\PSoC4/CyLib.c **** 
 140:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 171              		.loc 1 140 0
 172 0008 044B     		ldr	r3, .L5
 173 000a 044A     		ldr	r2, .L5
 174 000c 1268     		ldr	r2, [r2]
 175 000e 5200     		lsls	r2, r2, #1
 176 0010 5208     		lsrs	r2, r2, #1
 177 0012 1A60     		str	r2, [r3]
 141:Generated_Source\PSoC4/CyLib.c **** }
 178              		.loc 1 141 0
 179 0014 C046     		nop
 180 0016 BD46     		mov	sp, r7
 181              		@ sp needed
 182 0018 80BD     		pop	{r7, pc}
 183              	.L6:
 184 001a C046     		.align	2
 185              	.L5:
 186 001c 08010B40 		.word	1074462984
 187              		.cfi_endproc
 188              	.LFE2:
 189              		.size	CySysClkImoStop, .-CySysClkImoStop
 190              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 191              		.align	2
 192              		.global	CySysClkImoEnableWcoLock
 193              		.code	16
 194              		.thumb_func
 195              		.type	CySysClkImoEnableWcoLock, %function
 196              	CySysClkImoEnableWcoLock:
 197              	.LFB3:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 7


 142:Generated_Source\PSoC4/CyLib.c **** 
 143:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 146:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 147:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 148:Generated_Source\PSoC4/CyLib.c ****     *
 149:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 150:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 151:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 152:Generated_Source\PSoC4/CyLib.c ****     *
 153:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 154:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 155:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 156:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 157:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 160:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 163:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 166:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 167:Generated_Source\PSoC4/CyLib.c ****     {
 198              		.loc 1 167 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 24
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202 0000 90B5     		push	{r4, r7, lr}
 203              		.cfi_def_cfa_offset 12
 204              		.cfi_offset 4, -12
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 87B0     		sub	sp, sp, #28
 208              		.cfi_def_cfa_offset 40
 209 0004 00AF     		add	r7, sp, #0
 210              		.cfi_def_cfa_register 7
 168:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 169:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 170:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 171:Generated_Source\PSoC4/CyLib.c **** 
 172:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 173:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 174:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 211              		.loc 1 175 0
 212 0006 0023     		movs	r3, #0
 213 0008 FB60     		str	r3, [r7, #12]
 176:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 214              		.loc 1 178 0
 215 000a FFF7FEFF 		bl	CySysClkWcoEnabled
 216 000e 031E     		subs	r3, r0, #0
 217 0010 00D1     		bne	.LCB81
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 8


 218 0012 7EE0     		b	.L16	@long jump
 219              	.LCB81:
 179:Generated_Source\PSoC4/CyLib.c ****         {
 180:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 220              		.loc 1 180 0
 221 0014 0B23     		movs	r3, #11
 222 0016 FC18     		adds	r4, r7, r3
 223 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 224 001c 0300     		movs	r3, r0
 225 001e 2370     		strb	r3, [r4]
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 183:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 185:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 186:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 187:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 188:Generated_Source\PSoC4/CyLib.c **** 
 189:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 190:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 191:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 226              		.loc 1 191 0
 227 0020 0323     		movs	r3, #3
 228 0022 3B61     		str	r3, [r7, #16]
 192:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 229              		.loc 1 192 0
 230 0024 0023     		movs	r3, #0
 231 0026 7B61     		str	r3, [r7, #20]
 232 0028 11E0     		b	.L9
 233              	.L12:
 193:Generated_Source\PSoC4/CyLib.c ****                 {
 194:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 234              		.loc 1 194 0
 235 002a 3C4B     		ldr	r3, .L17
 236 002c 1B68     		ldr	r3, [r3]
 237 002e 1A00     		movs	r2, r3
 238 0030 3F23     		movs	r3, #63
 239 0032 1340     		ands	r3, r2
 240 0034 3A49     		ldr	r1, .L17+4
 241 0036 7A69     		ldr	r2, [r7, #20]
 242 0038 8A18     		adds	r2, r1, r2
 243 003a 1278     		ldrb	r2, [r2]
 244 003c 9342     		cmp	r3, r2
 245 003e 03D1     		bne	.L10
 195:Generated_Source\PSoC4/CyLib.c ****                     {
 196:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 246              		.loc 1 196 0
 247 0040 7B69     		ldr	r3, [r7, #20]
 248 0042 0333     		adds	r3, r3, #3
 249 0044 3B61     		str	r3, [r7, #16]
 197:Generated_Source\PSoC4/CyLib.c ****                         break;
 250              		.loc 1 197 0
 251 0046 05E0     		b	.L11
 252              	.L10:
 192:Generated_Source\PSoC4/CyLib.c ****                 {
 253              		.loc 1 192 0 discriminator 2
 254 0048 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 9


 255 004a 0133     		adds	r3, r3, #1
 256 004c 7B61     		str	r3, [r7, #20]
 257              	.L9:
 192:Generated_Source\PSoC4/CyLib.c ****                 {
 258              		.loc 1 192 0 is_stmt 0 discriminator 1
 259 004e 7B69     		ldr	r3, [r7, #20]
 260 0050 2D2B     		cmp	r3, #45
 261 0052 EAD9     		bls	.L12
 262              	.L11:
 198:Generated_Source\PSoC4/CyLib.c ****                     }
 199:Generated_Source\PSoC4/CyLib.c ****                 }
 200:Generated_Source\PSoC4/CyLib.c ****             #else
 201:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 202:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 203:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 204:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 205:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 206:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 207:Generated_Source\PSoC4/CyLib.c ****                 #else
 208:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 209:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 210:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 211:Generated_Source\PSoC4/CyLib.c **** 
 212:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 213:Generated_Source\PSoC4/CyLib.c ****             
 214:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 263              		.loc 1 214 0 is_stmt 1
 264 0054 334B     		ldr	r3, .L17+8
 265 0056 0022     		movs	r2, #0
 266 0058 1A60     		str	r2, [r3]
 215:Generated_Source\PSoC4/CyLib.c ****             
 216:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 217:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 218:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 267              		.loc 1 218 0
 268 005a 334B     		ldr	r3, .L17+12
 269 005c 1B68     		ldr	r3, [r3]
 270 005e 1F22     		movs	r2, #31
 271 0060 1340     		ands	r3, r2
 272 0062 07D1     		bne	.L13
 219:Generated_Source\PSoC4/CyLib.c ****                 {
 220:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 273              		.loc 1 220 0
 274 0064 304B     		ldr	r3, .L17+12
 275 0066 304A     		ldr	r2, .L17+12
 276 0068 1268     		ldr	r2, [r2]
 277 006a 1F21     		movs	r1, #31
 278 006c 8A43     		bics	r2, r1
 279 006e 0C21     		movs	r1, #12
 280 0070 0A43     		orrs	r2, r1
 281 0072 1A60     		str	r2, [r3]
 282              	.L13:
 221:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 222:Generated_Source\PSoC4/CyLib.c ****                 }
 223:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 224:Generated_Source\PSoC4/CyLib.c **** 
 225:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 10


 283              		.loc 1 225 0
 284 0074 2D4B     		ldr	r3, .L17+16
 285 0076 1B68     		ldr	r3, [r3]
 286 0078 2D4A     		ldr	r2, .L17+20
 287 007a 1340     		ands	r3, r2
 288 007c 7B60     		str	r3, [r7, #4]
 226:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 229:Generated_Source\PSoC4/CyLib.c **** 
 230:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 231:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 289              		.loc 1 231 0
 290 007e 3B69     		ldr	r3, [r7, #16]
 291 0080 2C4A     		ldr	r2, .L17+24
 292 0082 5343     		muls	r3, r2
 293 0084 8022     		movs	r2, #128
 294 0086 D201     		lsls	r2, r2, #7
 295 0088 9446     		mov	ip, r2
 296 008a 6344     		add	r3, r3, ip
 297 008c DB0B     		lsrs	r3, r3, #15
 298 008e 013B     		subs	r3, r3, #1
 299 0090 5B05     		lsls	r3, r3, #21
 300 0092 5B0D     		lsrs	r3, r3, #21
 301 0094 7A68     		ldr	r2, [r7, #4]
 302 0096 1343     		orrs	r3, r2
 303 0098 7B60     		str	r3, [r7, #4]
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 234:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 304              		.loc 1 234 0
 305 009a 7B68     		ldr	r3, [r7, #4]
 306 009c A022     		movs	r2, #160
 307 009e 5203     		lsls	r2, r2, #13
 308 00a0 1343     		orrs	r3, r2
 309 00a2 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/CyLib.c **** 
 236:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 310              		.loc 1 236 0
 311 00a4 214B     		ldr	r3, .L17+16
 312 00a6 7A68     		ldr	r2, [r7, #4]
 313 00a8 1A60     		str	r2, [r3]
 237:Generated_Source\PSoC4/CyLib.c ****             
 238:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 314              		.loc 1 238 0
 315 00aa 234B     		ldr	r3, .L17+28
 316 00ac 1B68     		ldr	r3, [r3]
 317 00ae 3B60     		str	r3, [r7]
 239:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 318              		.loc 1 239 0
 319 00b0 3020     		movs	r0, #48
 320 00b2 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 240:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 321              		.loc 1 240 0
 322 00b6 214B     		ldr	r3, .L17+32
 323 00b8 204A     		ldr	r2, .L17+32
 324 00ba 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 11


 325 00bc 8021     		movs	r1, #128
 326 00be C905     		lsls	r1, r1, #23
 327 00c0 0A43     		orrs	r2, r1
 328 00c2 1A60     		str	r2, [r3]
 241:Generated_Source\PSoC4/CyLib.c **** 
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 329              		.loc 1 242 0
 330 00c4 194B     		ldr	r3, .L17+16
 331 00c6 1B68     		ldr	r3, [r3]
 332 00c8 1D4A     		ldr	r2, .L17+36
 333 00ca 1340     		ands	r3, r2
 334 00cc 7B60     		str	r3, [r7, #4]
 243:Generated_Source\PSoC4/CyLib.c ****             
 244:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 335              		.loc 1 244 0
 336 00ce 0BE0     		b	.L14
 337              	.L15:
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 338              		.loc 1 246 0
 339 00d0 0120     		movs	r0, #1
 340 00d2 FFF7FEFF 		bl	CyDelay
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 341              		.loc 1 247 0
 342 00d6 FB68     		ldr	r3, [r7, #12]
 343 00d8 1033     		adds	r3, r3, #16
 344 00da FB60     		str	r3, [r7, #12]
 248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 345              		.loc 1 248 0
 346 00dc 134B     		ldr	r3, .L17+16
 347 00de FA68     		ldr	r2, [r7, #12]
 348 00e0 9105     		lsls	r1, r2, #22
 349 00e2 7A68     		ldr	r2, [r7, #4]
 350 00e4 0A43     		orrs	r2, r1
 351 00e6 1A60     		str	r2, [r3]
 352              	.L14:
 244:Generated_Source\PSoC4/CyLib.c ****             {
 353              		.loc 1 244 0
 354 00e8 FB68     		ldr	r3, [r7, #12]
 355 00ea EE2B     		cmp	r3, #238
 356 00ec F0D9     		bls	.L15
 249:Generated_Source\PSoC4/CyLib.c ****             }
 250:Generated_Source\PSoC4/CyLib.c **** 
 251:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 357              		.loc 1 251 0
 358 00ee 0120     		movs	r0, #1
 359 00f0 FFF7FEFF 		bl	CyDelay
 252:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 360              		.loc 1 252 0
 361 00f4 0D4B     		ldr	r3, .L17+16
 362 00f6 7A68     		ldr	r2, [r7, #4]
 363 00f8 FF21     		movs	r1, #255
 364 00fa 8905     		lsls	r1, r1, #22
 365 00fc 0A43     		orrs	r2, r1
 366 00fe 1A60     		str	r2, [r3]
 253:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 254:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 12


 255:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 367              		.loc 1 255 0
 368 0100 0D4B     		ldr	r3, .L17+28
 369 0102 3A68     		ldr	r2, [r7]
 370 0104 1A60     		str	r2, [r3]
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 371              		.loc 1 257 0
 372 0106 0B23     		movs	r3, #11
 373 0108 FB18     		adds	r3, r7, r3
 374 010a 1B78     		ldrb	r3, [r3]
 375 010c 1800     		movs	r0, r3
 376 010e FFF7FEFF 		bl	CyExitCriticalSection
 377              	.L16:
 258:Generated_Source\PSoC4/CyLib.c ****         }
 259:Generated_Source\PSoC4/CyLib.c ****     }
 378              		.loc 1 259 0
 379 0112 C046     		nop
 380 0114 BD46     		mov	sp, r7
 381 0116 07B0     		add	sp, sp, #28
 382              		@ sp needed
 383 0118 90BD     		pop	{r4, r7, pc}
 384              	.L18:
 385 011a C046     		.align	2
 386              	.L17:
 387 011c 2CFF0B40 		.word	1074528044
 388 0120 00000000 		.word	cyImoFreqMhz2Reg
 389 0124 28FF0B40 		.word	1074528040
 390 0128 34FF0B40 		.word	1074528052
 391 012c 08002240 		.word	1075970056
 392 0130 00F800C0 		.word	-1073678336
 393 0134 40420F00 		.word	1000000
 394 0138 30001040 		.word	1074790448
 395 013c 00002240 		.word	1075970048
 396 0140 FFFF3FC0 		.word	-1069547521
 397              		.cfi_endproc
 398              	.LFE3:
 399              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 400              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
 401              		.align	2
 402              		.global	CySysClkImoDisableWcoLock
 403              		.code	16
 404              		.thumb_func
 405              		.type	CySysClkImoDisableWcoLock, %function
 406              	CySysClkImoDisableWcoLock:
 407              	.LFB4:
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 263:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 264:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 265:Generated_Source\PSoC4/CyLib.c ****     *
 266:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 267:Generated_Source\PSoC4/CyLib.c ****     *
 268:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 269:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 270:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 13


 271:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 272:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 275:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 276:Generated_Source\PSoC4/CyLib.c ****     {
 408              		.loc 1 276 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 8
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412 0000 80B5     		push	{r7, lr}
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 82B0     		sub	sp, sp, #8
 417              		.cfi_def_cfa_offset 16
 418 0004 00AF     		add	r7, sp, #0
 419              		.cfi_def_cfa_register 7
 277:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 278:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 279:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 280:Generated_Source\PSoC4/CyLib.c **** 
 281:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 282:Generated_Source\PSoC4/CyLib.c ****         
 283:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 285:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 420              		.loc 1 285 0
 421 0006 0323     		movs	r3, #3
 422 0008 3B60     		str	r3, [r7]
 286:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 423              		.loc 1 286 0
 424 000a 0023     		movs	r3, #0
 425 000c 7B60     		str	r3, [r7, #4]
 426 000e 11E0     		b	.L20
 427              	.L23:
 287:Generated_Source\PSoC4/CyLib.c ****             {
 288:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 428              		.loc 1 288 0
 429 0010 134B     		ldr	r3, .L24
 430 0012 1B68     		ldr	r3, [r3]
 431 0014 1A00     		movs	r2, r3
 432 0016 3F23     		movs	r3, #63
 433 0018 1340     		ands	r3, r2
 434 001a 1249     		ldr	r1, .L24+4
 435 001c 7A68     		ldr	r2, [r7, #4]
 436 001e 8A18     		adds	r2, r1, r2
 437 0020 1278     		ldrb	r2, [r2]
 438 0022 9342     		cmp	r3, r2
 439 0024 03D1     		bne	.L21
 289:Generated_Source\PSoC4/CyLib.c ****                 {
 290:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 440              		.loc 1 290 0
 441 0026 7B68     		ldr	r3, [r7, #4]
 442 0028 0333     		adds	r3, r3, #3
 443 002a 3B60     		str	r3, [r7]
 291:Generated_Source\PSoC4/CyLib.c ****                     break;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 14


 444              		.loc 1 291 0
 445 002c 05E0     		b	.L22
 446              	.L21:
 286:Generated_Source\PSoC4/CyLib.c ****             {
 447              		.loc 1 286 0 discriminator 2
 448 002e 7B68     		ldr	r3, [r7, #4]
 449 0030 0133     		adds	r3, r3, #1
 450 0032 7B60     		str	r3, [r7, #4]
 451              	.L20:
 286:Generated_Source\PSoC4/CyLib.c ****             {
 452              		.loc 1 286 0 is_stmt 0 discriminator 1
 453 0034 7B68     		ldr	r3, [r7, #4]
 454 0036 2D2B     		cmp	r3, #45
 455 0038 EAD9     		bls	.L23
 456              	.L22:
 292:Generated_Source\PSoC4/CyLib.c ****                 }
 293:Generated_Source\PSoC4/CyLib.c ****             }
 294:Generated_Source\PSoC4/CyLib.c ****         #else
 295:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 296:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 297:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 298:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 299:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
 300:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 301:Generated_Source\PSoC4/CyLib.c ****             #else
 302:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 303:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 304:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 305:Generated_Source\PSoC4/CyLib.c **** 
 306:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 457              		.loc 1 308 0 is_stmt 1
 458 003a 0B4B     		ldr	r3, .L24+8
 459 003c 0A4A     		ldr	r2, .L24+8
 460 003e 1268     		ldr	r2, [r2]
 461 0040 0A49     		ldr	r1, .L24+12
 462 0042 0A40     		ands	r2, r1
 463 0044 1A60     		str	r2, [r3]
 309:Generated_Source\PSoC4/CyLib.c ****         
 310:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 312:Generated_Source\PSoC4/CyLib.c ****         #else
 313:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 464              		.loc 1 313 0
 465 0046 0A4B     		ldr	r3, .L24+16
 466 0048 3A68     		ldr	r2, [r7]
 467 004a 0A49     		ldr	r1, .L24+20
 468 004c 8C46     		mov	ip, r1
 469 004e 6244     		add	r2, r2, ip
 470 0050 1278     		ldrb	r2, [r2]
 471 0052 D2B2     		uxtb	r2, r2
 472 0054 1A60     		str	r2, [r3]
 314:Generated_Source\PSoC4/CyLib.c ****         #endif
 315:Generated_Source\PSoC4/CyLib.c ****     }
 473              		.loc 1 315 0
 474 0056 C046     		nop
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 15


 475 0058 BD46     		mov	sp, r7
 476 005a 02B0     		add	sp, sp, #8
 477              		@ sp needed
 478 005c 80BD     		pop	{r7, pc}
 479              	.L25:
 480 005e C046     		.align	2
 481              	.L24:
 482 0060 2CFF0B40 		.word	1074528044
 483 0064 00000000 		.word	cyImoFreqMhz2Reg
 484 0068 00002240 		.word	1075970048
 485 006c FFFFFFBF 		.word	-1073741825
 486 0070 28FF0B40 		.word	1074528040
 487 0074 CDF1FF0F 		.word	268431821
 488              		.cfi_endproc
 489              	.LFE4:
 490              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 491              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 492              		.align	2
 493              		.global	CySysClkImoGetWcoLock
 494              		.code	16
 495              		.thumb_func
 496              		.type	CySysClkImoGetWcoLock, %function
 497              	CySysClkImoGetWcoLock:
 498              	.LFB5:
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 320:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 325:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 499              		.loc 1 332 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 1, uses_anonymous_args = 0
 503 0000 80B5     		push	{r7, lr}
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 7, -8
 506              		.cfi_offset 14, -4
 507 0002 00AF     		add	r7, sp, #0
 508              		.cfi_def_cfa_register 7
 333:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 509              		.loc 1 333 0
 510 0004 054B     		ldr	r3, .L30
 511 0006 1A68     		ldr	r2, [r3]
 512 0008 8023     		movs	r3, #128
 513 000a DB05     		lsls	r3, r3, #23
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 16


 514 000c 1340     		ands	r3, r2
 334:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 515              		.loc 1 334 0
 516 000e 01D0     		beq	.L27
 517              		.loc 1 334 0 is_stmt 0 discriminator 1
 518 0010 0123     		movs	r3, #1
 333:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 519              		.loc 1 333 0 is_stmt 1 discriminator 1
 520 0012 00E0     		b	.L29
 521              	.L27:
 522              		.loc 1 334 0 discriminator 2
 523 0014 0023     		movs	r3, #0
 524              	.L29:
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 336:Generated_Source\PSoC4/CyLib.c ****     }
 525              		.loc 1 336 0 discriminator 1
 526 0016 1800     		movs	r0, r3
 527 0018 BD46     		mov	sp, r7
 528              		@ sp needed
 529 001a 80BD     		pop	{r7, pc}
 530              	.L31:
 531              		.align	2
 532              	.L30:
 533 001c 00002240 		.word	1075970048
 534              		.cfi_endproc
 535              	.LFE5:
 536              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 537              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 538              		.align	2
 539              		.global	CySysClkWriteHfclkDirect
 540              		.code	16
 541              		.thumb_func
 542              		.type	CySysClkWriteHfclkDirect, %function
 543              	CySysClkWriteHfclkDirect:
 544              	.LFB6:
 337:Generated_Source\PSoC4/CyLib.c **** 
 338:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 339:Generated_Source\PSoC4/CyLib.c **** 
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 344:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 345:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 346:Generated_Source\PSoC4/CyLib.c ****     *
 347:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 348:Generated_Source\PSoC4/CyLib.c ****     *
 349:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 352:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 355:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 358:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 17


 359:Generated_Source\PSoC4/CyLib.c ****     {
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 362:Generated_Source\PSoC4/CyLib.c ****             
 363:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 364:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 365:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 368:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 369:Generated_Source\PSoC4/CyLib.c **** 
 370:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 371:Generated_Source\PSoC4/CyLib.c ****             {
 372:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 373:Generated_Source\PSoC4/CyLib.c ****                 {
 374:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 375:Generated_Source\PSoC4/CyLib.c ****                     break;
 376:Generated_Source\PSoC4/CyLib.c ****                 }
 377:Generated_Source\PSoC4/CyLib.c ****             }
 378:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 379:Generated_Source\PSoC4/CyLib.c ****         
 380:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 381:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 382:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 383:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 384:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 385:Generated_Source\PSoC4/CyLib.c **** 
 386:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 387:Generated_Source\PSoC4/CyLib.c ****            
 388:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 389:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 390:Generated_Source\PSoC4/CyLib.c ****             
 391:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 392:Generated_Source\PSoC4/CyLib.c ****             {
 393:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 394:Generated_Source\PSoC4/CyLib.c ****                 
 395:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 396:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 397:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 398:Generated_Source\PSoC4/CyLib.c ****                 
 399:Generated_Source\PSoC4/CyLib.c ****             }
 400:Generated_Source\PSoC4/CyLib.c ****             else
 401:Generated_Source\PSoC4/CyLib.c ****             {
 402:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 403:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 404:Generated_Source\PSoC4/CyLib.c **** 
 405:Generated_Source\PSoC4/CyLib.c ****             }
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 408:Generated_Source\PSoC4/CyLib.c ****             {
 409:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 410:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 412:Generated_Source\PSoC4/CyLib.c ****             }
 413:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 414:Generated_Source\PSoC4/CyLib.c ****             {
 415:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 18


 416:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 418:Generated_Source\PSoC4/CyLib.c ****             }
 419:Generated_Source\PSoC4/CyLib.c ****             else
 420:Generated_Source\PSoC4/CyLib.c ****             {
 421:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 422:Generated_Source\PSoC4/CyLib.c ****             }
 423:Generated_Source\PSoC4/CyLib.c ****             
 424:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 427:Generated_Source\PSoC4/CyLib.c ****     }
 428:Generated_Source\PSoC4/CyLib.c **** 
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 431:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 432:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 433:Generated_Source\PSoC4/CyLib.c ****     *
 434:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 435:Generated_Source\PSoC4/CyLib.c ****     *
 436:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 437:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 438:Generated_Source\PSoC4/CyLib.c ****     *
 439:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 440:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 441:Generated_Source\PSoC4/CyLib.c ****     *
 442:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 443:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 446:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 447:Generated_Source\PSoC4/CyLib.c ****             
 448:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 449:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 450:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 451:Generated_Source\PSoC4/CyLib.c **** 
 452:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 453:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 454:Generated_Source\PSoC4/CyLib.c **** 
 455:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 456:Generated_Source\PSoC4/CyLib.c ****             {
 457:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 458:Generated_Source\PSoC4/CyLib.c ****                 {
 459:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 460:Generated_Source\PSoC4/CyLib.c ****                     break;
 461:Generated_Source\PSoC4/CyLib.c ****                 }
 462:Generated_Source\PSoC4/CyLib.c ****             }           
 463:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 464:Generated_Source\PSoC4/CyLib.c ****         
 465:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 466:Generated_Source\PSoC4/CyLib.c **** 
 467:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 468:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 469:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 470:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 471:Generated_Source\PSoC4/CyLib.c **** 
 472:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 19


 473:Generated_Source\PSoC4/CyLib.c ****             {
 474:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 475:Generated_Source\PSoC4/CyLib.c ****             }
 476:Generated_Source\PSoC4/CyLib.c ****             
 477:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 478:Generated_Source\PSoC4/CyLib.c ****             
 479:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 480:Generated_Source\PSoC4/CyLib.c ****     }
 481:Generated_Source\PSoC4/CyLib.c **** 
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 484:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 485:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 486:Generated_Source\PSoC4/CyLib.c ****     *
 487:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 488:Generated_Source\PSoC4/CyLib.c ****     *
 489:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 490:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 491:Generated_Source\PSoC4/CyLib.c ****     *
 492:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 494:Generated_Source\PSoC4/CyLib.c ****     *
 495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 497:Generated_Source\PSoC4/CyLib.c ****     {
 498:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 499:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 501:Generated_Source\PSoC4/CyLib.c ****     }
 502:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 503:Generated_Source\PSoC4/CyLib.c **** 
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 509:Generated_Source\PSoC4/CyLib.c **** *
 510:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 513:Generated_Source\PSoC4/CyLib.c **** *
 514:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 515:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 516:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 517:Generated_Source\PSoC4/CyLib.c **** *
 518:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 519:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 520:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 521:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 522:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 524:Generated_Source\PSoC4/CyLib.c **** *
 525:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 526:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 527:Generated_Source\PSoC4/CyLib.c **** *
 528:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 529:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 20


 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 532:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 533:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 534:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 535:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 536:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 539:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 540:Generated_Source\PSoC4/CyLib.c **** {
 545              		.loc 1 540 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 16
 548              		@ frame_needed = 1, uses_anonymous_args = 0
 549 0000 90B5     		push	{r4, r7, lr}
 550              		.cfi_def_cfa_offset 12
 551              		.cfi_offset 4, -12
 552              		.cfi_offset 7, -8
 553              		.cfi_offset 14, -4
 554 0002 85B0     		sub	sp, sp, #20
 555              		.cfi_def_cfa_offset 32
 556 0004 00AF     		add	r7, sp, #0
 557              		.cfi_def_cfa_register 7
 558 0006 7860     		str	r0, [r7, #4]
 541:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 542:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 543:Generated_Source\PSoC4/CyLib.c ****     
 544:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 545:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 559              		.loc 1 548 0
 560 0008 0F23     		movs	r3, #15
 561 000a FC18     		adds	r4, r7, r3
 562 000c FFF7FEFF 		bl	CyEnterCriticalSection
 563 0010 0300     		movs	r3, r0
 564 0012 2370     		strb	r3, [r4]
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 551:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 552:Generated_Source\PSoC4/CyLib.c ****     {
 553:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 555:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 556:Generated_Source\PSoC4/CyLib.c ****         
 557:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 558:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 560:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 561:Generated_Source\PSoC4/CyLib.c ****         
 562:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 563:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 564:Generated_Source\PSoC4/CyLib.c ****         
 565:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 566:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 21


 567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****         }
 570:Generated_Source\PSoC4/CyLib.c ****         
 571:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 572:Generated_Source\PSoC4/CyLib.c ****     }
 573:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 574:Generated_Source\PSoC4/CyLib.c **** 
 575:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 565              		.loc 1 575 0
 566 0014 0B4B     		ldr	r3, .L33
 567 0016 1B68     		ldr	r3, [r3]
 568 0018 0722     		movs	r2, #7
 569 001a 9343     		bics	r3, r2
 570 001c BB60     		str	r3, [r7, #8]
 576:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 577:Generated_Source\PSoC4/CyLib.c **** 
 578:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 579:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 580:Generated_Source\PSoC4/CyLib.c ****     {
 581:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 582:Generated_Source\PSoC4/CyLib.c ****     }
 583:Generated_Source\PSoC4/CyLib.c ****     else
 584:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 585:Generated_Source\PSoC4/CyLib.c ****     {
 586:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 571              		.loc 1 586 0
 572 001e 7B68     		ldr	r3, [r7, #4]
 573 0020 0722     		movs	r2, #7
 574 0022 1340     		ands	r3, r2
 575 0024 BA68     		ldr	r2, [r7, #8]
 576 0026 1343     		orrs	r3, r2
 577 0028 BB60     		str	r3, [r7, #8]
 587:Generated_Source\PSoC4/CyLib.c ****     }   
 588:Generated_Source\PSoC4/CyLib.c ****     
 589:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 578              		.loc 1 589 0
 579 002a 064B     		ldr	r3, .L33
 580 002c BA68     		ldr	r2, [r7, #8]
 581 002e 1A60     		str	r2, [r3]
 590:Generated_Source\PSoC4/CyLib.c ****     
 591:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 582              		.loc 1 591 0
 583 0030 0F23     		movs	r3, #15
 584 0032 FB18     		adds	r3, r7, r3
 585 0034 1B78     		ldrb	r3, [r3]
 586 0036 1800     		movs	r0, r3
 587 0038 FFF7FEFF 		bl	CyExitCriticalSection
 592:Generated_Source\PSoC4/CyLib.c **** }
 588              		.loc 1 592 0
 589 003c C046     		nop
 590 003e BD46     		mov	sp, r7
 591 0040 05B0     		add	sp, sp, #20
 592              		@ sp needed
 593 0042 90BD     		pop	{r4, r7, pc}
 594              	.L34:
 595              		.align	2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 22


 596              	.L33:
 597 0044 00010B40 		.word	1074462976
 598              		.cfi_endproc
 599              	.LFE6:
 600              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 601              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 602              		.align	2
 603              		.global	CySysEnablePumpClock
 604              		.code	16
 605              		.thumb_func
 606              		.type	CySysEnablePumpClock, %function
 607              	CySysEnablePumpClock:
 608              	.LFB7:
 593:Generated_Source\PSoC4/CyLib.c **** 
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 596:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 597:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 598:Generated_Source\PSoC4/CyLib.c **** *
 599:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 600:Generated_Source\PSoC4/CyLib.c **** *
 601:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 602:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 604:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 605:Generated_Source\PSoC4/CyLib.c **** *
 606:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 607:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 608:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 609:Generated_Source\PSoC4/CyLib.c **** *
 610:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 611:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 612:Generated_Source\PSoC4/CyLib.c **** {
 609              		.loc 1 612 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 8
 612              		@ frame_needed = 1, uses_anonymous_args = 0
 613 0000 80B5     		push	{r7, lr}
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 7, -8
 616              		.cfi_offset 14, -4
 617 0002 82B0     		sub	sp, sp, #8
 618              		.cfi_def_cfa_offset 16
 619 0004 00AF     		add	r7, sp, #0
 620              		.cfi_def_cfa_register 7
 621 0006 7860     		str	r0, [r7, #4]
 613:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 614:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 622              		.loc 1 614 0
 623 0008 7B68     		ldr	r3, [r7, #4]
 624 000a 0122     		movs	r2, #1
 625 000c 1340     		ands	r3, r2
 626 000e 08D0     		beq	.L36
 615:Generated_Source\PSoC4/CyLib.c ****         {
 616:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 627              		.loc 1 616 0
 628 0010 0C4A     		ldr	r2, .L39
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 23


 629 0012 0C4B     		ldr	r3, .L39
 630 0014 1968     		ldr	r1, [r3]
 631 0016 0C4B     		ldr	r3, .L39+4
 632 0018 1B68     		ldr	r3, [r3]
 633 001a 5B06     		lsls	r3, r3, #25
 634 001c 0B43     		orrs	r3, r1
 635 001e 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/CyLib.c ****         }
 618:Generated_Source\PSoC4/CyLib.c ****         else
 619:Generated_Source\PSoC4/CyLib.c ****         {
 620:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 621:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 622:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 623:Generated_Source\PSoC4/CyLib.c ****         }
 624:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 625:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 626:Generated_Source\PSoC4/CyLib.c ****         {
 627:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 628:Generated_Source\PSoC4/CyLib.c ****         }
 629:Generated_Source\PSoC4/CyLib.c ****         else
 630:Generated_Source\PSoC4/CyLib.c ****         {
 631:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 632:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 633:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 634:Generated_Source\PSoC4/CyLib.c ****         }
 635:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 636:Generated_Source\PSoC4/CyLib.c **** }
 636              		.loc 1 636 0
 637 0020 0CE0     		b	.L38
 638              	.L36:
 620:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 639              		.loc 1 620 0
 640 0022 084B     		ldr	r3, .L39
 641 0024 1B68     		ldr	r3, [r3]
 642 0026 5B0E     		lsrs	r3, r3, #25
 643 0028 0722     		movs	r2, #7
 644 002a 1A40     		ands	r2, r3
 645 002c 064B     		ldr	r3, .L39+4
 646 002e 1A60     		str	r2, [r3]
 622:Generated_Source\PSoC4/CyLib.c ****         }
 647              		.loc 1 622 0
 648 0030 044B     		ldr	r3, .L39
 649 0032 044A     		ldr	r2, .L39
 650 0034 1268     		ldr	r2, [r2]
 651 0036 0549     		ldr	r1, .L39+8
 652 0038 0A40     		ands	r2, r1
 653 003a 1A60     		str	r2, [r3]
 654              	.L38:
 655              		.loc 1 636 0
 656 003c C046     		nop
 657 003e BD46     		mov	sp, r7
 658 0040 02B0     		add	sp, sp, #8
 659              		@ sp needed
 660 0042 80BD     		pop	{r7, pc}
 661              	.L40:
 662              		.align	2
 663              	.L39:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 24


 664 0044 08010B40 		.word	1074462984
 665 0048 00000000 		.word	CySysClkPumpConfig
 666 004c FFFFFFF1 		.word	-234881025
 667              		.cfi_endproc
 668              	.LFE7:
 669              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 670              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 671              		.align	2
 672              		.global	CySysClkGetSysclkSource
 673              		.code	16
 674              		.thumb_func
 675              		.type	CySysClkGetSysclkSource, %function
 676              	CySysClkGetSysclkSource:
 677              	.LFB8:
 637:Generated_Source\PSoC4/CyLib.c **** 
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 642:Generated_Source\PSoC4/CyLib.c **** *
 643:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 644:Generated_Source\PSoC4/CyLib.c **** *
 645:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 646:Generated_Source\PSoC4/CyLib.c **** *
 647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 648:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 649:Generated_Source\PSoC4/CyLib.c **** {
 678              		.loc 1 649 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 8
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682 0000 90B5     		push	{r4, r7, lr}
 683              		.cfi_def_cfa_offset 12
 684              		.cfi_offset 4, -12
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0002 83B0     		sub	sp, sp, #12
 688              		.cfi_def_cfa_offset 24
 689 0004 00AF     		add	r7, sp, #0
 690              		.cfi_def_cfa_register 7
 650:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 651:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 652:Generated_Source\PSoC4/CyLib.c **** 
 653:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 691              		.loc 1 653 0
 692 0006 FC1D     		adds	r4, r7, #7
 693 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 694 000c 0300     		movs	r3, r0
 695 000e 2370     		strb	r3, [r4]
 654:Generated_Source\PSoC4/CyLib.c **** 
 655:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 656:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 657:Generated_Source\PSoC4/CyLib.c ****     {
 658:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 659:Generated_Source\PSoC4/CyLib.c ****     }
 660:Generated_Source\PSoC4/CyLib.c ****     else
 661:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 25


 662:Generated_Source\PSoC4/CyLib.c ****     {
 663:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 696              		.loc 1 663 0
 697 0010 074B     		ldr	r3, .L43
 698 0012 1B68     		ldr	r3, [r3]
 699 0014 0722     		movs	r2, #7
 700 0016 1340     		ands	r3, r2
 701 0018 3B60     		str	r3, [r7]
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 666:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 667:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 668:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 669:Generated_Source\PSoC4/CyLib.c ****         
 670:Generated_Source\PSoC4/CyLib.c ****     }
 671:Generated_Source\PSoC4/CyLib.c **** 
 672:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 702              		.loc 1 672 0
 703 001a FB1D     		adds	r3, r7, #7
 704 001c 1B78     		ldrb	r3, [r3]
 705 001e 1800     		movs	r0, r3
 706 0020 FFF7FEFF 		bl	CyExitCriticalSection
 673:Generated_Source\PSoC4/CyLib.c **** 
 674:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 707              		.loc 1 674 0
 708 0024 3B68     		ldr	r3, [r7]
 675:Generated_Source\PSoC4/CyLib.c **** }
 709              		.loc 1 675 0
 710 0026 1800     		movs	r0, r3
 711 0028 BD46     		mov	sp, r7
 712 002a 03B0     		add	sp, sp, #12
 713              		@ sp needed
 714 002c 90BD     		pop	{r4, r7, pc}
 715              	.L44:
 716 002e C046     		.align	2
 717              	.L43:
 718 0030 00010B40 		.word	1074462976
 719              		.cfi_endproc
 720              	.LFE8:
 721              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 722              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 723              		.align	2
 724              		.global	CySysClkWriteSysclkDiv
 725              		.code	16
 726              		.thumb_func
 727              		.type	CySysClkWriteSysclkDiv, %function
 728              	CySysClkWriteSysclkDiv:
 729              	.LFB9:
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 683:Generated_Source\PSoC4/CyLib.c **** *
 684:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 26


 685:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 686:Generated_Source\PSoC4/CyLib.c **** *
 687:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 688:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 689:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 690:Generated_Source\PSoC4/CyLib.c **** *
 691:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 692:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 693:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 694:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 695:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 697:Generated_Source\PSoC4/CyLib.c **** *
 698:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 699:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *
 708:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 709:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 710:Generated_Source\PSoC4/CyLib.c **** {
 730              		.loc 1 710 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 16
 733              		@ frame_needed = 1, uses_anonymous_args = 0
 734 0000 90B5     		push	{r4, r7, lr}
 735              		.cfi_def_cfa_offset 12
 736              		.cfi_offset 4, -12
 737              		.cfi_offset 7, -8
 738              		.cfi_offset 14, -4
 739 0002 85B0     		sub	sp, sp, #20
 740              		.cfi_def_cfa_offset 32
 741 0004 00AF     		add	r7, sp, #0
 742              		.cfi_def_cfa_register 7
 743 0006 7860     		str	r0, [r7, #4]
 711:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 712:Generated_Source\PSoC4/CyLib.c **** 
 713:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 744              		.loc 1 713 0
 745 0008 0F23     		movs	r3, #15
 746 000a FC18     		adds	r4, r7, r3
 747 000c FFF7FEFF 		bl	CyEnterCriticalSection
 748 0010 0300     		movs	r3, r0
 749 0012 2370     		strb	r3, [r4]
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 750              		.loc 1 715 0
 751 0014 0A4B     		ldr	r3, .L46
 752 0016 7A68     		ldr	r2, [r7, #4]
 753 0018 D104     		lsls	r1, r2, #19
 754 001a E022     		movs	r2, #224
 755 001c 9203     		lsls	r2, r2, #14
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 27


 756 001e 1140     		ands	r1, r2
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 717:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 757              		.loc 1 717 0
 758 0020 074A     		ldr	r2, .L46
 759 0022 1268     		ldr	r2, [r2]
 760 0024 0748     		ldr	r0, .L46+4
 761 0026 0240     		ands	r2, r0
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 762              		.loc 1 716 0
 763 0028 0A43     		orrs	r2, r1
 715:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 764              		.loc 1 715 0
 765 002a 1A60     		str	r2, [r3]
 718:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 766              		.loc 1 720 0
 767 002c 0F23     		movs	r3, #15
 768 002e FB18     		adds	r3, r7, r3
 769 0030 1B78     		ldrb	r3, [r3]
 770 0032 1800     		movs	r0, r3
 771 0034 FFF7FEFF 		bl	CyExitCriticalSection
 721:Generated_Source\PSoC4/CyLib.c **** }
 772              		.loc 1 721 0
 773 0038 C046     		nop
 774 003a BD46     		mov	sp, r7
 775 003c 05B0     		add	sp, sp, #20
 776              		@ sp needed
 777 003e 90BD     		pop	{r4, r7, pc}
 778              	.L47:
 779              		.align	2
 780              	.L46:
 781 0040 00010B40 		.word	1074462976
 782 0044 FFFFC7FF 		.word	-3670017
 783              		.cfi_endproc
 784              	.LFE9:
 785              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 786              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 787              		.align	2
 788              		.global	CySysClkWriteImoFreq
 789              		.code	16
 790              		.thumb_func
 791              		.type	CySysClkWriteImoFreq, %function
 792              	CySysClkWriteImoFreq:
 793              	.LFB10:
 722:Generated_Source\PSoC4/CyLib.c **** 
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 725:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 726:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 727:Generated_Source\PSoC4/CyLib.c **** *
 728:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 731:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 732:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 28


 733:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 734:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 735:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 738:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 739:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 742:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 743:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 744:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 745:Generated_Source\PSoC4/CyLib.c **** *
 746:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 747:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 748:Generated_Source\PSoC4/CyLib.c **** *
 749:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 750:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 751:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 752:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 753:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 755:Generated_Source\PSoC4/CyLib.c **** *
 756:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 757:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 758:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 759:Generated_Source\PSoC4/CyLib.c **** *
 760:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 761:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 762:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 763:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 764:Generated_Source\PSoC4/CyLib.c **** *
 765:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 767:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 768:Generated_Source\PSoC4/CyLib.c ****     {
 794              		.loc 1 768 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 40
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798 0000 90B5     		push	{r4, r7, lr}
 799              		.cfi_def_cfa_offset 12
 800              		.cfi_offset 4, -12
 801              		.cfi_offset 7, -8
 802              		.cfi_offset 14, -4
 803 0002 8BB0     		sub	sp, sp, #44
 804              		.cfi_def_cfa_offset 56
 805 0004 00AF     		add	r7, sp, #0
 806              		.cfi_def_cfa_register 7
 807 0006 7860     		str	r0, [r7, #4]
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 770:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 772:Generated_Source\PSoC4/CyLib.c ****         #else
 773:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 29


 776:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 780:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 808              		.loc 1 780 0
 809 0008 0023     		movs	r3, #0
 810 000a 7B62     		str	r3, [r7, #36]
 781:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 782:Generated_Source\PSoC4/CyLib.c **** 
 783:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 784:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 785:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:Generated_Source\PSoC4/CyLib.c **** 
 787:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 811              		.loc 1 790 0
 812 000c 2323     		movs	r3, #35
 813 000e FC18     		adds	r4, r7, r3
 814 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 815 0014 0300     		movs	r3, r0
 816 0016 2370     		strb	r3, [r4]
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 793:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 817              		.loc 1 793 0
 818 0018 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 819 001c 031E     		subs	r3, r0, #0
 820 001e 03D0     		beq	.L49
 794:Generated_Source\PSoC4/CyLib.c ****             {
 795:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 821              		.loc 1 795 0
 822 0020 0123     		movs	r3, #1
 823 0022 7B62     		str	r3, [r7, #36]
 796:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 824              		.loc 1 796 0
 825 0024 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 826              	.L49:
 797:Generated_Source\PSoC4/CyLib.c ****             }
 798:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 799:Generated_Source\PSoC4/CyLib.c **** 
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 802:Generated_Source\PSoC4/CyLib.c **** 
 803:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 804:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 805:Generated_Source\PSoC4/CyLib.c ****                 {
 806:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 809:Generated_Source\PSoC4/CyLib.c ****                 {
 810:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 811:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 812:Generated_Source\PSoC4/CyLib.c ****                 }
 813:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 30


 814:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                 }
 816:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 817:Generated_Source\PSoC4/CyLib.c **** 
 818:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 819:Generated_Source\PSoC4/CyLib.c **** 
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 824:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 827              		.loc 1 824 0
 828 0028 1B4B     		ldr	r3, .L51
 829 002a 1A68     		ldr	r2, [r3]
 830 002c 0823     		movs	r3, #8
 831 002e FB18     		adds	r3, r7, r3
 832 0030 1A60     		str	r2, [r3]
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 833              		.loc 1 825 0
 834 0032 1A4B     		ldr	r3, .L51+4
 835 0034 1A68     		ldr	r2, [r3]
 836 0036 0823     		movs	r3, #8
 837 0038 FB18     		adds	r3, r7, r3
 838 003a 5A60     		str	r2, [r3, #4]
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 839              		.loc 1 826 0
 840 003c 7B68     		ldr	r3, [r7, #4]
 841 003e 033B     		subs	r3, r3, #3
 842 0040 174A     		ldr	r2, .L51+8
 843 0042 D35C     		ldrb	r3, [r2, r3]
 844 0044 1A00     		movs	r2, r3
 845 0046 0823     		movs	r3, #8
 846 0048 FB18     		adds	r3, r7, r3
 847 004a 9A60     		str	r2, [r3, #8]
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 848              		.loc 1 827 0
 849 004c 154B     		ldr	r3, .L51+12
 850 004e 1A68     		ldr	r2, [r3]
 851 0050 0823     		movs	r3, #8
 852 0052 FB18     		adds	r3, r7, r3
 853 0054 DA60     		str	r2, [r3, #12]
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 854              		.loc 1 829 0
 855 0056 1823     		movs	r3, #24
 856 0058 FB18     		adds	r3, r7, r3
 857 005a 134A     		ldr	r2, .L51+16
 858 005c 1A60     		str	r2, [r3]
 830:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 831:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 832:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 859              		.loc 1 832 0
 860 005e 0823     		movs	r3, #8
 861 0060 FA18     		adds	r2, r7, r3
 862 0062 1823     		movs	r3, #24
 863 0064 FB18     		adds	r3, r7, r3
 864 0066 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 31


 833:Generated_Source\PSoC4/CyLib.c **** 
 834:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 865              		.loc 1 834 0
 866 0068 104B     		ldr	r3, .L51+20
 867 006a 1822     		movs	r2, #24
 868 006c BA18     		adds	r2, r7, r2
 869 006e 1A60     		str	r2, [r3]
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 870              		.loc 1 835 0
 871 0070 0F4B     		ldr	r3, .L51+24
 872 0072 104A     		ldr	r2, .L51+28
 873 0074 1A60     		str	r2, [r3]
 836:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 874              		.loc 1 836 0
 875 0076 0D4B     		ldr	r3, .L51+20
 876 0078 1B68     		ldr	r3, [r3]
 837:Generated_Source\PSoC4/CyLib.c **** 
 838:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 841:Generated_Source\PSoC4/CyLib.c ****         {
 842:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 843:Generated_Source\PSoC4/CyLib.c ****             {
 844:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 846:Generated_Source\PSoC4/CyLib.c ****             }
 847:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 848:Generated_Source\PSoC4/CyLib.c ****             {
 849:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 851:Generated_Source\PSoC4/CyLib.c ****             }
 852:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 853:Generated_Source\PSoC4/CyLib.c ****             {
 854:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 856:Generated_Source\PSoC4/CyLib.c ****             }
 857:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 858:Generated_Source\PSoC4/CyLib.c ****             {
 859:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 861:Generated_Source\PSoC4/CyLib.c ****             }
 862:Generated_Source\PSoC4/CyLib.c ****             else
 863:Generated_Source\PSoC4/CyLib.c ****             {
 864:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 866:Generated_Source\PSoC4/CyLib.c ****             }
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 869:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 873:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 874:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 875:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 876:Generated_Source\PSoC4/CyLib.c ****             *
 877:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 32


 878:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 879:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 880:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 881:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 882:Generated_Source\PSoC4/CyLib.c ****             {
 883:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 884:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 885:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 886:Generated_Source\PSoC4/CyLib.c **** 
 887:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 888:Generated_Source\PSoC4/CyLib.c **** 
 889:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 890:Generated_Source\PSoC4/CyLib.c ****             }
 891:Generated_Source\PSoC4/CyLib.c ****             else
 892:Generated_Source\PSoC4/CyLib.c ****             {
 893:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 894:Generated_Source\PSoC4/CyLib.c ****             }
 895:Generated_Source\PSoC4/CyLib.c **** 
 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 898:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 899:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 900:Generated_Source\PSoC4/CyLib.c ****             *
 901:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 902:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 903:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 904:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 905:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 906:Generated_Source\PSoC4/CyLib.c ****             {
 907:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 908:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 909:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 910:Generated_Source\PSoC4/CyLib.c ****             }
 911:Generated_Source\PSoC4/CyLib.c **** 
 912:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 913:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 916:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 919:Generated_Source\PSoC4/CyLib.c ****             {
 920:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 921:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 922:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 923:Generated_Source\PSoC4/CyLib.c ****             }
 924:Generated_Source\PSoC4/CyLib.c ****         }
 925:Generated_Source\PSoC4/CyLib.c ****         else
 926:Generated_Source\PSoC4/CyLib.c ****         {
 927:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 928:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 929:Generated_Source\PSoC4/CyLib.c ****         }
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 932:Generated_Source\PSoC4/CyLib.c **** 
 933:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 934:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 33


 877              		.loc 1 934 0
 878 007a 7B6A     		ldr	r3, [r7, #36]
 879 007c 012B     		cmp	r3, #1
 880 007e 01D1     		bne	.L50
 935:Generated_Source\PSoC4/CyLib.c ****             {
 936:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 881              		.loc 1 936 0
 882 0080 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 883              	.L50:
 937:Generated_Source\PSoC4/CyLib.c ****             }
 938:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 939:Generated_Source\PSoC4/CyLib.c **** 
 940:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 941:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 884              		.loc 1 947 0
 885 0084 2323     		movs	r3, #35
 886 0086 FB18     		adds	r3, r7, r3
 887 0088 1B78     		ldrb	r3, [r3]
 888 008a 1800     		movs	r0, r3
 889 008c FFF7FEFF 		bl	CyExitCriticalSection
 948:Generated_Source\PSoC4/CyLib.c ****     }
 890              		.loc 1 948 0
 891 0090 C046     		nop
 892 0092 BD46     		mov	sp, r7
 893 0094 0BB0     		add	sp, sp, #44
 894              		@ sp needed
 895 0096 90BD     		pop	{r4, r7, pc}
 896              	.L52:
 897              		.align	2
 898              	.L51:
 899 0098 08010B40 		.word	1074462984
 900 009c 00010B40 		.word	1074462976
 901 00a0 00000000 		.word	cyImoFreqMhz2Reg
 902 00a4 30001040 		.word	1074790448
 903 00a8 B6EA0000 		.word	60086
 904 00ac 08001040 		.word	1074790408
 905 00b0 04001040 		.word	1074790404
 906 00b4 17000080 		.word	-2147483625
 907              		.cfi_endproc
 908              	.LFE10:
 909              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 910              		.section	.text.CySysLvdEnable,"ax",%progbits
 911              		.align	2
 912              		.global	CySysLvdEnable
 913              		.code	16
 914              		.thumb_func
 915              		.type	CySysLvdEnable, %function
 916              	CySysLvdEnable:
 917              	.LFB11:
 949:Generated_Source\PSoC4/CyLib.c **** 
 950:Generated_Source\PSoC4/CyLib.c **** #else
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 34


 951:Generated_Source\PSoC4/CyLib.c **** 
 952:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 953:Generated_Source\PSoC4/CyLib.c ****     {
 954:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 956:Generated_Source\PSoC4/CyLib.c **** 
 957:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 958:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 959:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 960:Generated_Source\PSoC4/CyLib.c ****         
 961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 962:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 963:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 964:Generated_Source\PSoC4/CyLib.c **** 
 965:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 966:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 967:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 968:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 969:Generated_Source\PSoC4/CyLib.c ****         #else
 970:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 973:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 974:Generated_Source\PSoC4/CyLib.c ****         {
 975:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 976:Generated_Source\PSoC4/CyLib.c **** 
 977:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 978:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 979:Generated_Source\PSoC4/CyLib.c ****                 {
 980:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 981:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 982:Generated_Source\PSoC4/CyLib.c ****                 }
 983:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 988:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 989:Generated_Source\PSoC4/CyLib.c ****                     {
 990:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 991:Generated_Source\PSoC4/CyLib.c **** 
 992:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 993:Generated_Source\PSoC4/CyLib.c ****                     {
 994:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 995:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 996:Generated_Source\PSoC4/CyLib.c ****                     }
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 999:Generated_Source\PSoC4/CyLib.c ****                     }
1000:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1003:Generated_Source\PSoC4/CyLib.c **** 
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1007:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 35


1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1010:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1011:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1012:Generated_Source\PSoC4/CyLib.c ****                 {
1013:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1014:Generated_Source\PSoC4/CyLib.c ****                 }
1015:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1016:Generated_Source\PSoC4/CyLib.c ****                 {
1017:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1018:Generated_Source\PSoC4/CyLib.c ****                 }
1019:Generated_Source\PSoC4/CyLib.c ****                 else
1020:Generated_Source\PSoC4/CyLib.c ****                 {
1021:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1022:Generated_Source\PSoC4/CyLib.c ****                 }
1023:Generated_Source\PSoC4/CyLib.c ****             #else
1024:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1025:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1026:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1027:Generated_Source\PSoC4/CyLib.c **** 
1028:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1029:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1032:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1033:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1038:Generated_Source\PSoC4/CyLib.c ****             {
1039:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1040:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1041:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1044:Generated_Source\PSoC4/CyLib.c **** 
1045:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1048:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1049:Generated_Source\PSoC4/CyLib.c ****             }
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1052:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1053:Generated_Source\PSoC4/CyLib.c ****                 {
1054:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1055:Generated_Source\PSoC4/CyLib.c ****                 }
1056:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1057:Generated_Source\PSoC4/CyLib.c ****         
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1060:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1061:Generated_Source\PSoC4/CyLib.c ****                 {
1062:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1063:Generated_Source\PSoC4/CyLib.c ****                 }
1064:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 36


1065:Generated_Source\PSoC4/CyLib.c **** 
1066:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1067:Generated_Source\PSoC4/CyLib.c ****         }
1068:Generated_Source\PSoC4/CyLib.c ****         else
1069:Generated_Source\PSoC4/CyLib.c ****         {
1070:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1071:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1072:Generated_Source\PSoC4/CyLib.c ****         }
1073:Generated_Source\PSoC4/CyLib.c ****     }
1074:Generated_Source\PSoC4/CyLib.c **** 
1075:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1076:Generated_Source\PSoC4/CyLib.c **** 
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1079:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1080:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1081:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1082:Generated_Source\PSoC4/CyLib.c ****     *
1083:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1084:Generated_Source\PSoC4/CyLib.c ****     *
1085:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1086:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1087:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1088:Generated_Source\PSoC4/CyLib.c ****     *
1089:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1090:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1091:Generated_Source\PSoC4/CyLib.c ****     *
1092:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1093:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1094:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1095:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1096:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1098:Generated_Source\PSoC4/CyLib.c ****     *
1099:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1103:Generated_Source\PSoC4/CyLib.c ****     *
1104:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1105:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1106:Generated_Source\PSoC4/CyLib.c ****     {
1107:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1110:Generated_Source\PSoC4/CyLib.c **** 
1111:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1112:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1113:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1114:Generated_Source\PSoC4/CyLib.c **** 
1115:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1116:Generated_Source\PSoC4/CyLib.c ****     }
1117:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1118:Generated_Source\PSoC4/CyLib.c **** 
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1121:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 37


1122:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1123:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1124:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1125:Generated_Source\PSoC4/CyLib.c ****     *
1126:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1127:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1128:Generated_Source\PSoC4/CyLib.c ****     *
1129:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1130:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1131:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1132:Generated_Source\PSoC4/CyLib.c ****     * called.
1133:Generated_Source\PSoC4/CyLib.c ****     *
1134:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1135:Generated_Source\PSoC4/CyLib.c ****     *
1136:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1137:Generated_Source\PSoC4/CyLib.c ****     *
1138:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1139:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1140:Generated_Source\PSoC4/CyLib.c ****     *
1141:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1142:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1143:Generated_Source\PSoC4/CyLib.c ****     *
1144:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1145:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1146:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1147:Generated_Source\PSoC4/CyLib.c ****     *
1148:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1149:Generated_Source\PSoC4/CyLib.c ****     *
1150:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1151:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1152:Generated_Source\PSoC4/CyLib.c ****     {
1153:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1154:Generated_Source\PSoC4/CyLib.c **** 
1155:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1156:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1157:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1160:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1161:Generated_Source\PSoC4/CyLib.c **** 
1162:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1163:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1164:Generated_Source\PSoC4/CyLib.c ****         
1165:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1166:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1168:Generated_Source\PSoC4/CyLib.c ****             
1169:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1170:Generated_Source\PSoC4/CyLib.c ****             {
1171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1172:Generated_Source\PSoC4/CyLib.c ****             }
1173:Generated_Source\PSoC4/CyLib.c ****             else
1174:Generated_Source\PSoC4/CyLib.c ****             {
1175:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1176:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 38


1179:Generated_Source\PSoC4/CyLib.c ****             
1180:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1181:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1187:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1188:Generated_Source\PSoC4/CyLib.c ****                 {
1189:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1190:Generated_Source\PSoC4/CyLib.c ****                 }
1191:Generated_Source\PSoC4/CyLib.c ****                 
1192:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1193:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1196:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1197:Generated_Source\PSoC4/CyLib.c **** 
1198:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1199:Generated_Source\PSoC4/CyLib.c ****                 {
1200:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1201:Generated_Source\PSoC4/CyLib.c ****                 }
1202:Generated_Source\PSoC4/CyLib.c **** 
1203:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c ****                 
1208:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1213:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1215:Generated_Source\PSoC4/CyLib.c ****                 #else
1216:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1217:Generated_Source\PSoC4/CyLib.c ****                 #endif
1218:Generated_Source\PSoC4/CyLib.c ****                 
1219:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1220:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1221:Generated_Source\PSoC4/CyLib.c ****                 {
1222:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1223:Generated_Source\PSoC4/CyLib.c ****                 }
1224:Generated_Source\PSoC4/CyLib.c ****                 
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1227:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1228:Generated_Source\PSoC4/CyLib.c ****                                             
1229:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1230:Generated_Source\PSoC4/CyLib.c ****                 {
1231:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1232:Generated_Source\PSoC4/CyLib.c ****                 }
1233:Generated_Source\PSoC4/CyLib.c **** 
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1235:Generated_Source\PSoC4/CyLib.c ****                 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 39


1236:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1237:Generated_Source\PSoC4/CyLib.c ****                 
1238:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1239:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1240:Generated_Source\PSoC4/CyLib.c ****                 
1241:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1242:Generated_Source\PSoC4/CyLib.c ****                 {
1243:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1244:Generated_Source\PSoC4/CyLib.c ****                 }
1245:Generated_Source\PSoC4/CyLib.c ****                 
1246:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1247:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1248:Generated_Source\PSoC4/CyLib.c ****                 
1249:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1250:Generated_Source\PSoC4/CyLib.c ****                 {
1251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1252:Generated_Source\PSoC4/CyLib.c ****                 }
1253:Generated_Source\PSoC4/CyLib.c ****                 
1254:Generated_Source\PSoC4/CyLib.c ****             }
1255:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1257:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1258:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1259:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1262:Generated_Source\PSoC4/CyLib.c ****         {
1263:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1266:Generated_Source\PSoC4/CyLib.c ****             {
1267:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1270:Generated_Source\PSoC4/CyLib.c ****                 {
1271:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1272:Generated_Source\PSoC4/CyLib.c ****                     break;
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c ****             }
1275:Generated_Source\PSoC4/CyLib.c **** 
1276:Generated_Source\PSoC4/CyLib.c ****         }
1277:Generated_Source\PSoC4/CyLib.c **** 
1278:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1279:Generated_Source\PSoC4/CyLib.c ****     }
1280:Generated_Source\PSoC4/CyLib.c **** 
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1285:Generated_Source\PSoC4/CyLib.c ****     *
1286:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1287:Generated_Source\PSoC4/CyLib.c ****     *
1288:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1289:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1290:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 40


1293:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1294:Generated_Source\PSoC4/CyLib.c ****     {
1295:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1296:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1297:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1300:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1301:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1302:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1303:Generated_Source\PSoC4/CyLib.c ****         #else
1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1305:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1306:Generated_Source\PSoC4/CyLib.c ****     }
1307:Generated_Source\PSoC4/CyLib.c **** 
1308:Generated_Source\PSoC4/CyLib.c **** 
1309:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1310:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1311:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1312:Generated_Source\PSoC4/CyLib.c ****     *
1313:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1314:Generated_Source\PSoC4/CyLib.c ****     *
1315:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1316:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1317:Generated_Source\PSoC4/CyLib.c ****     *
1318:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1319:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1320:Generated_Source\PSoC4/CyLib.c ****     *
1321:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1322:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1323:Generated_Source\PSoC4/CyLib.c ****     *
1324:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1325:Generated_Source\PSoC4/CyLib.c ****     *
1326:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1327:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1328:Generated_Source\PSoC4/CyLib.c ****     {
1329:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1332:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1333:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1334:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1337:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1338:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1339:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1340:Generated_Source\PSoC4/CyLib.c ****         #else
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1342:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1345:Generated_Source\PSoC4/CyLib.c ****     }
1346:Generated_Source\PSoC4/CyLib.c **** 
1347:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1348:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1349:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 41


1350:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1351:Generated_Source\PSoC4/CyLib.c ****         *
1352:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1353:Generated_Source\PSoC4/CyLib.c ****         *
1354:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1355:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1356:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1357:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1358:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1359:Generated_Source\PSoC4/CyLib.c ****         *
1360:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1362:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1363:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1364:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1365:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1366:Generated_Source\PSoC4/CyLib.c ****         *
1367:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1368:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1369:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1370:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1371:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1372:Generated_Source\PSoC4/CyLib.c ****         *
1373:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1374:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1375:Generated_Source\PSoC4/CyLib.c ****         {
1376:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1377:Generated_Source\PSoC4/CyLib.c **** 
1378:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1379:Generated_Source\PSoC4/CyLib.c ****             {
1380:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1381:Generated_Source\PSoC4/CyLib.c **** 
1382:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1383:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1386:Generated_Source\PSoC4/CyLib.c ****             }
1387:Generated_Source\PSoC4/CyLib.c ****             else
1388:Generated_Source\PSoC4/CyLib.c ****             {
1389:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1390:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1391:Generated_Source\PSoC4/CyLib.c ****             }
1392:Generated_Source\PSoC4/CyLib.c ****         }
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****     #else
1395:Generated_Source\PSoC4/CyLib.c **** 
1396:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1397:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1398:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1399:Generated_Source\PSoC4/CyLib.c ****         *
1400:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1401:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1402:Generated_Source\PSoC4/CyLib.c ****         *
1403:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1404:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 42


1407:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1408:Generated_Source\PSoC4/CyLib.c ****         *
1409:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1410:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1411:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1412:Generated_Source\PSoC4/CyLib.c ****         *
1413:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1414:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1415:Generated_Source\PSoC4/CyLib.c ****         *
1416:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1417:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1418:Generated_Source\PSoC4/CyLib.c ****         *
1419:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1420:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1421:Generated_Source\PSoC4/CyLib.c ****         *
1422:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1423:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1424:Generated_Source\PSoC4/CyLib.c ****         *
1425:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1426:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1427:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1428:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1429:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1430:Generated_Source\PSoC4/CyLib.c ****         *
1431:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1435:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1436:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1440:Generated_Source\PSoC4/CyLib.c ****         *
1441:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1445:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1446:Generated_Source\PSoC4/CyLib.c ****         *
1447:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1452:Generated_Source\PSoC4/CyLib.c ****         *
1453:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1454:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1455:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1456:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1457:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1458:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1459:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1460:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1461:Generated_Source\PSoC4/CyLib.c ****         *
1462:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1463:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 43


1464:Generated_Source\PSoC4/CyLib.c ****         {
1465:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1466:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1469:Generated_Source\PSoC4/CyLib.c **** 
1470:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1471:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1472:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1473:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1476:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1477:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1478:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1479:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1481:Generated_Source\PSoC4/CyLib.c **** 
1482:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1483:Generated_Source\PSoC4/CyLib.c **** 
1484:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1485:Generated_Source\PSoC4/CyLib.c ****         }
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1489:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1490:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1491:Generated_Source\PSoC4/CyLib.c ****         *
1492:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1493:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1494:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1495:Generated_Source\PSoC4/CyLib.c ****         *
1496:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1497:Generated_Source\PSoC4/CyLib.c ****         *
1498:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1499:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1500:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1501:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1502:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1505:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1506:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1507:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1508:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1511:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1512:Generated_Source\PSoC4/CyLib.c ****         *
1513:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1514:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1515:Generated_Source\PSoC4/CyLib.c ****         {
1516:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1517:Generated_Source\PSoC4/CyLib.c **** 
1518:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1519:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 44


1521:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1522:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1525:Generated_Source\PSoC4/CyLib.c **** 
1526:Generated_Source\PSoC4/CyLib.c **** 
1527:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1528:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1529:Generated_Source\PSoC4/CyLib.c ****             {
1530:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1531:Generated_Source\PSoC4/CyLib.c ****             }
1532:Generated_Source\PSoC4/CyLib.c ****             else
1533:Generated_Source\PSoC4/CyLib.c ****             {
1534:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1535:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1536:Generated_Source\PSoC4/CyLib.c **** 
1537:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1538:Generated_Source\PSoC4/CyLib.c ****                 {
1539:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1540:Generated_Source\PSoC4/CyLib.c ****                 }
1541:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1542:Generated_Source\PSoC4/CyLib.c ****                 {
1543:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1544:Generated_Source\PSoC4/CyLib.c ****                 }
1545:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1546:Generated_Source\PSoC4/CyLib.c ****                 {
1547:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1548:Generated_Source\PSoC4/CyLib.c ****                 }
1549:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1552:Generated_Source\PSoC4/CyLib.c ****                 }
1553:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1554:Generated_Source\PSoC4/CyLib.c ****                 {
1555:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1556:Generated_Source\PSoC4/CyLib.c ****                 }
1557:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1558:Generated_Source\PSoC4/CyLib.c ****                 {
1559:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1560:Generated_Source\PSoC4/CyLib.c ****                 }
1561:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1562:Generated_Source\PSoC4/CyLib.c ****                 {
1563:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1564:Generated_Source\PSoC4/CyLib.c ****                 }
1565:Generated_Source\PSoC4/CyLib.c ****                 else
1566:Generated_Source\PSoC4/CyLib.c ****                 {
1567:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1568:Generated_Source\PSoC4/CyLib.c ****                 }
1569:Generated_Source\PSoC4/CyLib.c **** 
1570:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1571:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1574:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1575:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1576:Generated_Source\PSoC4/CyLib.c ****                 {
1577:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 45


1578:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1581:Generated_Source\PSoC4/CyLib.c ****                 {
1582:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1583:Generated_Source\PSoC4/CyLib.c ****                 }
1584:Generated_Source\PSoC4/CyLib.c ****                 else
1585:Generated_Source\PSoC4/CyLib.c ****                 {
1586:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1587:Generated_Source\PSoC4/CyLib.c ****                 }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1591:Generated_Source\PSoC4/CyLib.c ****                 {
1592:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1595:Generated_Source\PSoC4/CyLib.c ****                 {
1596:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1597:Generated_Source\PSoC4/CyLib.c ****                 }
1598:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1599:Generated_Source\PSoC4/CyLib.c ****                 {
1600:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1601:Generated_Source\PSoC4/CyLib.c ****                 }
1602:Generated_Source\PSoC4/CyLib.c ****                 else
1603:Generated_Source\PSoC4/CyLib.c ****                 {
1604:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1605:Generated_Source\PSoC4/CyLib.c ****                 }
1606:Generated_Source\PSoC4/CyLib.c **** 
1607:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1608:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1609:Generated_Source\PSoC4/CyLib.c **** 
1610:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1611:Generated_Source\PSoC4/CyLib.c **** 
1612:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1613:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1614:Generated_Source\PSoC4/CyLib.c ****                 {
1615:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1616:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1617:Generated_Source\PSoC4/CyLib.c ****                 }
1618:Generated_Source\PSoC4/CyLib.c ****                 else
1619:Generated_Source\PSoC4/CyLib.c ****                 {
1620:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1621:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1622:Generated_Source\PSoC4/CyLib.c ****                     */
1623:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1624:Generated_Source\PSoC4/CyLib.c ****                 }
1625:Generated_Source\PSoC4/CyLib.c ****             }
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1628:Generated_Source\PSoC4/CyLib.c ****         }
1629:Generated_Source\PSoC4/CyLib.c **** 
1630:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1631:Generated_Source\PSoC4/CyLib.c **** 
1632:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1633:Generated_Source\PSoC4/CyLib.c **** 
1634:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 46


1635:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1636:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1637:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1638:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1641:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1642:Generated_Source\PSoC4/CyLib.c ****     *
1643:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1644:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1647:Generated_Source\PSoC4/CyLib.c ****     *
1648:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1649:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1650:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1651:Generated_Source\PSoC4/CyLib.c ****     *
1652:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1653:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1654:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1655:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1656:Generated_Source\PSoC4/CyLib.c ****     *
1657:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1658:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1659:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1660:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1661:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1662:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1665:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1666:Generated_Source\PSoC4/CyLib.c ****     {
1667:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1668:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1669:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1670:Generated_Source\PSoC4/CyLib.c **** 
1671:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1672:Generated_Source\PSoC4/CyLib.c ****         {
1673:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1674:Generated_Source\PSoC4/CyLib.c **** 
1675:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1676:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1677:Generated_Source\PSoC4/CyLib.c **** 
1678:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1679:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1684:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1685:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1686:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1690:Generated_Source\PSoC4/CyLib.c ****             {
1691:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 47


1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1694:Generated_Source\PSoC4/CyLib.c ****                 {
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1697:Generated_Source\PSoC4/CyLib.c ****                     {
1698:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1699:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1700:Generated_Source\PSoC4/CyLib.c ****                         break;
1701:Generated_Source\PSoC4/CyLib.c ****                     }
1702:Generated_Source\PSoC4/CyLib.c **** 
1703:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1704:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1705:Generated_Source\PSoC4/CyLib.c ****                 }
1706:Generated_Source\PSoC4/CyLib.c ****             }
1707:Generated_Source\PSoC4/CyLib.c ****         }
1708:Generated_Source\PSoC4/CyLib.c ****         else
1709:Generated_Source\PSoC4/CyLib.c ****         {
1710:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1711:Generated_Source\PSoC4/CyLib.c ****         }
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1714:Generated_Source\PSoC4/CyLib.c ****     }
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c **** 
1717:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1718:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1719:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1720:Generated_Source\PSoC4/CyLib.c ****     *
1721:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1722:Generated_Source\PSoC4/CyLib.c ****     *
1723:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1724:Generated_Source\PSoC4/CyLib.c ****     *
1725:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1726:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1727:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1732:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1733:Generated_Source\PSoC4/CyLib.c ****     {
1734:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1735:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1736:Generated_Source\PSoC4/CyLib.c **** 
1737:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1738:Generated_Source\PSoC4/CyLib.c **** 
1739:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1740:Generated_Source\PSoC4/CyLib.c **** 
1741:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1742:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1743:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1744:Generated_Source\PSoC4/CyLib.c ****         {
1745:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1746:Generated_Source\PSoC4/CyLib.c ****         }
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 48


1749:Generated_Source\PSoC4/CyLib.c **** 
1750:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1751:Generated_Source\PSoC4/CyLib.c ****     }
1752:Generated_Source\PSoC4/CyLib.c **** 
1753:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1755:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1758:Generated_Source\PSoC4/CyLib.c ****     *
1759:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1760:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1761:Generated_Source\PSoC4/CyLib.c ****     *
1762:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1763:Generated_Source\PSoC4/CyLib.c ****     *
1764:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1765:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1766:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1769:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1770:Generated_Source\PSoC4/CyLib.c ****     {
1771:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1772:Generated_Source\PSoC4/CyLib.c **** 
1773:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1774:Generated_Source\PSoC4/CyLib.c ****         {
1775:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1776:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1777:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1778:Generated_Source\PSoC4/CyLib.c ****         }
1779:Generated_Source\PSoC4/CyLib.c ****     }
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c **** 
1782:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1783:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1784:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1787:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1788:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1789:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1790:Generated_Source\PSoC4/CyLib.c ****     *
1791:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1792:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1793:Generated_Source\PSoC4/CyLib.c ****     *
1794:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1795:Generated_Source\PSoC4/CyLib.c ****     *
1796:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1797:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1798:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1801:Generated_Source\PSoC4/CyLib.c ****     * divider.
1802:Generated_Source\PSoC4/CyLib.c ****     *
1803:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1804:Generated_Source\PSoC4/CyLib.c ****     *
1805:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 49


1806:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1807:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1810:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1811:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1814:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1815:Generated_Source\PSoC4/CyLib.c ****     {
1816:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1817:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1818:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1819:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1822:Generated_Source\PSoC4/CyLib.c **** 
1823:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1826:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1827:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1828:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1829:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1830:Generated_Source\PSoC4/CyLib.c ****         {
1831:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1832:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1833:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1834:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1837:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1839:Generated_Source\PSoC4/CyLib.c **** 
1840:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1843:Generated_Source\PSoC4/CyLib.c ****         }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1846:Generated_Source\PSoC4/CyLib.c **** 
1847:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1848:Generated_Source\PSoC4/CyLib.c ****     }
1849:Generated_Source\PSoC4/CyLib.c **** 
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1852:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1853:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1858:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1861:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1862:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 50


1863:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1864:Generated_Source\PSoC4/CyLib.c ****     *
1865:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1866:Generated_Source\PSoC4/CyLib.c ****     *
1867:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1868:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1869:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1872:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1873:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1874:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1875:Generated_Source\PSoC4/CyLib.c ****     *
1876:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1877:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1878:Generated_Source\PSoC4/CyLib.c ****     *
1879:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1882:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1883:Generated_Source\PSoC4/CyLib.c ****     {
1884:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1885:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1886:Generated_Source\PSoC4/CyLib.c **** 
1887:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1888:Generated_Source\PSoC4/CyLib.c **** 
1889:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1890:Generated_Source\PSoC4/CyLib.c ****         {
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1893:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1894:Generated_Source\PSoC4/CyLib.c ****         }
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1897:Generated_Source\PSoC4/CyLib.c ****     }
1898:Generated_Source\PSoC4/CyLib.c **** 
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1901:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1902:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1905:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1908:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1909:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1912:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1915:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1916:Generated_Source\PSoC4/CyLib.c ****     {
1917:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1918:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1919:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 51


1920:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1921:Generated_Source\PSoC4/CyLib.c **** 
1922:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1925:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1930:Generated_Source\PSoC4/CyLib.c ****     }
1931:Generated_Source\PSoC4/CyLib.c **** 
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1934:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1935:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1936:Generated_Source\PSoC4/CyLib.c ****     *
1937:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1938:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1939:Generated_Source\PSoC4/CyLib.c ****     *
1940:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1943:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1944:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1945:Generated_Source\PSoC4/CyLib.c ****     *
1946:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1947:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1948:Generated_Source\PSoC4/CyLib.c ****     *
1949:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1951:Generated_Source\PSoC4/CyLib.c ****     {
1952:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1953:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1954:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1955:Generated_Source\PSoC4/CyLib.c **** 
1956:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1957:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1958:Generated_Source\PSoC4/CyLib.c **** 
1959:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1960:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1962:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1963:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1964:Generated_Source\PSoC4/CyLib.c ****             )
1965:Generated_Source\PSoC4/CyLib.c ****         {
1966:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1967:Generated_Source\PSoC4/CyLib.c ****         }
1968:Generated_Source\PSoC4/CyLib.c **** 
1969:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1970:Generated_Source\PSoC4/CyLib.c ****     }
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1975:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1976:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 52


1977:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1978:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1979:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1980:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1981:Generated_Source\PSoC4/CyLib.c ****     *
1982:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1985:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1986:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1991:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1992:Generated_Source\PSoC4/CyLib.c ****     {
1993:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1994:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1995:Generated_Source\PSoC4/CyLib.c **** 
1996:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1999:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2000:Generated_Source\PSoC4/CyLib.c **** 
2001:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2004:Generated_Source\PSoC4/CyLib.c ****     }
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2008:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2009:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2010:Generated_Source\PSoC4/CyLib.c ****     *
2011:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2012:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2013:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2014:Generated_Source\PSoC4/CyLib.c ****     *
2015:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2016:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2017:Generated_Source\PSoC4/CyLib.c ****     *
2018:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2021:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2022:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2023:Generated_Source\PSoC4/CyLib.c ****     *
2024:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2025:Generated_Source\PSoC4/CyLib.c ****     *
2026:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2029:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2030:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2033:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 53


2034:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2037:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2040:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2041:Generated_Source\PSoC4/CyLib.c ****     *
2042:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2043:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2044:Generated_Source\PSoC4/CyLib.c ****     {
2045:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2046:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2049:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2050:Generated_Source\PSoC4/CyLib.c **** 
2051:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2052:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2055:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2058:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2059:Generated_Source\PSoC4/CyLib.c **** 
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2064:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2065:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2066:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2067:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2068:Generated_Source\PSoC4/CyLib.c ****         {
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2071:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2072:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2073:Generated_Source\PSoC4/CyLib.c **** 
2074:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2075:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2076:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2077:Generated_Source\PSoC4/CyLib.c **** 
2078:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2079:Generated_Source\PSoC4/CyLib.c ****             {
2080:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2081:Generated_Source\PSoC4/CyLib.c ****                 {
2082:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2083:Generated_Source\PSoC4/CyLib.c **** 
2084:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2085:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2088:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2089:Generated_Source\PSoC4/CyLib.c **** 
2090:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 54


2091:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2092:Generated_Source\PSoC4/CyLib.c **** 
2093:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2094:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2095:Generated_Source\PSoC4/CyLib.c ****                     {
2096:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2097:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2098:Generated_Source\PSoC4/CyLib.c ****                         break;
2099:Generated_Source\PSoC4/CyLib.c ****                     }
2100:Generated_Source\PSoC4/CyLib.c ****                 }
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c **** 
2103:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2104:Generated_Source\PSoC4/CyLib.c ****                 {
2105:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2106:Generated_Source\PSoC4/CyLib.c ****                     {
2107:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2108:Generated_Source\PSoC4/CyLib.c ****                     }
2109:Generated_Source\PSoC4/CyLib.c ****                 }
2110:Generated_Source\PSoC4/CyLib.c ****             }
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2115:Generated_Source\PSoC4/CyLib.c ****     }
2116:Generated_Source\PSoC4/CyLib.c **** 
2117:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2118:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2119:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2120:Generated_Source\PSoC4/CyLib.c ****     *
2121:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2122:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2123:Generated_Source\PSoC4/CyLib.c ****     *
2124:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2127:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2128:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2129:Generated_Source\PSoC4/CyLib.c ****     *
2130:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2131:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2132:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2135:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *
2139:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2140:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2141:Generated_Source\PSoC4/CyLib.c ****     {
2142:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2143:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2144:Generated_Source\PSoC4/CyLib.c ****         
2145:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2146:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2147:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 55


2148:Generated_Source\PSoC4/CyLib.c **** 
2149:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2150:Generated_Source\PSoC4/CyLib.c **** 
2151:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2152:Generated_Source\PSoC4/CyLib.c ****         {
2153:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2154:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2155:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2156:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2157:Generated_Source\PSoC4/CyLib.c ****             #else
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****                 
2162:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2163:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2164:Generated_Source\PSoC4/CyLib.c ****                 
2165:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2166:Generated_Source\PSoC4/CyLib.c ****                 {
2167:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2168:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2169:Generated_Source\PSoC4/CyLib.c ****                 }
2170:Generated_Source\PSoC4/CyLib.c ****                 
2171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2174:Generated_Source\PSoC4/CyLib.c ****         }
2175:Generated_Source\PSoC4/CyLib.c **** 
2176:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2177:Generated_Source\PSoC4/CyLib.c ****     }
2178:Generated_Source\PSoC4/CyLib.c **** 
2179:Generated_Source\PSoC4/CyLib.c ****     
2180:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2181:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2182:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2183:Generated_Source\PSoC4/CyLib.c ****     *
2184:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2187:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2188:Generated_Source\PSoC4/CyLib.c ****     *
2189:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2192:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2193:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2194:Generated_Source\PSoC4/CyLib.c ****     *
2195:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2196:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2197:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2200:Generated_Source\PSoC4/CyLib.c ****     *
2201:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2202:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2203:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2204:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 56


2205:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2206:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2207:Generated_Source\PSoC4/CyLib.c ****     {
2208:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2209:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2210:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2211:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c **** 
2214:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2219:Generated_Source\PSoC4/CyLib.c ****         {
2220:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2221:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2226:Generated_Source\PSoC4/CyLib.c ****         }
2227:Generated_Source\PSoC4/CyLib.c **** 
2228:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2231:Generated_Source\PSoC4/CyLib.c ****     }
2232:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2233:Generated_Source\PSoC4/CyLib.c **** 
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2236:Generated_Source\PSoC4/CyLib.c **** 
2237:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2238:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2239:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****     *
2241:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2242:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2243:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2246:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2247:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2248:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2249:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2250:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2251:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2252:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2253:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2254:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2255:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2256:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2257:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2258:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2259:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2260:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2261:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 57


2262:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2263:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2264:Generated_Source\PSoC4/CyLib.c ****     *
2265:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2266:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2267:Generated_Source\PSoC4/CyLib.c ****     {
 918              		.loc 1 2267 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 8
 921              		@ frame_needed = 1, uses_anonymous_args = 0
 922 0000 80B5     		push	{r7, lr}
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 7, -8
 925              		.cfi_offset 14, -4
 926 0002 82B0     		sub	sp, sp, #8
 927              		.cfi_def_cfa_offset 16
 928 0004 00AF     		add	r7, sp, #0
 929              		.cfi_def_cfa_register 7
 930 0006 7860     		str	r0, [r7, #4]
2268:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2269:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 931              		.loc 1 2269 0
 932 0008 144B     		ldr	r3, .L54
 933 000a 144A     		ldr	r2, .L54
 934 000c 1268     		ldr	r2, [r2]
 935 000e 0221     		movs	r1, #2
 936 0010 8A43     		bics	r2, r1
 937 0012 1A60     		str	r2, [r3]
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 938              		.loc 1 2272 0
 939 0014 124B     		ldr	r3, .L54+4
 940 0016 124A     		ldr	r2, .L54+4
 941 0018 1268     		ldr	r2, [r2]
 942 001a 1E21     		movs	r1, #30
 943 001c 8A43     		bics	r2, r1
 944 001e 1100     		movs	r1, r2
2273:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 945              		.loc 1 2273 0
 946 0020 7A68     		ldr	r2, [r7, #4]
 947 0022 5200     		lsls	r2, r2, #1
 948 0024 1E20     		movs	r0, #30
 949 0026 0240     		ands	r2, r0
2272:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 950              		.loc 1 2272 0
 951 0028 0A43     		orrs	r2, r1
 952 002a 1A60     		str	r2, [r3]
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2276:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 953              		.loc 1 2276 0
 954 002c 0C4B     		ldr	r3, .L54+4
 955 002e 0C4A     		ldr	r2, .L54+4
 956 0030 1268     		ldr	r2, [r2]
 957 0032 0121     		movs	r1, #1
 958 0034 0A43     		orrs	r2, r1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 58


 959 0036 1A60     		str	r2, [r3]
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2279:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 960              		.loc 1 2279 0
 961 0038 FA23     		movs	r3, #250
 962 003a 9B00     		lsls	r3, r3, #2
 963 003c 1800     		movs	r0, r3
 964 003e FFF7FEFF 		bl	CyDelayUs
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2282:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 965              		.loc 1 2282 0
 966 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2285:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 967              		.loc 1 2285 0
 968 0046 054B     		ldr	r3, .L54
 969 0048 044A     		ldr	r2, .L54
 970 004a 1268     		ldr	r2, [r2]
 971 004c 0221     		movs	r1, #2
 972 004e 0A43     		orrs	r2, r1
 973 0050 1A60     		str	r2, [r3]
2286:Generated_Source\PSoC4/CyLib.c ****     }
 974              		.loc 1 2286 0
 975 0052 C046     		nop
 976 0054 BD46     		mov	sp, r7
 977 0056 02B0     		add	sp, sp, #8
 978              		@ sp needed
 979 0058 80BD     		pop	{r7, pc}
 980              	.L55:
 981 005a C046     		.align	2
 982              	.L54:
 983 005c 08000B40 		.word	1074462728
 984 0060 18000B40 		.word	1074462744
 985              		.cfi_endproc
 986              	.LFE11:
 987              		.size	CySysLvdEnable, .-CySysLvdEnable
 988              		.section	.text.CySysLvdDisable,"ax",%progbits
 989              		.align	2
 990              		.global	CySysLvdDisable
 991              		.code	16
 992              		.thumb_func
 993              		.type	CySysLvdDisable, %function
 994              	CySysLvdDisable:
 995              	.LFB12:
2287:Generated_Source\PSoC4/CyLib.c **** 
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2290:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2291:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2292:Generated_Source\PSoC4/CyLib.c ****     *
2293:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2294:Generated_Source\PSoC4/CyLib.c ****     *
2295:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2296:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 59


2297:Generated_Source\PSoC4/CyLib.c ****     {
 996              		.loc 1 2297 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 1, uses_anonymous_args = 0
 1000 0000 80B5     		push	{r7, lr}
 1001              		.cfi_def_cfa_offset 8
 1002              		.cfi_offset 7, -8
 1003              		.cfi_offset 14, -4
 1004 0002 00AF     		add	r7, sp, #0
 1005              		.cfi_def_cfa_register 7
2298:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 1006              		.loc 1 2298 0
 1007 0004 074B     		ldr	r3, .L57
 1008 0006 074A     		ldr	r2, .L57
 1009 0008 1268     		ldr	r2, [r2]
 1010 000a 0221     		movs	r1, #2
 1011 000c 8A43     		bics	r2, r1
 1012 000e 1A60     		str	r2, [r3]
2299:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 1013              		.loc 1 2299 0
 1014 0010 054B     		ldr	r3, .L57+4
 1015 0012 054A     		ldr	r2, .L57+4
 1016 0014 1268     		ldr	r2, [r2]
 1017 0016 0121     		movs	r1, #1
 1018 0018 8A43     		bics	r2, r1
 1019 001a 1A60     		str	r2, [r3]
2300:Generated_Source\PSoC4/CyLib.c ****     }
 1020              		.loc 1 2300 0
 1021 001c C046     		nop
 1022 001e BD46     		mov	sp, r7
 1023              		@ sp needed
 1024 0020 80BD     		pop	{r7, pc}
 1025              	.L58:
 1026 0022 C046     		.align	2
 1027              	.L57:
 1028 0024 08000B40 		.word	1074462728
 1029 0028 18000B40 		.word	1074462744
 1030              		.cfi_endproc
 1031              	.LFE12:
 1032              		.size	CySysLvdDisable, .-CySysLvdDisable
 1033              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 1034              		.align	2
 1035              		.global	CySysLvdGetInterruptSource
 1036              		.code	16
 1037              		.thumb_func
 1038              		.type	CySysLvdGetInterruptSource, %function
 1039              	CySysLvdGetInterruptSource:
 1040              	.LFB13:
2301:Generated_Source\PSoC4/CyLib.c **** 
2302:Generated_Source\PSoC4/CyLib.c **** 
2303:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2304:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2305:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2306:Generated_Source\PSoC4/CyLib.c ****     *
2307:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2308:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 60


2309:Generated_Source\PSoC4/CyLib.c ****     * \return
2310:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2311:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2312:Generated_Source\PSoC4/CyLib.c ****     *
2313:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2314:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2315:Generated_Source\PSoC4/CyLib.c ****     {
 1041              		.loc 1 2315 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 1, uses_anonymous_args = 0
 1045 0000 80B5     		push	{r7, lr}
 1046              		.cfi_def_cfa_offset 8
 1047              		.cfi_offset 7, -8
 1048              		.cfi_offset 14, -4
 1049 0002 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
2316:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 1051              		.loc 1 2316 0
 1052 0004 034B     		ldr	r3, .L61
 1053 0006 1B68     		ldr	r3, [r3]
 1054 0008 0222     		movs	r2, #2
 1055 000a 1340     		ands	r3, r2
2317:Generated_Source\PSoC4/CyLib.c ****     }
 1056              		.loc 1 2317 0
 1057 000c 1800     		movs	r0, r3
 1058 000e BD46     		mov	sp, r7
 1059              		@ sp needed
 1060 0010 80BD     		pop	{r7, pc}
 1061              	.L62:
 1062 0012 C046     		.align	2
 1063              	.L61:
 1064 0014 04000B40 		.word	1074462724
 1065              		.cfi_endproc
 1066              	.LFE13:
 1067              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 1068              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 1069              		.align	2
 1070              		.global	CySysLvdClearInterrupt
 1071              		.code	16
 1072              		.thumb_func
 1073              		.type	CySysLvdClearInterrupt, %function
 1074              	CySysLvdClearInterrupt:
 1075              	.LFB14:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CyLib.c ****     *
2324:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2325:Generated_Source\PSoC4/CyLib.c ****     *
2326:Generated_Source\PSoC4/CyLib.c ****     * \return
2327:Generated_Source\PSoC4/CyLib.c ****     *  None
2328:Generated_Source\PSoC4/CyLib.c ****     *
2329:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 61


2331:Generated_Source\PSoC4/CyLib.c ****     {
 1076              		.loc 1 2331 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080 0000 80B5     		push	{r7, lr}
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 7, -8
 1083              		.cfi_offset 14, -4
 1084 0002 00AF     		add	r7, sp, #0
 1085              		.cfi_def_cfa_register 7
2332:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 1086              		.loc 1 2332 0
 1087 0004 024B     		ldr	r3, .L64
 1088 0006 0222     		movs	r2, #2
 1089 0008 1A60     		str	r2, [r3]
2333:Generated_Source\PSoC4/CyLib.c ****     }
 1090              		.loc 1 2333 0
 1091 000a C046     		nop
 1092 000c BD46     		mov	sp, r7
 1093              		@ sp needed
 1094 000e 80BD     		pop	{r7, pc}
 1095              	.L65:
 1096              		.align	2
 1097              	.L64:
 1098 0010 04000B40 		.word	1074462724
 1099              		.cfi_endproc
 1100              	.LFE14:
 1101              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 1102              		.section	.text.CySysGetResetReason,"ax",%progbits
 1103              		.align	2
 1104              		.global	CySysGetResetReason
 1105              		.code	16
 1106              		.thumb_func
 1107              		.type	CySysGetResetReason, %function
 1108              	CySysGetResetReason:
 1109              	.LFB15:
2334:Generated_Source\PSoC4/CyLib.c **** 
2335:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2336:Generated_Source\PSoC4/CyLib.c **** 
2337:Generated_Source\PSoC4/CyLib.c **** 
2338:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2339:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2340:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2341:Generated_Source\PSoC4/CyLib.c **** *
2342:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2343:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2344:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2345:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2348:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2349:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2350:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** * \return
2353:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 62


2354:Generated_Source\PSoC4/CyLib.c **** *
2355:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2356:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2357:Generated_Source\PSoC4/CyLib.c **** {
 1110              		.loc 1 2357 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 16
 1113              		@ frame_needed = 1, uses_anonymous_args = 0
 1114 0000 80B5     		push	{r7, lr}
 1115              		.cfi_def_cfa_offset 8
 1116              		.cfi_offset 7, -8
 1117              		.cfi_offset 14, -4
 1118 0002 84B0     		sub	sp, sp, #16
 1119              		.cfi_def_cfa_offset 24
 1120 0004 00AF     		add	r7, sp, #0
 1121              		.cfi_def_cfa_register 7
 1122 0006 7860     		str	r0, [r7, #4]
2358:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1123              		.loc 1 2360 0
 1124 0008 7B68     		ldr	r3, [r7, #4]
 1125 000a 1922     		movs	r2, #25
 1126 000c 1340     		ands	r3, r2
 1127 000e 7B60     		str	r3, [r7, #4]
2361:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1128              		.loc 1 2361 0
 1129 0010 064B     		ldr	r3, .L68
 1130 0012 1B68     		ldr	r3, [r3]
 1131 0014 1922     		movs	r2, #25
 1132 0016 1340     		ands	r3, r2
 1133 0018 FB60     		str	r3, [r7, #12]
2362:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2363:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 1134              		.loc 1 2363 0
 1135 001a 044B     		ldr	r3, .L68
 1136 001c 7A68     		ldr	r2, [r7, #4]
 1137 001e 1A60     		str	r2, [r3]
2364:Generated_Source\PSoC4/CyLib.c **** 
2365:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 1138              		.loc 1 2365 0
 1139 0020 FB68     		ldr	r3, [r7, #12]
2366:Generated_Source\PSoC4/CyLib.c **** }
 1140              		.loc 1 2366 0
 1141 0022 1800     		movs	r0, r3
 1142 0024 BD46     		mov	sp, r7
 1143 0026 04B0     		add	sp, sp, #16
 1144              		@ sp needed
 1145 0028 80BD     		pop	{r7, pc}
 1146              	.L69:
 1147 002a C046     		.align	2
 1148              	.L68:
 1149 002c 00030B40 		.word	1074463488
 1150              		.cfi_endproc
 1151              	.LFE15:
 1152              		.size	CySysGetResetReason, .-CySysGetResetReason
 1153              		.section	.text.CyDisableInts,"ax",%progbits
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 63


 1154              		.align	2
 1155              		.global	CyDisableInts
 1156              		.code	16
 1157              		.thumb_func
 1158              		.type	CyDisableInts, %function
 1159              	CyDisableInts:
 1160              	.LFB16:
2367:Generated_Source\PSoC4/CyLib.c **** 
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2370:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2371:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** * \return
2376:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2379:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2380:Generated_Source\PSoC4/CyLib.c **** {
 1161              		.loc 1 2380 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 8
 1164              		@ frame_needed = 1, uses_anonymous_args = 0
 1165 0000 80B5     		push	{r7, lr}
 1166              		.cfi_def_cfa_offset 8
 1167              		.cfi_offset 7, -8
 1168              		.cfi_offset 14, -4
 1169 0002 82B0     		sub	sp, sp, #8
 1170              		.cfi_def_cfa_offset 16
 1171 0004 00AF     		add	r7, sp, #0
 1172              		.cfi_def_cfa_register 7
2381:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2384:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 1173              		.loc 1 2384 0
 1174 0006 064B     		ldr	r3, .L72
 1175 0008 1B68     		ldr	r3, [r3]
 1176 000a 7B60     		str	r3, [r7, #4]
2385:Generated_Source\PSoC4/CyLib.c **** 
2386:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2387:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 1177              		.loc 1 2387 0
 1178 000c 044B     		ldr	r3, .L72
 1179 000e 0122     		movs	r2, #1
 1180 0010 5242     		rsbs	r2, r2, #0
 1181 0012 1A60     		str	r2, [r3]
2388:Generated_Source\PSoC4/CyLib.c **** 
2389:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 1182              		.loc 1 2389 0
 1183 0014 7B68     		ldr	r3, [r7, #4]
2390:Generated_Source\PSoC4/CyLib.c **** }
 1184              		.loc 1 2390 0
 1185 0016 1800     		movs	r0, r3
 1186 0018 BD46     		mov	sp, r7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 64


 1187 001a 02B0     		add	sp, sp, #8
 1188              		@ sp needed
 1189 001c 80BD     		pop	{r7, pc}
 1190              	.L73:
 1191 001e C046     		.align	2
 1192              	.L72:
 1193 0020 80E100E0 		.word	-536813184
 1194              		.cfi_endproc
 1195              	.LFE16:
 1196              		.size	CyDisableInts, .-CyDisableInts
 1197              		.section	.text.CyEnableInts,"ax",%progbits
 1198              		.align	2
 1199              		.global	CyEnableInts
 1200              		.code	16
 1201              		.thumb_func
 1202              		.type	CyEnableInts, %function
 1203              	CyEnableInts:
 1204              	.LFB17:
2391:Generated_Source\PSoC4/CyLib.c **** 
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2394:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2395:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2396:Generated_Source\PSoC4/CyLib.c **** *
2397:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2398:Generated_Source\PSoC4/CyLib.c **** *
2399:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2400:Generated_Source\PSoC4/CyLib.c **** *
2401:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2403:Generated_Source\PSoC4/CyLib.c **** {
 1205              		.loc 1 2403 0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 8
 1208              		@ frame_needed = 1, uses_anonymous_args = 0
 1209 0000 80B5     		push	{r7, lr}
 1210              		.cfi_def_cfa_offset 8
 1211              		.cfi_offset 7, -8
 1212              		.cfi_offset 14, -4
 1213 0002 82B0     		sub	sp, sp, #8
 1214              		.cfi_def_cfa_offset 16
 1215 0004 00AF     		add	r7, sp, #0
 1216              		.cfi_def_cfa_register 7
 1217 0006 7860     		str	r0, [r7, #4]
2404:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1218              		.loc 1 2404 0
 1219 0008 034B     		ldr	r3, .L75
 1220 000a 7A68     		ldr	r2, [r7, #4]
 1221 000c 1A60     		str	r2, [r3]
2405:Generated_Source\PSoC4/CyLib.c **** }
 1222              		.loc 1 2405 0
 1223 000e C046     		nop
 1224 0010 BD46     		mov	sp, r7
 1225 0012 02B0     		add	sp, sp, #8
 1226              		@ sp needed
 1227 0014 80BD     		pop	{r7, pc}
 1228              	.L76:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 65


 1229 0016 C046     		.align	2
 1230              	.L75:
 1231 0018 00E100E0 		.word	-536813312
 1232              		.cfi_endproc
 1233              	.LFE17:
 1234              		.size	CyEnableInts, .-CyEnableInts
 1235              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1236              		.align	2
 1237              		.global	CyIntSetSysVector
 1238              		.code	16
 1239              		.thumb_func
 1240              		.type	CyIntSetSysVector, %function
 1241              	CyIntSetSysVector:
 1242              	.LFB18:
2406:Generated_Source\PSoC4/CyLib.c **** 
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2409:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2410:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2413:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2416:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2417:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2418:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2419:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2420:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2423:Generated_Source\PSoC4/CyLib.c **** *
2424:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2425:Generated_Source\PSoC4/CyLib.c **** *
2426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2427:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2428:Generated_Source\PSoC4/CyLib.c **** {
 1243              		.loc 1 2428 0
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 16
 1246              		@ frame_needed = 1, uses_anonymous_args = 0
 1247 0000 80B5     		push	{r7, lr}
 1248              		.cfi_def_cfa_offset 8
 1249              		.cfi_offset 7, -8
 1250              		.cfi_offset 14, -4
 1251 0002 84B0     		sub	sp, sp, #16
 1252              		.cfi_def_cfa_offset 24
 1253 0004 00AF     		add	r7, sp, #0
 1254              		.cfi_def_cfa_register 7
 1255 0006 0200     		movs	r2, r0
 1256 0008 3960     		str	r1, [r7]
 1257 000a FB1D     		adds	r3, r7, #7
 1258 000c 1A70     		strb	r2, [r3]
2429:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2430:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1259              		.loc 1 2430 0
 1260 000e 8023     		movs	r3, #128
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 66


 1261 0010 9B05     		lsls	r3, r3, #22
 1262 0012 FB60     		str	r3, [r7, #12]
2431:Generated_Source\PSoC4/CyLib.c **** 
2432:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1263              		.loc 1 2432 0
 1264 0014 FB1D     		adds	r3, r7, #7
 1265 0016 1B78     		ldrb	r3, [r3]
 1266 0018 0F2B     		cmp	r3, #15
 1267 001a 02D9     		bls	.L78
 1268              		.loc 1 2432 0 is_stmt 0 discriminator 1
 1269 001c 0020     		movs	r0, #0
 1270 001e FFF7FEFF 		bl	CyHalt
 1271              	.L78:
2433:Generated_Source\PSoC4/CyLib.c **** 
2434:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2435:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1272              		.loc 1 2435 0 is_stmt 1
 1273 0022 FB1D     		adds	r3, r7, #7
 1274 0024 1B78     		ldrb	r3, [r3]
 1275 0026 9B00     		lsls	r3, r3, #2
 1276 0028 FA68     		ldr	r2, [r7, #12]
 1277 002a D318     		adds	r3, r2, r3
 1278 002c 1B68     		ldr	r3, [r3]
 1279 002e BB60     		str	r3, [r7, #8]
2436:Generated_Source\PSoC4/CyLib.c **** 
2437:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2438:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1280              		.loc 1 2438 0
 1281 0030 FB1D     		adds	r3, r7, #7
 1282 0032 1B78     		ldrb	r3, [r3]
 1283 0034 9B00     		lsls	r3, r3, #2
 1284 0036 FA68     		ldr	r2, [r7, #12]
 1285 0038 D318     		adds	r3, r2, r3
 1286 003a 3A68     		ldr	r2, [r7]
 1287 003c 1A60     		str	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c **** 
2440:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1288              		.loc 1 2440 0
 1289 003e BB68     		ldr	r3, [r7, #8]
2441:Generated_Source\PSoC4/CyLib.c **** }
 1290              		.loc 1 2441 0
 1291 0040 1800     		movs	r0, r3
 1292 0042 BD46     		mov	sp, r7
 1293 0044 04B0     		add	sp, sp, #16
 1294              		@ sp needed
 1295 0046 80BD     		pop	{r7, pc}
 1296              		.cfi_endproc
 1297              	.LFE18:
 1298              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1299              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1300              		.align	2
 1301              		.global	CyIntGetSysVector
 1302              		.code	16
 1303              		.thumb_func
 1304              		.type	CyIntGetSysVector, %function
 1305              	CyIntGetSysVector:
 1306              	.LFB19:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 67


2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2445:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2446:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2447:Generated_Source\PSoC4/CyLib.c **** *
2448:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2449:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2452:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2453:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2454:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2455:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2456:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2457:Generated_Source\PSoC4/CyLib.c **** *
2458:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2459:Generated_Source\PSoC4/CyLib.c **** *
2460:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2461:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2462:Generated_Source\PSoC4/CyLib.c **** {
 1307              		.loc 1 2462 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 16
 1310              		@ frame_needed = 1, uses_anonymous_args = 0
 1311 0000 80B5     		push	{r7, lr}
 1312              		.cfi_def_cfa_offset 8
 1313              		.cfi_offset 7, -8
 1314              		.cfi_offset 14, -4
 1315 0002 84B0     		sub	sp, sp, #16
 1316              		.cfi_def_cfa_offset 24
 1317 0004 00AF     		add	r7, sp, #0
 1318              		.cfi_def_cfa_register 7
 1319 0006 0200     		movs	r2, r0
 1320 0008 FB1D     		adds	r3, r7, #7
 1321 000a 1A70     		strb	r2, [r3]
2463:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1322              		.loc 1 2463 0
 1323 000c 8023     		movs	r3, #128
 1324 000e 9B05     		lsls	r3, r3, #22
 1325 0010 FB60     		str	r3, [r7, #12]
2464:Generated_Source\PSoC4/CyLib.c **** 
2465:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1326              		.loc 1 2465 0
 1327 0012 FB1D     		adds	r3, r7, #7
 1328 0014 1B78     		ldrb	r3, [r3]
 1329 0016 0F2B     		cmp	r3, #15
 1330 0018 02D9     		bls	.L81
 1331              		.loc 1 2465 0 is_stmt 0 discriminator 1
 1332 001a 0020     		movs	r0, #0
 1333 001c FFF7FEFF 		bl	CyHalt
 1334              	.L81:
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1335              		.loc 1 2467 0 is_stmt 1
 1336 0020 FB1D     		adds	r3, r7, #7
 1337 0022 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 68


 1338 0024 9B00     		lsls	r3, r3, #2
 1339 0026 FA68     		ldr	r2, [r7, #12]
 1340 0028 D318     		adds	r3, r2, r3
 1341 002a 1B68     		ldr	r3, [r3]
2468:Generated_Source\PSoC4/CyLib.c **** }
 1342              		.loc 1 2468 0
 1343 002c 1800     		movs	r0, r3
 1344 002e BD46     		mov	sp, r7
 1345 0030 04B0     		add	sp, sp, #16
 1346              		@ sp needed
 1347 0032 80BD     		pop	{r7, pc}
 1348              		.cfi_endproc
 1349              	.LFE19:
 1350              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1351              		.section	.text.CyIntSetVector,"ax",%progbits
 1352              		.align	2
 1353              		.global	CyIntSetVector
 1354              		.code	16
 1355              		.thumb_func
 1356              		.type	CyIntSetVector, %function
 1357              	CyIntSetVector:
 1358              	.LFB20:
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2473:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2476:Generated_Source\PSoC4/CyLib.c **** *
2477:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2478:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2483:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2484:Generated_Source\PSoC4/CyLib.c **** {
 1359              		.loc 1 2484 0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 16
 1362              		@ frame_needed = 1, uses_anonymous_args = 0
 1363 0000 80B5     		push	{r7, lr}
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 7, -8
 1366              		.cfi_offset 14, -4
 1367 0002 84B0     		sub	sp, sp, #16
 1368              		.cfi_def_cfa_offset 24
 1369 0004 00AF     		add	r7, sp, #0
 1370              		.cfi_def_cfa_register 7
 1371 0006 0200     		movs	r2, r0
 1372 0008 3960     		str	r1, [r7]
 1373 000a FB1D     		adds	r3, r7, #7
 1374 000c 1A70     		strb	r2, [r3]
2485:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2486:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1375              		.loc 1 2486 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 69


 1376 000e 8023     		movs	r3, #128
 1377 0010 9B05     		lsls	r3, r3, #22
 1378 0012 FB60     		str	r3, [r7, #12]
2487:Generated_Source\PSoC4/CyLib.c **** 
2488:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1379              		.loc 1 2488 0
 1380 0014 FB1D     		adds	r3, r7, #7
 1381 0016 1B78     		ldrb	r3, [r3]
 1382 0018 1F2B     		cmp	r3, #31
 1383 001a 02D9     		bls	.L84
 1384              		.loc 1 2488 0 is_stmt 0 discriminator 1
 1385 001c 0020     		movs	r0, #0
 1386 001e FFF7FEFF 		bl	CyHalt
 1387              	.L84:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2491:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1388              		.loc 1 2491 0 is_stmt 1
 1389 0022 FB1D     		adds	r3, r7, #7
 1390 0024 1B78     		ldrb	r3, [r3]
 1391 0026 1033     		adds	r3, r3, #16
 1392 0028 9B00     		lsls	r3, r3, #2
 1393 002a FA68     		ldr	r2, [r7, #12]
 1394 002c D318     		adds	r3, r2, r3
 1395 002e 1B68     		ldr	r3, [r3]
 1396 0030 BB60     		str	r3, [r7, #8]
2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2494:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1397              		.loc 1 2494 0
 1398 0032 FB1D     		adds	r3, r7, #7
 1399 0034 1B78     		ldrb	r3, [r3]
 1400 0036 1033     		adds	r3, r3, #16
 1401 0038 9B00     		lsls	r3, r3, #2
 1402 003a FA68     		ldr	r2, [r7, #12]
 1403 003c D318     		adds	r3, r2, r3
 1404 003e 3A68     		ldr	r2, [r7]
 1405 0040 1A60     		str	r2, [r3]
2495:Generated_Source\PSoC4/CyLib.c **** 
2496:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1406              		.loc 1 2496 0
 1407 0042 BB68     		ldr	r3, [r7, #8]
2497:Generated_Source\PSoC4/CyLib.c **** }
 1408              		.loc 1 2497 0
 1409 0044 1800     		movs	r0, r3
 1410 0046 BD46     		mov	sp, r7
 1411 0048 04B0     		add	sp, sp, #16
 1412              		@ sp needed
 1413 004a 80BD     		pop	{r7, pc}
 1414              		.cfi_endproc
 1415              	.LFE20:
 1416              		.size	CyIntSetVector, .-CyIntSetVector
 1417              		.section	.text.CyIntGetVector,"ax",%progbits
 1418              		.align	2
 1419              		.global	CyIntGetVector
 1420              		.code	16
 1421              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 70


 1422              		.type	CyIntGetVector, %function
 1423              	CyIntGetVector:
 1424              	.LFB21:
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c **** 
2500:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2501:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2502:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2505:Generated_Source\PSoC4/CyLib.c **** *
2506:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2507:Generated_Source\PSoC4/CyLib.c **** *
2508:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2511:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2512:Generated_Source\PSoC4/CyLib.c **** {
 1425              		.loc 1 2512 0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 16
 1428              		@ frame_needed = 1, uses_anonymous_args = 0
 1429 0000 80B5     		push	{r7, lr}
 1430              		.cfi_def_cfa_offset 8
 1431              		.cfi_offset 7, -8
 1432              		.cfi_offset 14, -4
 1433 0002 84B0     		sub	sp, sp, #16
 1434              		.cfi_def_cfa_offset 24
 1435 0004 00AF     		add	r7, sp, #0
 1436              		.cfi_def_cfa_register 7
 1437 0006 0200     		movs	r2, r0
 1438 0008 FB1D     		adds	r3, r7, #7
 1439 000a 1A70     		strb	r2, [r3]
2513:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1440              		.loc 1 2513 0
 1441 000c 8023     		movs	r3, #128
 1442 000e 9B05     		lsls	r3, r3, #22
 1443 0010 FB60     		str	r3, [r7, #12]
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1444              		.loc 1 2515 0
 1445 0012 FB1D     		adds	r3, r7, #7
 1446 0014 1B78     		ldrb	r3, [r3]
 1447 0016 1F2B     		cmp	r3, #31
 1448 0018 02D9     		bls	.L87
 1449              		.loc 1 2515 0 is_stmt 0 discriminator 1
 1450 001a 0020     		movs	r0, #0
 1451 001c FFF7FEFF 		bl	CyHalt
 1452              	.L87:
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1453              		.loc 1 2517 0 is_stmt 1
 1454 0020 FB1D     		adds	r3, r7, #7
 1455 0022 1B78     		ldrb	r3, [r3]
 1456 0024 1033     		adds	r3, r3, #16
 1457 0026 9B00     		lsls	r3, r3, #2
 1458 0028 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 71


 1459 002a D318     		adds	r3, r2, r3
 1460 002c 1B68     		ldr	r3, [r3]
2518:Generated_Source\PSoC4/CyLib.c **** }
 1461              		.loc 1 2518 0
 1462 002e 1800     		movs	r0, r3
 1463 0030 BD46     		mov	sp, r7
 1464 0032 04B0     		add	sp, sp, #16
 1465              		@ sp needed
 1466 0034 80BD     		pop	{r7, pc}
 1467              		.cfi_endproc
 1468              	.LFE21:
 1469              		.size	CyIntGetVector, .-CyIntGetVector
 1470 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1471              		.align	2
 1472              		.global	CyIntSetPriority
 1473              		.code	16
 1474              		.thumb_func
 1475              		.type	CyIntSetPriority, %function
 1476              	CyIntSetPriority:
 1477              	.LFB22:
2519:Generated_Source\PSoC4/CyLib.c **** 
2520:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2521:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2522:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2523:Generated_Source\PSoC4/CyLib.c **** *
2524:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2525:Generated_Source\PSoC4/CyLib.c **** *
2526:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2527:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2528:Generated_Source\PSoC4/CyLib.c **** *
2529:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2530:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2531:Generated_Source\PSoC4/CyLib.c **** {
 1478              		.loc 1 2531 0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 24
 1481              		@ frame_needed = 1, uses_anonymous_args = 0
 1482 0000 90B5     		push	{r4, r7, lr}
 1483              		.cfi_def_cfa_offset 12
 1484              		.cfi_offset 4, -12
 1485              		.cfi_offset 7, -8
 1486              		.cfi_offset 14, -4
 1487 0002 87B0     		sub	sp, sp, #28
 1488              		.cfi_def_cfa_offset 40
 1489 0004 00AF     		add	r7, sp, #0
 1490              		.cfi_def_cfa_register 7
 1491 0006 0200     		movs	r2, r0
 1492 0008 FB1D     		adds	r3, r7, #7
 1493 000a 1A70     		strb	r2, [r3]
 1494 000c BB1D     		adds	r3, r7, #6
 1495 000e 0A1C     		adds	r2, r1, #0
 1496 0010 1A70     		strb	r2, [r3]
2532:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2533:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2534:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 72


 1497              		.loc 1 2536 0
 1498 0012 BB1D     		adds	r3, r7, #6
 1499 0014 1B78     		ldrb	r3, [r3]
 1500 0016 032B     		cmp	r3, #3
 1501 0018 02D9     		bls	.L90
 1502              		.loc 1 2536 0 is_stmt 0 discriminator 1
 1503 001a 0020     		movs	r0, #0
 1504 001c FFF7FEFF 		bl	CyHalt
 1505              	.L90:
2537:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1506              		.loc 1 2537 0 is_stmt 1
 1507 0020 FB1D     		adds	r3, r7, #7
 1508 0022 1B78     		ldrb	r3, [r3]
 1509 0024 1F2B     		cmp	r3, #31
 1510 0026 02D9     		bls	.L91
 1511              		.loc 1 2537 0 is_stmt 0 discriminator 1
 1512 0028 0020     		movs	r0, #0
 1513 002a FFF7FEFF 		bl	CyHalt
 1514              	.L91:
2538:Generated_Source\PSoC4/CyLib.c **** 
2539:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1515              		.loc 1 2539 0 is_stmt 1
 1516 002e FB1D     		adds	r3, r7, #7
 1517 0030 1B78     		ldrb	r3, [r3]
 1518 0032 0322     		movs	r2, #3
 1519 0034 1340     		ands	r3, r2
 1520 0036 DB00     		lsls	r3, r3, #3
 1521 0038 0633     		adds	r3, r3, #6
 1522 003a 7B61     		str	r3, [r7, #20]
2540:Generated_Source\PSoC4/CyLib.c **** 
2541:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1523              		.loc 1 2541 0
 1524 003c 1323     		movs	r3, #19
 1525 003e FC18     		adds	r4, r7, r3
 1526 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1527 0044 0300     		movs	r3, r0
 1528 0046 2370     		strb	r3, [r4]
2542:Generated_Source\PSoC4/CyLib.c **** 
2543:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1529              		.loc 1 2543 0
 1530 0048 FB1D     		adds	r3, r7, #7
 1531 004a 1B78     		ldrb	r3, [r3]
 1532 004c 9B08     		lsrs	r3, r3, #2
 1533 004e DBB2     		uxtb	r3, r3
 1534 0050 9B00     		lsls	r3, r3, #2
 1535 0052 144A     		ldr	r2, .L92
 1536 0054 9446     		mov	ip, r2
 1537 0056 6344     		add	r3, r3, ip
 1538 0058 1B68     		ldr	r3, [r3]
 1539 005a FB60     		str	r3, [r7, #12]
2544:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1540              		.loc 1 2544 0
 1541 005c 0322     		movs	r2, #3
 1542 005e 7B69     		ldr	r3, [r7, #20]
 1543 0060 9A40     		lsls	r2, r2, r3
 1544 0062 1300     		movs	r3, r2
 1545 0064 DA43     		mvns	r2, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 73


 1546 0066 FB68     		ldr	r3, [r7, #12]
 1547 0068 1340     		ands	r3, r2
 1548 006a FB60     		str	r3, [r7, #12]
2545:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1549              		.loc 1 2545 0
 1550 006c BB1D     		adds	r3, r7, #6
 1551 006e 1A78     		ldrb	r2, [r3]
 1552 0070 7B69     		ldr	r3, [r7, #20]
 1553 0072 9A40     		lsls	r2, r2, r3
 1554 0074 1300     		movs	r3, r2
 1555 0076 FA68     		ldr	r2, [r7, #12]
 1556 0078 1343     		orrs	r3, r2
 1557 007a FB60     		str	r3, [r7, #12]
2546:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1558              		.loc 1 2546 0
 1559 007c FB1D     		adds	r3, r7, #7
 1560 007e 1B78     		ldrb	r3, [r3]
 1561 0080 9B08     		lsrs	r3, r3, #2
 1562 0082 DBB2     		uxtb	r3, r3
 1563 0084 9B00     		lsls	r3, r3, #2
 1564 0086 074A     		ldr	r2, .L92
 1565 0088 9446     		mov	ip, r2
 1566 008a 6344     		add	r3, r3, ip
 1567 008c FA68     		ldr	r2, [r7, #12]
 1568 008e 1A60     		str	r2, [r3]
2547:Generated_Source\PSoC4/CyLib.c **** 
2548:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1569              		.loc 1 2548 0
 1570 0090 1323     		movs	r3, #19
 1571 0092 FB18     		adds	r3, r7, r3
 1572 0094 1B78     		ldrb	r3, [r3]
 1573 0096 1800     		movs	r0, r3
 1574 0098 FFF7FEFF 		bl	CyExitCriticalSection
2549:Generated_Source\PSoC4/CyLib.c **** }
 1575              		.loc 1 2549 0
 1576 009c C046     		nop
 1577 009e BD46     		mov	sp, r7
 1578 00a0 07B0     		add	sp, sp, #28
 1579              		@ sp needed
 1580 00a2 90BD     		pop	{r4, r7, pc}
 1581              	.L93:
 1582              		.align	2
 1583              	.L92:
 1584 00a4 00E400E0 		.word	-536812544
 1585              		.cfi_endproc
 1586              	.LFE22:
 1587              		.size	CyIntSetPriority, .-CyIntSetPriority
 1588              		.section	.text.CyIntGetPriority,"ax",%progbits
 1589              		.align	2
 1590              		.global	CyIntGetPriority
 1591              		.code	16
 1592              		.thumb_func
 1593              		.type	CyIntGetPriority, %function
 1594              	CyIntGetPriority:
 1595              	.LFB23:
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 74


2552:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2553:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2554:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2559:Generated_Source\PSoC4/CyLib.c **** *
2560:Generated_Source\PSoC4/CyLib.c **** * \return
2561:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2562:Generated_Source\PSoC4/CyLib.c **** *
2563:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2564:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2565:Generated_Source\PSoC4/CyLib.c **** {
 1596              		.loc 1 2565 0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 16
 1599              		@ frame_needed = 1, uses_anonymous_args = 0
 1600 0000 80B5     		push	{r7, lr}
 1601              		.cfi_def_cfa_offset 8
 1602              		.cfi_offset 7, -8
 1603              		.cfi_offset 14, -4
 1604 0002 84B0     		sub	sp, sp, #16
 1605              		.cfi_def_cfa_offset 24
 1606 0004 00AF     		add	r7, sp, #0
 1607              		.cfi_def_cfa_register 7
 1608 0006 0200     		movs	r2, r0
 1609 0008 FB1D     		adds	r3, r7, #7
 1610 000a 1A70     		strb	r2, [r3]
2566:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2567:Generated_Source\PSoC4/CyLib.c **** 
2568:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1611              		.loc 1 2568 0
 1612 000c FB1D     		adds	r3, r7, #7
 1613 000e 1B78     		ldrb	r3, [r3]
 1614 0010 1F2B     		cmp	r3, #31
 1615 0012 02D9     		bls	.L95
 1616              		.loc 1 2568 0 is_stmt 0 discriminator 1
 1617 0014 0020     		movs	r0, #0
 1618 0016 FFF7FEFF 		bl	CyHalt
 1619              	.L95:
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1620              		.loc 1 2570 0 is_stmt 1
 1621 001a FB1D     		adds	r3, r7, #7
 1622 001c 1B78     		ldrb	r3, [r3]
 1623 001e 9B08     		lsrs	r3, r3, #2
 1624 0020 DBB2     		uxtb	r3, r3
 1625 0022 9B00     		lsls	r3, r3, #2
 1626 0024 0B4A     		ldr	r2, .L97
 1627 0026 9446     		mov	ip, r2
 1628 0028 6344     		add	r3, r3, ip
 1629 002a 1A68     		ldr	r2, [r3]
 1630 002c FB1D     		adds	r3, r7, #7
 1631 002e 1B78     		ldrb	r3, [r3]
 1632 0030 0321     		movs	r1, #3
 1633 0032 0B40     		ands	r3, r1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 75


 1634 0034 DB00     		lsls	r3, r3, #3
 1635 0036 0633     		adds	r3, r3, #6
 1636 0038 DA40     		lsrs	r2, r2, r3
 1637 003a 0F23     		movs	r3, #15
 1638 003c FB18     		adds	r3, r7, r3
 1639 003e 1A70     		strb	r2, [r3]
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1640              		.loc 1 2572 0
 1641 0040 0F23     		movs	r3, #15
 1642 0042 FB18     		adds	r3, r7, r3
 1643 0044 1B78     		ldrb	r3, [r3]
 1644 0046 0322     		movs	r2, #3
 1645 0048 1340     		ands	r3, r2
 1646 004a DBB2     		uxtb	r3, r3
2573:Generated_Source\PSoC4/CyLib.c **** }
 1647              		.loc 1 2573 0
 1648 004c 1800     		movs	r0, r3
 1649 004e BD46     		mov	sp, r7
 1650 0050 04B0     		add	sp, sp, #16
 1651              		@ sp needed
 1652 0052 80BD     		pop	{r7, pc}
 1653              	.L98:
 1654              		.align	2
 1655              	.L97:
 1656 0054 00E400E0 		.word	-536812544
 1657              		.cfi_endproc
 1658              	.LFE23:
 1659              		.size	CyIntGetPriority, .-CyIntGetPriority
 1660              		.section	.text.CyIntEnable,"ax",%progbits
 1661              		.align	2
 1662              		.global	CyIntEnable
 1663              		.code	16
 1664              		.thumb_func
 1665              		.type	CyIntEnable, %function
 1666              	CyIntEnable:
 1667              	.LFB24:
2574:Generated_Source\PSoC4/CyLib.c **** 
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2577:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2578:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2579:Generated_Source\PSoC4/CyLib.c **** *
2580:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2585:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2586:Generated_Source\PSoC4/CyLib.c **** {
 1668              		.loc 1 2586 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 8
 1671              		@ frame_needed = 1, uses_anonymous_args = 0
 1672 0000 80B5     		push	{r7, lr}
 1673              		.cfi_def_cfa_offset 8
 1674              		.cfi_offset 7, -8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 76


 1675              		.cfi_offset 14, -4
 1676 0002 82B0     		sub	sp, sp, #8
 1677              		.cfi_def_cfa_offset 16
 1678 0004 00AF     		add	r7, sp, #0
 1679              		.cfi_def_cfa_register 7
 1680 0006 0200     		movs	r2, r0
 1681 0008 FB1D     		adds	r3, r7, #7
 1682 000a 1A70     		strb	r2, [r3]
2587:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1683              		.loc 1 2587 0
 1684 000c 064B     		ldr	r3, .L100
 1685 000e FA1D     		adds	r2, r7, #7
 1686 0010 1278     		ldrb	r2, [r2]
 1687 0012 1F21     		movs	r1, #31
 1688 0014 0A40     		ands	r2, r1
 1689 0016 0121     		movs	r1, #1
 1690 0018 9140     		lsls	r1, r1, r2
 1691 001a 0A00     		movs	r2, r1
 1692 001c 1A60     		str	r2, [r3]
2588:Generated_Source\PSoC4/CyLib.c **** }
 1693              		.loc 1 2588 0
 1694 001e C046     		nop
 1695 0020 BD46     		mov	sp, r7
 1696 0022 02B0     		add	sp, sp, #8
 1697              		@ sp needed
 1698 0024 80BD     		pop	{r7, pc}
 1699              	.L101:
 1700 0026 C046     		.align	2
 1701              	.L100:
 1702 0028 00E100E0 		.word	-536813312
 1703              		.cfi_endproc
 1704              	.LFE24:
 1705              		.size	CyIntEnable, .-CyIntEnable
 1706              		.section	.text.CyIntGetState,"ax",%progbits
 1707              		.align	2
 1708              		.global	CyIntGetState
 1709              		.code	16
 1710              		.thumb_func
 1711              		.type	CyIntGetState, %function
 1712              	CyIntGetState:
 1713              	.LFB25:
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c **** 
2591:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2592:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2593:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2596:Generated_Source\PSoC4/CyLib.c **** *
2597:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2598:Generated_Source\PSoC4/CyLib.c **** *
2599:Generated_Source\PSoC4/CyLib.c **** * \return
2600:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2603:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2604:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 77


 1714              		.loc 1 2604 0
 1715              		.cfi_startproc
 1716              		@ args = 0, pretend = 0, frame = 8
 1717              		@ frame_needed = 1, uses_anonymous_args = 0
 1718 0000 80B5     		push	{r7, lr}
 1719              		.cfi_def_cfa_offset 8
 1720              		.cfi_offset 7, -8
 1721              		.cfi_offset 14, -4
 1722 0002 82B0     		sub	sp, sp, #8
 1723              		.cfi_def_cfa_offset 16
 1724 0004 00AF     		add	r7, sp, #0
 1725              		.cfi_def_cfa_register 7
 1726 0006 0200     		movs	r2, r0
 1727 0008 FB1D     		adds	r3, r7, #7
 1728 000a 1A70     		strb	r2, [r3]
2605:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2606:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1729              		.loc 1 2606 0
 1730 000c 074B     		ldr	r3, .L104
 1731 000e 1A68     		ldr	r2, [r3]
 1732 0010 FB1D     		adds	r3, r7, #7
 1733 0012 1B78     		ldrb	r3, [r3]
 1734 0014 1F21     		movs	r1, #31
 1735 0016 0B40     		ands	r3, r1
 1736 0018 DA40     		lsrs	r2, r2, r3
 1737 001a 1300     		movs	r3, r2
 1738 001c DBB2     		uxtb	r3, r3
 1739 001e 0122     		movs	r2, #1
 1740 0020 1340     		ands	r3, r2
 1741 0022 DBB2     		uxtb	r3, r3
2607:Generated_Source\PSoC4/CyLib.c **** }
 1742              		.loc 1 2607 0
 1743 0024 1800     		movs	r0, r3
 1744 0026 BD46     		mov	sp, r7
 1745 0028 02B0     		add	sp, sp, #8
 1746              		@ sp needed
 1747 002a 80BD     		pop	{r7, pc}
 1748              	.L105:
 1749              		.align	2
 1750              	.L104:
 1751 002c 00E100E0 		.word	-536813312
 1752              		.cfi_endproc
 1753              	.LFE25:
 1754              		.size	CyIntGetState, .-CyIntGetState
 1755              		.section	.text.CyIntDisable,"ax",%progbits
 1756              		.align	2
 1757              		.global	CyIntDisable
 1758              		.code	16
 1759              		.thumb_func
 1760              		.type	CyIntDisable, %function
 1761              	CyIntDisable:
 1762              	.LFB26:
2608:Generated_Source\PSoC4/CyLib.c **** 
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2611:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2612:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 78


2613:Generated_Source\PSoC4/CyLib.c **** *
2614:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2615:Generated_Source\PSoC4/CyLib.c **** *
2616:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2617:Generated_Source\PSoC4/CyLib.c **** *
2618:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2620:Generated_Source\PSoC4/CyLib.c **** {
 1763              		.loc 1 2620 0
 1764              		.cfi_startproc
 1765              		@ args = 0, pretend = 0, frame = 8
 1766              		@ frame_needed = 1, uses_anonymous_args = 0
 1767 0000 80B5     		push	{r7, lr}
 1768              		.cfi_def_cfa_offset 8
 1769              		.cfi_offset 7, -8
 1770              		.cfi_offset 14, -4
 1771 0002 82B0     		sub	sp, sp, #8
 1772              		.cfi_def_cfa_offset 16
 1773 0004 00AF     		add	r7, sp, #0
 1774              		.cfi_def_cfa_register 7
 1775 0006 0200     		movs	r2, r0
 1776 0008 FB1D     		adds	r3, r7, #7
 1777 000a 1A70     		strb	r2, [r3]
2621:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1778              		.loc 1 2621 0
 1779 000c 064B     		ldr	r3, .L107
 1780 000e FA1D     		adds	r2, r7, #7
 1781 0010 1278     		ldrb	r2, [r2]
 1782 0012 1F21     		movs	r1, #31
 1783 0014 0A40     		ands	r2, r1
 1784 0016 0121     		movs	r1, #1
 1785 0018 9140     		lsls	r1, r1, r2
 1786 001a 0A00     		movs	r2, r1
 1787 001c 1A60     		str	r2, [r3]
2622:Generated_Source\PSoC4/CyLib.c **** }
 1788              		.loc 1 2622 0
 1789 001e C046     		nop
 1790 0020 BD46     		mov	sp, r7
 1791 0022 02B0     		add	sp, sp, #8
 1792              		@ sp needed
 1793 0024 80BD     		pop	{r7, pc}
 1794              	.L108:
 1795 0026 C046     		.align	2
 1796              	.L107:
 1797 0028 80E100E0 		.word	-536813184
 1798              		.cfi_endproc
 1799              	.LFE26:
 1800              		.size	CyIntDisable, .-CyIntDisable
 1801              		.section	.text.CyIntSetPending,"ax",%progbits
 1802              		.align	2
 1803              		.global	CyIntSetPending
 1804              		.code	16
 1805              		.thumb_func
 1806              		.type	CyIntSetPending, %function
 1807              	CyIntSetPending:
 1808              	.LFB27:
2623:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 79


2624:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2625:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2626:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2627:Generated_Source\PSoC4/CyLib.c **** *
2628:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2629:Generated_Source\PSoC4/CyLib.c **** *
2630:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2634:Generated_Source\PSoC4/CyLib.c **** {
 1809              		.loc 1 2634 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 8
 1812              		@ frame_needed = 1, uses_anonymous_args = 0
 1813 0000 80B5     		push	{r7, lr}
 1814              		.cfi_def_cfa_offset 8
 1815              		.cfi_offset 7, -8
 1816              		.cfi_offset 14, -4
 1817 0002 82B0     		sub	sp, sp, #8
 1818              		.cfi_def_cfa_offset 16
 1819 0004 00AF     		add	r7, sp, #0
 1820              		.cfi_def_cfa_register 7
 1821 0006 0200     		movs	r2, r0
 1822 0008 FB1D     		adds	r3, r7, #7
 1823 000a 1A70     		strb	r2, [r3]
2635:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1824              		.loc 1 2635 0
 1825 000c 064B     		ldr	r3, .L110
 1826 000e FA1D     		adds	r2, r7, #7
 1827 0010 1278     		ldrb	r2, [r2]
 1828 0012 1F21     		movs	r1, #31
 1829 0014 0A40     		ands	r2, r1
 1830 0016 0121     		movs	r1, #1
 1831 0018 9140     		lsls	r1, r1, r2
 1832 001a 0A00     		movs	r2, r1
 1833 001c 1A60     		str	r2, [r3]
2636:Generated_Source\PSoC4/CyLib.c **** }
 1834              		.loc 1 2636 0
 1835 001e C046     		nop
 1836 0020 BD46     		mov	sp, r7
 1837 0022 02B0     		add	sp, sp, #8
 1838              		@ sp needed
 1839 0024 80BD     		pop	{r7, pc}
 1840              	.L111:
 1841 0026 C046     		.align	2
 1842              	.L110:
 1843 0028 00E200E0 		.word	-536813056
 1844              		.cfi_endproc
 1845              	.LFE27:
 1846              		.size	CyIntSetPending, .-CyIntSetPending
 1847              		.section	.text.CyIntClearPending,"ax",%progbits
 1848              		.align	2
 1849              		.global	CyIntClearPending
 1850              		.code	16
 1851              		.thumb_func
 1852              		.type	CyIntClearPending, %function
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 80


 1853              	CyIntClearPending:
 1854              	.LFB28:
2637:Generated_Source\PSoC4/CyLib.c **** 
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2642:Generated_Source\PSoC4/CyLib.c **** *
2643:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2644:Generated_Source\PSoC4/CyLib.c **** *
2645:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2646:Generated_Source\PSoC4/CyLib.c **** *
2647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2648:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2649:Generated_Source\PSoC4/CyLib.c **** {
 1855              		.loc 1 2649 0
 1856              		.cfi_startproc
 1857              		@ args = 0, pretend = 0, frame = 8
 1858              		@ frame_needed = 1, uses_anonymous_args = 0
 1859 0000 80B5     		push	{r7, lr}
 1860              		.cfi_def_cfa_offset 8
 1861              		.cfi_offset 7, -8
 1862              		.cfi_offset 14, -4
 1863 0002 82B0     		sub	sp, sp, #8
 1864              		.cfi_def_cfa_offset 16
 1865 0004 00AF     		add	r7, sp, #0
 1866              		.cfi_def_cfa_register 7
 1867 0006 0200     		movs	r2, r0
 1868 0008 FB1D     		adds	r3, r7, #7
 1869 000a 1A70     		strb	r2, [r3]
2650:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1870              		.loc 1 2650 0
 1871 000c 064B     		ldr	r3, .L113
 1872 000e FA1D     		adds	r2, r7, #7
 1873 0010 1278     		ldrb	r2, [r2]
 1874 0012 1F21     		movs	r1, #31
 1875 0014 0A40     		ands	r2, r1
 1876 0016 0121     		movs	r1, #1
 1877 0018 9140     		lsls	r1, r1, r2
 1878 001a 0A00     		movs	r2, r1
 1879 001c 1A60     		str	r2, [r3]
2651:Generated_Source\PSoC4/CyLib.c **** }
 1880              		.loc 1 2651 0
 1881 001e C046     		nop
 1882 0020 BD46     		mov	sp, r7
 1883 0022 02B0     		add	sp, sp, #8
 1884              		@ sp needed
 1885 0024 80BD     		pop	{r7, pc}
 1886              	.L114:
 1887 0026 C046     		.align	2
 1888              	.L113:
 1889 0028 80E200E0 		.word	-536812928
 1890              		.cfi_endproc
 1891              	.LFE28:
 1892              		.size	CyIntClearPending, .-CyIntClearPending
 1893              		.section	.text.CyHalt,"ax",%progbits
 1894              		.align	2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 81


 1895              		.global	CyHalt
 1896              		.code	16
 1897              		.thumb_func
 1898              		.type	CyHalt, %function
 1899              	CyHalt:
 1900              	.LFB29:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2661:Generated_Source\PSoC4/CyLib.c **** *
2662:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2663:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2664:Generated_Source\PSoC4/CyLib.c **** {
 1901              		.loc 1 2664 0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 8
 1904              		@ frame_needed = 1, uses_anonymous_args = 0
 1905 0000 80B5     		push	{r7, lr}
 1906              		.cfi_def_cfa_offset 8
 1907              		.cfi_offset 7, -8
 1908              		.cfi_offset 14, -4
 1909 0002 82B0     		sub	sp, sp, #8
 1910              		.cfi_def_cfa_offset 16
 1911 0004 00AF     		add	r7, sp, #0
 1912              		.cfi_def_cfa_register 7
 1913 0006 0200     		movs	r2, r0
 1914 0008 FB1D     		adds	r3, r7, #7
 1915 000a 1A70     		strb	r2, [r3]
2665:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2666:Generated_Source\PSoC4/CyLib.c ****     {
2667:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2668:Generated_Source\PSoC4/CyLib.c ****     }
2669:Generated_Source\PSoC4/CyLib.c **** 
2670:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2671:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2672:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2673:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1916              		.loc 1 2673 0
 1917              		.syntax divided
 1918              	@ 2673 "Generated_Source\PSoC4\CyLib.c" 1
 1919 000c 01BE     		    bkpt    1
 1920              	@ 0 "" 2
2674:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2675:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2676:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2677:Generated_Source\PSoC4/CyLib.c **** }
 1921              		.loc 1 2677 0
 1922              		.thumb
 1923              		.syntax unified
 1924 000e C046     		nop
 1925 0010 BD46     		mov	sp, r7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 82


 1926 0012 02B0     		add	sp, sp, #8
 1927              		@ sp needed
 1928 0014 80BD     		pop	{r7, pc}
 1929              		.cfi_endproc
 1930              	.LFE29:
 1931              		.size	CyHalt, .-CyHalt
 1932 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 1933              		.align	2
 1934              		.global	CySoftwareReset
 1935              		.code	16
 1936              		.thumb_func
 1937              		.type	CySoftwareReset, %function
 1938              	CySoftwareReset:
 1939              	.LFB30:
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
 1940              		.loc 1 2688 0
 1941              		.cfi_startproc
 1942              		@ args = 0, pretend = 0, frame = 0
 1943              		@ frame_needed = 1, uses_anonymous_args = 0
 1944 0000 80B5     		push	{r7, lr}
 1945              		.cfi_def_cfa_offset 8
 1946              		.cfi_offset 7, -8
 1947              		.cfi_offset 14, -4
 1948 0002 00AF     		add	r7, sp, #0
 1949              		.cfi_def_cfa_register 7
2689:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2690:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2691:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2692:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2693:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1950              		.loc 1 2693 0
 1951 0004 054B     		ldr	r3, .L117
 1952 0006 054A     		ldr	r2, .L117
 1953 0008 1268     		ldr	r2, [r2]
 1954 000a 1204     		lsls	r2, r2, #16
 1955 000c 120C     		lsrs	r2, r2, #16
2694:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1956              		.loc 1 2694 0
 1957 000e 0449     		ldr	r1, .L117+4
 1958 0010 0A43     		orrs	r2, r1
2693:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1959              		.loc 1 2693 0
 1960 0012 1A60     		str	r2, [r3]
2695:Generated_Source\PSoC4/CyLib.c **** }
 1961              		.loc 1 2695 0
 1962 0014 C046     		nop
 1963 0016 BD46     		mov	sp, r7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 83


 1964              		@ sp needed
 1965 0018 80BD     		pop	{r7, pc}
 1966              	.L118:
 1967 001a C046     		.align	2
 1968              	.L117:
 1969 001c 0CED00E0 		.word	-536810228
 1970 0020 0400FA05 		.word	100270084
 1971              		.cfi_endproc
 1972              	.LFE30:
 1973              		.size	CySoftwareReset, .-CySoftwareReset
 1974              		.section	.text.CyDelay,"ax",%progbits
 1975              		.align	2
 1976              		.global	CyDelay
 1977              		.code	16
 1978              		.thumb_func
 1979              		.type	CyDelay, %function
 1980              	CyDelay:
 1981              	.LFB31:
2696:Generated_Source\PSoC4/CyLib.c **** 
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2701:Generated_Source\PSoC4/CyLib.c **** *
2702:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2705:Generated_Source\PSoC4/CyLib.c **** *
2706:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2708:Generated_Source\PSoC4/CyLib.c **** {
 1982              		.loc 1 2708 0
 1983              		.cfi_startproc
 1984              		@ args = 0, pretend = 0, frame = 8
 1985              		@ frame_needed = 1, uses_anonymous_args = 0
 1986 0000 80B5     		push	{r7, lr}
 1987              		.cfi_def_cfa_offset 8
 1988              		.cfi_offset 7, -8
 1989              		.cfi_offset 14, -4
 1990 0002 82B0     		sub	sp, sp, #8
 1991              		.cfi_def_cfa_offset 16
 1992 0004 00AF     		add	r7, sp, #0
 1993              		.cfi_def_cfa_register 7
 1994 0006 7860     		str	r0, [r7, #4]
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1995              		.loc 1 2709 0
 1996 0008 09E0     		b	.L120
 1997              	.L121:
2710:Generated_Source\PSoC4/CyLib.c ****     {
2711:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2712:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2713:Generated_Source\PSoC4/CyLib.c ****          */
2714:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1998              		.loc 1 2714 0
 1999 000a 0D4B     		ldr	r3, .L122
 2000 000c 1B68     		ldr	r3, [r3]
 2001 000e 1800     		movs	r0, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 84


 2002 0010 FFF7FEFF 		bl	CyDelayCycles
2715:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 2003              		.loc 1 2715 0
 2004 0014 7B68     		ldr	r3, [r7, #4]
 2005 0016 0B4A     		ldr	r2, .L122+4
 2006 0018 9446     		mov	ip, r2
 2007 001a 6344     		add	r3, r3, ip
 2008 001c 7B60     		str	r3, [r7, #4]
 2009              	.L120:
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 2010              		.loc 1 2709 0
 2011 001e 7A68     		ldr	r2, [r7, #4]
 2012 0020 8023     		movs	r3, #128
 2013 0022 1B02     		lsls	r3, r3, #8
 2014 0024 9A42     		cmp	r2, r3
 2015 0026 F0D8     		bhi	.L121
2716:Generated_Source\PSoC4/CyLib.c ****     }
2717:Generated_Source\PSoC4/CyLib.c **** 
2718:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 2016              		.loc 1 2718 0
 2017 0028 074B     		ldr	r3, .L122+8
 2018 002a 1B68     		ldr	r3, [r3]
 2019 002c 7A68     		ldr	r2, [r7, #4]
 2020 002e 5343     		muls	r3, r2
 2021 0030 1800     		movs	r0, r3
 2022 0032 FFF7FEFF 		bl	CyDelayCycles
2719:Generated_Source\PSoC4/CyLib.c **** }
 2023              		.loc 1 2719 0
 2024 0036 C046     		nop
 2025 0038 BD46     		mov	sp, r7
 2026 003a 02B0     		add	sp, sp, #8
 2027              		@ sp needed
 2028 003c 80BD     		pop	{r7, pc}
 2029              	.L123:
 2030 003e C046     		.align	2
 2031              	.L122:
 2032 0040 00000000 		.word	cydelay32kMs
 2033 0044 0080FFFF 		.word	-32768
 2034 0048 00000000 		.word	cydelayFreqKhz
 2035              		.cfi_endproc
 2036              	.LFE31:
 2037              		.size	CyDelay, .-CyDelay
 2038              		.section	.text.CyDelayUs,"ax",%progbits
 2039              		.align	2
 2040              		.global	CyDelayUs
 2041              		.code	16
 2042              		.thumb_func
 2043              		.type	CyDelayUs, %function
 2044              	CyDelayUs:
 2045              	.LFB32:
2720:Generated_Source\PSoC4/CyLib.c **** 
2721:Generated_Source\PSoC4/CyLib.c **** 
2722:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2723:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2724:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2725:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2726:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 85


2727:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2728:Generated_Source\PSoC4/CyLib.c **** *
2729:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2730:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2731:Generated_Source\PSoC4/CyLib.c **** {
 2046              		.loc 1 2731 0
 2047              		.cfi_startproc
 2048              		@ args = 0, pretend = 0, frame = 8
 2049              		@ frame_needed = 1, uses_anonymous_args = 0
 2050 0000 80B5     		push	{r7, lr}
 2051              		.cfi_def_cfa_offset 8
 2052              		.cfi_offset 7, -8
 2053              		.cfi_offset 14, -4
 2054 0002 82B0     		sub	sp, sp, #8
 2055              		.cfi_def_cfa_offset 16
 2056 0004 00AF     		add	r7, sp, #0
 2057              		.cfi_def_cfa_register 7
 2058 0006 0200     		movs	r2, r0
 2059 0008 BB1D     		adds	r3, r7, #6
 2060 000a 1A80     		strh	r2, [r3]
2732:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 2061              		.loc 1 2732 0
 2062 000c BB1D     		adds	r3, r7, #6
 2063 000e 1B88     		ldrh	r3, [r3]
 2064 0010 044A     		ldr	r2, .L125
 2065 0012 1278     		ldrb	r2, [r2]
 2066 0014 5343     		muls	r3, r2
 2067 0016 1800     		movs	r0, r3
 2068 0018 FFF7FEFF 		bl	CyDelayCycles
2733:Generated_Source\PSoC4/CyLib.c **** }
 2069              		.loc 1 2733 0
 2070 001c C046     		nop
 2071 001e BD46     		mov	sp, r7
 2072 0020 02B0     		add	sp, sp, #8
 2073              		@ sp needed
 2074 0022 80BD     		pop	{r7, pc}
 2075              	.L126:
 2076              		.align	2
 2077              	.L125:
 2078 0024 00000000 		.word	cydelayFreqMhz
 2079              		.cfi_endproc
 2080              	.LFE32:
 2081              		.size	CyDelayUs, .-CyDelayUs
 2082              		.global	__aeabi_uidiv
 2083              		.section	.text.CyDelayFreq,"ax",%progbits
 2084              		.align	2
 2085              		.global	CyDelayFreq
 2086              		.code	16
 2087              		.thumb_func
 2088              		.type	CyDelayFreq, %function
 2089              	CyDelayFreq:
 2090              	.LFB33:
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** 
2736:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2737:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2738:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 86


2739:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2744:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2745:Generated_Source\PSoC4/CyLib.c **** {
 2091              		.loc 1 2745 0
 2092              		.cfi_startproc
 2093              		@ args = 0, pretend = 0, frame = 8
 2094              		@ frame_needed = 1, uses_anonymous_args = 0
 2095 0000 80B5     		push	{r7, lr}
 2096              		.cfi_def_cfa_offset 8
 2097              		.cfi_offset 7, -8
 2098              		.cfi_offset 14, -4
 2099 0002 82B0     		sub	sp, sp, #8
 2100              		.cfi_def_cfa_offset 16
 2101 0004 00AF     		add	r7, sp, #0
 2102              		.cfi_def_cfa_register 7
 2103 0006 7860     		str	r0, [r7, #4]
2746:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 2104              		.loc 1 2746 0
 2105 0008 7B68     		ldr	r3, [r7, #4]
 2106 000a 002B     		cmp	r3, #0
 2107 000c 03D0     		beq	.L128
2747:Generated_Source\PSoC4/CyLib.c ****     {
2748:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 2108              		.loc 1 2748 0
 2109 000e 154B     		ldr	r3, .L130
 2110 0010 7A68     		ldr	r2, [r7, #4]
 2111 0012 1A60     		str	r2, [r3]
 2112 0014 02E0     		b	.L129
 2113              	.L128:
2749:Generated_Source\PSoC4/CyLib.c ****     }
2750:Generated_Source\PSoC4/CyLib.c ****     else
2751:Generated_Source\PSoC4/CyLib.c ****     {
2752:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 2114              		.loc 1 2752 0
 2115 0016 134B     		ldr	r3, .L130
 2116 0018 134A     		ldr	r2, .L130+4
 2117 001a 1A60     		str	r2, [r3]
 2118              	.L129:
2753:Generated_Source\PSoC4/CyLib.c ****     }
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 2119              		.loc 1 2755 0
 2120 001c 114B     		ldr	r3, .L130
 2121 001e 1B68     		ldr	r3, [r3]
 2122 0020 124A     		ldr	r2, .L130+8
 2123 0022 9446     		mov	ip, r2
 2124 0024 6344     		add	r3, r3, ip
 2125 0026 1249     		ldr	r1, .L130+12
 2126 0028 1800     		movs	r0, r3
 2127 002a FFF7FEFF 		bl	__aeabi_uidiv
 2128 002e 0300     		movs	r3, r0
 2129 0030 DAB2     		uxtb	r2, r3
 2130 0032 104B     		ldr	r3, .L130+16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 87


 2131 0034 1A70     		strb	r2, [r3]
2756:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 2132              		.loc 1 2756 0
 2133 0036 0B4B     		ldr	r3, .L130
 2134 0038 1B68     		ldr	r3, [r3]
 2135 003a 0F4A     		ldr	r2, .L130+20
 2136 003c 9A18     		adds	r2, r3, r2
 2137 003e FA23     		movs	r3, #250
 2138 0040 9900     		lsls	r1, r3, #2
 2139 0042 1000     		movs	r0, r2
 2140 0044 FFF7FEFF 		bl	__aeabi_uidiv
 2141 0048 0300     		movs	r3, r0
 2142 004a 1A00     		movs	r2, r3
 2143 004c 0B4B     		ldr	r3, .L130+24
 2144 004e 1A60     		str	r2, [r3]
2757:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 2145              		.loc 1 2757 0
 2146 0050 0A4B     		ldr	r3, .L130+24
 2147 0052 1B68     		ldr	r3, [r3]
 2148 0054 DA03     		lsls	r2, r3, #15
 2149 0056 0A4B     		ldr	r3, .L130+28
 2150 0058 1A60     		str	r2, [r3]
2758:Generated_Source\PSoC4/CyLib.c **** }
 2151              		.loc 1 2758 0
 2152 005a C046     		nop
 2153 005c BD46     		mov	sp, r7
 2154 005e 02B0     		add	sp, sp, #8
 2155              		@ sp needed
 2156 0060 80BD     		pop	{r7, pc}
 2157              	.L131:
 2158 0062 C046     		.align	2
 2159              	.L130:
 2160 0064 00000000 		.word	cydelayFreqHz
 2161 0068 006CDC02 		.word	48000000
 2162 006c 3F420F00 		.word	999999
 2163 0070 40420F00 		.word	1000000
 2164 0074 00000000 		.word	cydelayFreqMhz
 2165 0078 E7030000 		.word	999
 2166 007c 00000000 		.word	cydelayFreqKhz
 2167 0080 00000000 		.word	cydelay32kMs
 2168              		.cfi_endproc
 2169              	.LFE33:
 2170              		.size	CyDelayFreq, .-CyDelayFreq
 2171              		.section	.text.CySysTickStart,"ax",%progbits
 2172              		.align	2
 2173              		.global	CySysTickStart
 2174              		.code	16
 2175              		.thumb_func
 2176              		.type	CySysTickStart, %function
 2177              	CySysTickStart:
 2178              	.LFB34:
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2762:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2763:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2764:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 88


2765:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2766:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2769:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2770:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2771:Generated_Source\PSoC4/CyLib.c **** *
2772:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2773:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2776:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2777:Generated_Source\PSoC4/CyLib.c **** {
 2179              		.loc 1 2777 0
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 0
 2182              		@ frame_needed = 1, uses_anonymous_args = 0
 2183 0000 80B5     		push	{r7, lr}
 2184              		.cfi_def_cfa_offset 8
 2185              		.cfi_offset 7, -8
 2186              		.cfi_offset 14, -4
 2187 0002 00AF     		add	r7, sp, #0
 2188              		.cfi_def_cfa_register 7
2778:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2189              		.loc 1 2778 0
 2190 0004 064B     		ldr	r3, .L134
 2191 0006 1B68     		ldr	r3, [r3]
 2192 0008 002B     		cmp	r3, #0
 2193 000a 04D1     		bne	.L133
2779:Generated_Source\PSoC4/CyLib.c ****     {
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 2194              		.loc 1 2780 0
 2195 000c FFF7FEFF 		bl	CySysTickInit
2781:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2196              		.loc 1 2781 0
 2197 0010 034B     		ldr	r3, .L134
 2198 0012 0122     		movs	r2, #1
 2199 0014 1A60     		str	r2, [r3]
 2200              	.L133:
2782:Generated_Source\PSoC4/CyLib.c ****     }
2783:Generated_Source\PSoC4/CyLib.c **** 
2784:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 2201              		.loc 1 2784 0
 2202 0016 FFF7FEFF 		bl	CySysTickEnable
2785:Generated_Source\PSoC4/CyLib.c **** }
 2203              		.loc 1 2785 0
 2204 001a C046     		nop
 2205 001c BD46     		mov	sp, r7
 2206              		@ sp needed
 2207 001e 80BD     		pop	{r7, pc}
 2208              	.L135:
 2209              		.align	2
 2210              	.L134:
 2211 0020 00000000 		.word	CySysTickInitVar
 2212              		.cfi_endproc
 2213              	.LFE34:
 2214              		.size	CySysTickStart, .-CySysTickStart
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 89


 2215              		.section	.text.CySysTickInit,"ax",%progbits
 2216              		.align	2
 2217              		.global	CySysTickInit
 2218              		.code	16
 2219              		.thumb_func
 2220              		.type	CySysTickInit, %function
 2221              	CySysTickInit:
 2222              	.LFB35:
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2789:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2790:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2791:Generated_Source\PSoC4/CyLib.c **** *
2792:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2793:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2794:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2798:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2799:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2800:Generated_Source\PSoC4/CyLib.c **** *
2801:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2802:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2803:Generated_Source\PSoC4/CyLib.c **** *
2804:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2805:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2806:Generated_Source\PSoC4/CyLib.c **** {
 2223              		.loc 1 2806 0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 8
 2226              		@ frame_needed = 1, uses_anonymous_args = 0
 2227 0000 80B5     		push	{r7, lr}
 2228              		.cfi_def_cfa_offset 8
 2229              		.cfi_offset 7, -8
 2230              		.cfi_offset 14, -4
 2231 0002 82B0     		sub	sp, sp, #8
 2232              		.cfi_def_cfa_offset 16
 2233 0004 00AF     		add	r7, sp, #0
 2234              		.cfi_def_cfa_register 7
2807:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2235              		.loc 1 2809 0
 2236 0006 0023     		movs	r3, #0
 2237 0008 7B60     		str	r3, [r7, #4]
 2238 000a 07E0     		b	.L137
 2239              	.L138:
2810:Generated_Source\PSoC4/CyLib.c ****     {
2811:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2240              		.loc 1 2811 0 discriminator 3
 2241 000c 114B     		ldr	r3, .L139
 2242 000e 7A68     		ldr	r2, [r7, #4]
 2243 0010 9200     		lsls	r2, r2, #2
 2244 0012 0021     		movs	r1, #0
 2245 0014 D150     		str	r1, [r2, r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 90


2809:Generated_Source\PSoC4/CyLib.c ****     {
 2246              		.loc 1 2809 0 discriminator 3
 2247 0016 7B68     		ldr	r3, [r7, #4]
 2248 0018 0133     		adds	r3, r3, #1
 2249 001a 7B60     		str	r3, [r7, #4]
 2250              	.L137:
2809:Generated_Source\PSoC4/CyLib.c ****     {
 2251              		.loc 1 2809 0 is_stmt 0 discriminator 1
 2252 001c 7B68     		ldr	r3, [r7, #4]
 2253 001e 042B     		cmp	r3, #4
 2254 0020 F4D9     		bls	.L138
2812:Generated_Source\PSoC4/CyLib.c ****     }
2813:Generated_Source\PSoC4/CyLib.c **** 
2814:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2255              		.loc 1 2814 0 is_stmt 1
 2256 0022 0D4B     		ldr	r3, .L139+4
 2257 0024 1900     		movs	r1, r3
 2258 0026 0F20     		movs	r0, #15
 2259 0028 FFF7FEFF 		bl	CyIntSetSysVector
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2817:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 2260              		.loc 1 2817 0
 2261 002c 0120     		movs	r0, #1
 2262 002e FFF7FEFF 		bl	CySysTickSetClockSource
2818:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2819:Generated_Source\PSoC4/CyLib.c **** 
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2263              		.loc 1 2820 0
 2264 0032 0A4B     		ldr	r3, .L139+8
 2265 0034 1A68     		ldr	r2, [r3]
 2266 0036 FA23     		movs	r3, #250
 2267 0038 9900     		lsls	r1, r3, #2
 2268 003a 1000     		movs	r0, r2
 2269 003c FFF7FEFF 		bl	__aeabi_uidiv
 2270 0040 0300     		movs	r3, r0
 2271 0042 1800     		movs	r0, r3
 2272 0044 FFF7FEFF 		bl	CySysTickSetReload
2821:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2273              		.loc 1 2821 0
 2274 0048 FFF7FEFF 		bl	CySysTickClear
2822:Generated_Source\PSoC4/CyLib.c **** }
 2275              		.loc 1 2822 0
 2276 004c C046     		nop
 2277 004e BD46     		mov	sp, r7
 2278 0050 02B0     		add	sp, sp, #8
 2279              		@ sp needed
 2280 0052 80BD     		pop	{r7, pc}
 2281              	.L140:
 2282              		.align	2
 2283              	.L139:
 2284 0054 00000000 		.word	CySysTickCallbacks
 2285 0058 00000000 		.word	CySysTickServiceCallbacks
 2286 005c 00000000 		.word	cydelayFreqHz
 2287              		.cfi_endproc
 2288              	.LFE35:
 2289              		.size	CySysTickInit, .-CySysTickInit
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 91


 2290              		.section	.text.CySysTickEnable,"ax",%progbits
 2291              		.align	2
 2292              		.global	CySysTickEnable
 2293              		.code	16
 2294              		.thumb_func
 2295              		.type	CySysTickEnable, %function
 2296              	CySysTickEnable:
 2297              	.LFB36:
2823:Generated_Source\PSoC4/CyLib.c **** 
2824:Generated_Source\PSoC4/CyLib.c **** 
2825:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2827:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2828:Generated_Source\PSoC4/CyLib.c **** *
2829:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2830:Generated_Source\PSoC4/CyLib.c **** *
2831:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2832:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2833:Generated_Source\PSoC4/CyLib.c **** *
2834:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2835:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2836:Generated_Source\PSoC4/CyLib.c **** {
 2298              		.loc 1 2836 0
 2299              		.cfi_startproc
 2300              		@ args = 0, pretend = 0, frame = 0
 2301              		@ frame_needed = 1, uses_anonymous_args = 0
 2302 0000 80B5     		push	{r7, lr}
 2303              		.cfi_def_cfa_offset 8
 2304              		.cfi_offset 7, -8
 2305              		.cfi_offset 14, -4
 2306 0002 00AF     		add	r7, sp, #0
 2307              		.cfi_def_cfa_register 7
2837:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2308              		.loc 1 2837 0
 2309 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2838:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2310              		.loc 1 2838 0
 2311 0008 044B     		ldr	r3, .L142
 2312 000a 044A     		ldr	r2, .L142
 2313 000c 1268     		ldr	r2, [r2]
 2314 000e 0121     		movs	r1, #1
 2315 0010 0A43     		orrs	r2, r1
 2316 0012 1A60     		str	r2, [r3]
2839:Generated_Source\PSoC4/CyLib.c **** }
 2317              		.loc 1 2839 0
 2318 0014 C046     		nop
 2319 0016 BD46     		mov	sp, r7
 2320              		@ sp needed
 2321 0018 80BD     		pop	{r7, pc}
 2322              	.L143:
 2323 001a C046     		.align	2
 2324              	.L142:
 2325 001c 10E000E0 		.word	-536813552
 2326              		.cfi_endproc
 2327              	.LFE36:
 2328              		.size	CySysTickEnable, .-CySysTickEnable
 2329              		.section	.text.CySysTickStop,"ax",%progbits
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 92


 2330              		.align	2
 2331              		.global	CySysTickStop
 2332              		.code	16
 2333              		.thumb_func
 2334              		.type	CySysTickStop, %function
 2335              	CySysTickStop:
 2336              	.LFB37:
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2849:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2850:Generated_Source\PSoC4/CyLib.c **** *
2851:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2852:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2853:Generated_Source\PSoC4/CyLib.c **** {
 2337              		.loc 1 2853 0
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 0
 2340              		@ frame_needed = 1, uses_anonymous_args = 0
 2341 0000 80B5     		push	{r7, lr}
 2342              		.cfi_def_cfa_offset 8
 2343              		.cfi_offset 7, -8
 2344              		.cfi_offset 14, -4
 2345 0002 00AF     		add	r7, sp, #0
 2346              		.cfi_def_cfa_register 7
2854:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2347              		.loc 1 2854 0
 2348 0004 044B     		ldr	r3, .L145
 2349 0006 044A     		ldr	r2, .L145
 2350 0008 1268     		ldr	r2, [r2]
 2351 000a 0121     		movs	r1, #1
 2352 000c 8A43     		bics	r2, r1
 2353 000e 1A60     		str	r2, [r3]
2855:Generated_Source\PSoC4/CyLib.c **** }
 2354              		.loc 1 2855 0
 2355 0010 C046     		nop
 2356 0012 BD46     		mov	sp, r7
 2357              		@ sp needed
 2358 0014 80BD     		pop	{r7, pc}
 2359              	.L146:
 2360 0016 C046     		.align	2
 2361              	.L145:
 2362 0018 10E000E0 		.word	-536813552
 2363              		.cfi_endproc
 2364              	.LFE37:
 2365              		.size	CySysTickStop, .-CySysTickStop
 2366              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2367              		.align	2
 2368              		.global	CySysTickEnableInterrupt
 2369              		.code	16
 2370              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 93


 2371              		.type	CySysTickEnableInterrupt, %function
 2372              	CySysTickEnableInterrupt:
 2373              	.LFB38:
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c **** 
2858:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2859:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2860:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2865:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2866:Generated_Source\PSoC4/CyLib.c **** *
2867:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2868:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2869:Generated_Source\PSoC4/CyLib.c **** {
 2374              		.loc 1 2869 0
 2375              		.cfi_startproc
 2376              		@ args = 0, pretend = 0, frame = 0
 2377              		@ frame_needed = 1, uses_anonymous_args = 0
 2378 0000 80B5     		push	{r7, lr}
 2379              		.cfi_def_cfa_offset 8
 2380              		.cfi_offset 7, -8
 2381              		.cfi_offset 14, -4
 2382 0002 00AF     		add	r7, sp, #0
 2383              		.cfi_def_cfa_register 7
2870:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2384              		.loc 1 2870 0
 2385 0004 044B     		ldr	r3, .L148
 2386 0006 044A     		ldr	r2, .L148
 2387 0008 1268     		ldr	r2, [r2]
 2388 000a 0221     		movs	r1, #2
 2389 000c 0A43     		orrs	r2, r1
 2390 000e 1A60     		str	r2, [r3]
2871:Generated_Source\PSoC4/CyLib.c **** }
 2391              		.loc 1 2871 0
 2392 0010 C046     		nop
 2393 0012 BD46     		mov	sp, r7
 2394              		@ sp needed
 2395 0014 80BD     		pop	{r7, pc}
 2396              	.L149:
 2397 0016 C046     		.align	2
 2398              	.L148:
 2399 0018 10E000E0 		.word	-536813552
 2400              		.cfi_endproc
 2401              	.LFE38:
 2402              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2403              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2404              		.align	2
 2405              		.global	CySysTickDisableInterrupt
 2406              		.code	16
 2407              		.thumb_func
 2408              		.type	CySysTickDisableInterrupt, %function
 2409              	CySysTickDisableInterrupt:
 2410              	.LFB39:
2872:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 94


2873:Generated_Source\PSoC4/CyLib.c **** 
2874:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2875:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2876:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2879:Generated_Source\PSoC4/CyLib.c **** *
2880:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2881:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2882:Generated_Source\PSoC4/CyLib.c **** *
2883:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2884:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2885:Generated_Source\PSoC4/CyLib.c **** {
 2411              		.loc 1 2885 0
 2412              		.cfi_startproc
 2413              		@ args = 0, pretend = 0, frame = 0
 2414              		@ frame_needed = 1, uses_anonymous_args = 0
 2415 0000 80B5     		push	{r7, lr}
 2416              		.cfi_def_cfa_offset 8
 2417              		.cfi_offset 7, -8
 2418              		.cfi_offset 14, -4
 2419 0002 00AF     		add	r7, sp, #0
 2420              		.cfi_def_cfa_register 7
2886:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2421              		.loc 1 2886 0
 2422 0004 044B     		ldr	r3, .L151
 2423 0006 044A     		ldr	r2, .L151
 2424 0008 1268     		ldr	r2, [r2]
 2425 000a 0221     		movs	r1, #2
 2426 000c 8A43     		bics	r2, r1
 2427 000e 1A60     		str	r2, [r3]
2887:Generated_Source\PSoC4/CyLib.c **** }
 2428              		.loc 1 2887 0
 2429 0010 C046     		nop
 2430 0012 BD46     		mov	sp, r7
 2431              		@ sp needed
 2432 0014 80BD     		pop	{r7, pc}
 2433              	.L152:
 2434 0016 C046     		.align	2
 2435              	.L151:
 2436 0018 10E000E0 		.word	-536813552
 2437              		.cfi_endproc
 2438              	.LFE39:
 2439              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2440              		.section	.text.CySysTickSetReload,"ax",%progbits
 2441              		.align	2
 2442              		.global	CySysTickSetReload
 2443              		.code	16
 2444              		.thumb_func
 2445              		.type	CySysTickSetReload, %function
 2446              	CySysTickSetReload:
 2447              	.LFB40:
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2891:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2892:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 95


2893:Generated_Source\PSoC4/CyLib.c **** *
2894:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2895:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2896:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2901:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2902:Generated_Source\PSoC4/CyLib.c **** {
 2448              		.loc 1 2902 0
 2449              		.cfi_startproc
 2450              		@ args = 0, pretend = 0, frame = 8
 2451              		@ frame_needed = 1, uses_anonymous_args = 0
 2452 0000 80B5     		push	{r7, lr}
 2453              		.cfi_def_cfa_offset 8
 2454              		.cfi_offset 7, -8
 2455              		.cfi_offset 14, -4
 2456 0002 82B0     		sub	sp, sp, #8
 2457              		.cfi_def_cfa_offset 16
 2458 0004 00AF     		add	r7, sp, #0
 2459              		.cfi_def_cfa_register 7
 2460 0006 7860     		str	r0, [r7, #4]
2903:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2461              		.loc 1 2903 0
 2462 0008 044B     		ldr	r3, .L154
 2463 000a 7A68     		ldr	r2, [r7, #4]
 2464 000c 1202     		lsls	r2, r2, #8
 2465 000e 120A     		lsrs	r2, r2, #8
 2466 0010 1A60     		str	r2, [r3]
2904:Generated_Source\PSoC4/CyLib.c **** }
 2467              		.loc 1 2904 0
 2468 0012 C046     		nop
 2469 0014 BD46     		mov	sp, r7
 2470 0016 02B0     		add	sp, sp, #8
 2471              		@ sp needed
 2472 0018 80BD     		pop	{r7, pc}
 2473              	.L155:
 2474 001a C046     		.align	2
 2475              	.L154:
 2476 001c 14E000E0 		.word	-536813548
 2477              		.cfi_endproc
 2478              	.LFE40:
 2479              		.size	CySysTickSetReload, .-CySysTickSetReload
 2480              		.section	.text.CySysTickGetReload,"ax",%progbits
 2481              		.align	2
 2482              		.global	CySysTickGetReload
 2483              		.code	16
 2484              		.thumb_func
 2485              		.type	CySysTickGetReload, %function
 2486              	CySysTickGetReload:
 2487              	.LFB41:
2905:Generated_Source\PSoC4/CyLib.c **** 
2906:Generated_Source\PSoC4/CyLib.c **** 
2907:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2908:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2909:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 96


2910:Generated_Source\PSoC4/CyLib.c **** *
2911:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** * \return
2914:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2915:Generated_Source\PSoC4/CyLib.c **** *
2916:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2917:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2918:Generated_Source\PSoC4/CyLib.c **** {
 2488              		.loc 1 2918 0
 2489              		.cfi_startproc
 2490              		@ args = 0, pretend = 0, frame = 0
 2491              		@ frame_needed = 1, uses_anonymous_args = 0
 2492 0000 80B5     		push	{r7, lr}
 2493              		.cfi_def_cfa_offset 8
 2494              		.cfi_offset 7, -8
 2495              		.cfi_offset 14, -4
 2496 0002 00AF     		add	r7, sp, #0
 2497              		.cfi_def_cfa_register 7
2919:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2498              		.loc 1 2919 0
 2499 0004 034B     		ldr	r3, .L158
 2500 0006 1B68     		ldr	r3, [r3]
 2501 0008 1B02     		lsls	r3, r3, #8
 2502 000a 1B0A     		lsrs	r3, r3, #8
2920:Generated_Source\PSoC4/CyLib.c **** }
 2503              		.loc 1 2920 0
 2504 000c 1800     		movs	r0, r3
 2505 000e BD46     		mov	sp, r7
 2506              		@ sp needed
 2507 0010 80BD     		pop	{r7, pc}
 2508              	.L159:
 2509 0012 C046     		.align	2
 2510              	.L158:
 2511 0014 14E000E0 		.word	-536813548
 2512              		.cfi_endproc
 2513              	.LFE41:
 2514              		.size	CySysTickGetReload, .-CySysTickGetReload
 2515              		.section	.text.CySysTickGetValue,"ax",%progbits
 2516              		.align	2
 2517              		.global	CySysTickGetValue
 2518              		.code	16
 2519              		.thumb_func
 2520              		.type	CySysTickGetValue, %function
 2521              	CySysTickGetValue:
 2522              	.LFB42:
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** * \return
2930:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2931:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 97


2932:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2933:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2934:Generated_Source\PSoC4/CyLib.c **** {
 2523              		.loc 1 2934 0
 2524              		.cfi_startproc
 2525              		@ args = 0, pretend = 0, frame = 0
 2526              		@ frame_needed = 1, uses_anonymous_args = 0
 2527 0000 80B5     		push	{r7, lr}
 2528              		.cfi_def_cfa_offset 8
 2529              		.cfi_offset 7, -8
 2530              		.cfi_offset 14, -4
 2531 0002 00AF     		add	r7, sp, #0
 2532              		.cfi_def_cfa_register 7
2935:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2533              		.loc 1 2935 0
 2534 0004 034B     		ldr	r3, .L162
 2535 0006 1B68     		ldr	r3, [r3]
 2536 0008 1B02     		lsls	r3, r3, #8
 2537 000a 1B0A     		lsrs	r3, r3, #8
2936:Generated_Source\PSoC4/CyLib.c **** }
 2538              		.loc 1 2936 0
 2539 000c 1800     		movs	r0, r3
 2540 000e BD46     		mov	sp, r7
 2541              		@ sp needed
 2542 0010 80BD     		pop	{r7, pc}
 2543              	.L163:
 2544 0012 C046     		.align	2
 2545              	.L162:
 2546 0014 18E000E0 		.word	-536813544
 2547              		.cfi_endproc
 2548              	.LFE42:
 2549              		.size	CySysTickGetValue, .-CySysTickGetValue
 2550              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2551              		.align	2
 2552              		.global	CySysTickSetClockSource
 2553              		.code	16
 2554              		.thumb_func
 2555              		.type	CySysTickSetClockSource, %function
 2556              	CySysTickSetClockSource:
 2557              	.LFB43:
2937:Generated_Source\PSoC4/CyLib.c **** 
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2943:Generated_Source\PSoC4/CyLib.c ****     *
2944:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2945:Generated_Source\PSoC4/CyLib.c ****     *
2946:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2947:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2948:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2949:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2950:Generated_Source\PSoC4/CyLib.c ****     *
2951:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2952:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2953:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 98


2954:Generated_Source\PSoC4/CyLib.c ****     *
2955:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2956:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2959:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2961:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2963:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2965:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2966:Generated_Source\PSoC4/CyLib.c ****     {
 2558              		.loc 1 2966 0
 2559              		.cfi_startproc
 2560              		@ args = 0, pretend = 0, frame = 8
 2561              		@ frame_needed = 1, uses_anonymous_args = 0
 2562 0000 80B5     		push	{r7, lr}
 2563              		.cfi_def_cfa_offset 8
 2564              		.cfi_offset 7, -8
 2565              		.cfi_offset 14, -4
 2566 0002 82B0     		sub	sp, sp, #8
 2567              		.cfi_def_cfa_offset 16
 2568 0004 00AF     		add	r7, sp, #0
 2569              		.cfi_def_cfa_register 7
 2570 0006 7860     		str	r0, [r7, #4]
2967:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2571              		.loc 1 2967 0
 2572 0008 7B68     		ldr	r3, [r7, #4]
 2573 000a 012B     		cmp	r3, #1
 2574 000c 06D1     		bne	.L165
2968:Generated_Source\PSoC4/CyLib.c ****         {
2969:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2575              		.loc 1 2969 0
 2576 000e 084B     		ldr	r3, .L168
 2577 0010 074A     		ldr	r2, .L168
 2578 0012 1268     		ldr	r2, [r2]
 2579 0014 0421     		movs	r1, #4
 2580 0016 0A43     		orrs	r2, r1
 2581 0018 1A60     		str	r2, [r3]
2970:Generated_Source\PSoC4/CyLib.c ****         }
2971:Generated_Source\PSoC4/CyLib.c ****         else
2972:Generated_Source\PSoC4/CyLib.c ****         {
2973:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2974:Generated_Source\PSoC4/CyLib.c ****         }
2975:Generated_Source\PSoC4/CyLib.c ****     }
 2582              		.loc 1 2975 0
 2583 001a 05E0     		b	.L167
 2584              	.L165:
2973:Generated_Source\PSoC4/CyLib.c ****         }
 2585              		.loc 1 2973 0
 2586 001c 044B     		ldr	r3, .L168
 2587 001e 044A     		ldr	r2, .L168
 2588 0020 1268     		ldr	r2, [r2]
 2589 0022 0421     		movs	r1, #4
 2590 0024 8A43     		bics	r2, r1
 2591 0026 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 99


 2592              	.L167:
 2593              		.loc 1 2975 0
 2594 0028 C046     		nop
 2595 002a BD46     		mov	sp, r7
 2596 002c 02B0     		add	sp, sp, #8
 2597              		@ sp needed
 2598 002e 80BD     		pop	{r7, pc}
 2599              	.L169:
 2600              		.align	2
 2601              	.L168:
 2602 0030 10E000E0 		.word	-536813552
 2603              		.cfi_endproc
 2604              	.LFE43:
 2605              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2606              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2607              		.align	2
 2608              		.global	CySysTickGetClockSource
 2609              		.code	16
 2610              		.thumb_func
 2611              		.type	CySysTickGetClockSource, %function
 2612              	CySysTickGetClockSource:
 2613              	.LFB44:
2976:Generated_Source\PSoC4/CyLib.c **** 
2977:Generated_Source\PSoC4/CyLib.c ****     
2978:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2979:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2980:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2981:Generated_Source\PSoC4/CyLib.c ****     *
2982:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2983:Generated_Source\PSoC4/CyLib.c ****     *
2984:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2985:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2986:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2987:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2988:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2989:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2991:Generated_Source\PSoC4/CyLib.c ****     {
 2614              		.loc 1 2991 0
 2615              		.cfi_startproc
 2616              		@ args = 0, pretend = 0, frame = 0
 2617              		@ frame_needed = 1, uses_anonymous_args = 0
 2618 0000 80B5     		push	{r7, lr}
 2619              		.cfi_def_cfa_offset 8
 2620              		.cfi_offset 7, -8
 2621              		.cfi_offset 14, -4
 2622 0002 00AF     		add	r7, sp, #0
 2623              		.cfi_def_cfa_register 7
2992:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2624              		.loc 1 2992 0
 2625 0004 034B     		ldr	r3, .L172
 2626 0006 1B68     		ldr	r3, [r3]
 2627 0008 9B08     		lsrs	r3, r3, #2
 2628 000a 0122     		movs	r2, #1
 2629 000c 1340     		ands	r3, r2
2993:Generated_Source\PSoC4/CyLib.c ****     }
 2630              		.loc 1 2993 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 100


 2631 000e 1800     		movs	r0, r3
 2632 0010 BD46     		mov	sp, r7
 2633              		@ sp needed
 2634 0012 80BD     		pop	{r7, pc}
 2635              	.L173:
 2636              		.align	2
 2637              	.L172:
 2638 0014 10E000E0 		.word	-536813552
 2639              		.cfi_endproc
 2640              	.LFE44:
 2641              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2642              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2643              		.align	2
 2644              		.global	CySysTickGetCountFlag
 2645              		.code	16
 2646              		.thumb_func
 2647              		.type	CySysTickGetCountFlag, %function
 2648              	CySysTickGetCountFlag:
 2649              	.LFB45:
2994:Generated_Source\PSoC4/CyLib.c ****     
2995:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2996:Generated_Source\PSoC4/CyLib.c **** 
2997:Generated_Source\PSoC4/CyLib.c **** 
2998:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2999:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3000:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3003:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3004:Generated_Source\PSoC4/CyLib.c **** *
3005:Generated_Source\PSoC4/CyLib.c **** * \return
3006:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3007:Generated_Source\PSoC4/CyLib.c **** *
3008:Generated_Source\PSoC4/CyLib.c **** *
3009:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3010:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3013:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3014:Generated_Source\PSoC4/CyLib.c **** {
 2650              		.loc 1 3014 0
 2651              		.cfi_startproc
 2652              		@ args = 0, pretend = 0, frame = 0
 2653              		@ frame_needed = 1, uses_anonymous_args = 0
 2654 0000 80B5     		push	{r7, lr}
 2655              		.cfi_def_cfa_offset 8
 2656              		.cfi_offset 7, -8
 2657              		.cfi_offset 14, -4
 2658 0002 00AF     		add	r7, sp, #0
 2659              		.cfi_def_cfa_register 7
3015:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2660              		.loc 1 3015 0
 2661 0004 034B     		ldr	r3, .L176
 2662 0006 1B68     		ldr	r3, [r3]
 2663 0008 1B0C     		lsrs	r3, r3, #16
 2664 000a 0122     		movs	r2, #1
 2665 000c 1340     		ands	r3, r2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 101


3016:Generated_Source\PSoC4/CyLib.c **** }
 2666              		.loc 1 3016 0
 2667 000e 1800     		movs	r0, r3
 2668 0010 BD46     		mov	sp, r7
 2669              		@ sp needed
 2670 0012 80BD     		pop	{r7, pc}
 2671              	.L177:
 2672              		.align	2
 2673              	.L176:
 2674 0014 10E000E0 		.word	-536813552
 2675              		.cfi_endproc
 2676              	.LFE45:
 2677              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2678              		.section	.text.CySysTickClear,"ax",%progbits
 2679              		.align	2
 2680              		.global	CySysTickClear
 2681              		.code	16
 2682              		.thumb_func
 2683              		.type	CySysTickClear, %function
 2684              	CySysTickClear:
 2685              	.LFB46:
3017:Generated_Source\PSoC4/CyLib.c **** 
3018:Generated_Source\PSoC4/CyLib.c **** 
3019:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3020:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3021:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3024:Generated_Source\PSoC4/CyLib.c **** *
3025:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3027:Generated_Source\PSoC4/CyLib.c **** {
 2686              		.loc 1 3027 0
 2687              		.cfi_startproc
 2688              		@ args = 0, pretend = 0, frame = 0
 2689              		@ frame_needed = 1, uses_anonymous_args = 0
 2690 0000 80B5     		push	{r7, lr}
 2691              		.cfi_def_cfa_offset 8
 2692              		.cfi_offset 7, -8
 2693              		.cfi_offset 14, -4
 2694 0002 00AF     		add	r7, sp, #0
 2695              		.cfi_def_cfa_register 7
3028:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2696              		.loc 1 3028 0
 2697 0004 024B     		ldr	r3, .L179
 2698 0006 0022     		movs	r2, #0
 2699 0008 1A60     		str	r2, [r3]
3029:Generated_Source\PSoC4/CyLib.c **** }
 2700              		.loc 1 3029 0
 2701 000a C046     		nop
 2702 000c BD46     		mov	sp, r7
 2703              		@ sp needed
 2704 000e 80BD     		pop	{r7, pc}
 2705              	.L180:
 2706              		.align	2
 2707              	.L179:
 2708 0010 18E000E0 		.word	-536813544
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 102


 2709              		.cfi_endproc
 2710              	.LFE46:
 2711              		.size	CySysTickClear, .-CySysTickClear
 2712              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2713              		.align	2
 2714              		.global	CySysTickSetCallback
 2715              		.code	16
 2716              		.thumb_func
 2717              		.type	CySysTickSetCallback, %function
 2718              	CySysTickSetCallback:
 2719              	.LFB47:
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c **** 
3032:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3033:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3034:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3035:Generated_Source\PSoC4/CyLib.c **** *
3036:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3037:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3038:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3039:Generated_Source\PSoC4/CyLib.c **** *
3040:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3041:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3042:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3043:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3044:Generated_Source\PSoC4/CyLib.c **** *  functions.
3045:Generated_Source\PSoC4/CyLib.c **** *
3046:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3047:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3050:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3051:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3052:Generated_Source\PSoC4/CyLib.c **** *
3053:Generated_Source\PSoC4/CyLib.c **** * \return
3054:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3055:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3056:Generated_Source\PSoC4/CyLib.c **** *
3057:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3058:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3059:Generated_Source\PSoC4/CyLib.c **** *
3060:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3061:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3062:Generated_Source\PSoC4/CyLib.c **** {
 2720              		.loc 1 3062 0
 2721              		.cfi_startproc
 2722              		@ args = 0, pretend = 0, frame = 16
 2723              		@ frame_needed = 1, uses_anonymous_args = 0
 2724 0000 80B5     		push	{r7, lr}
 2725              		.cfi_def_cfa_offset 8
 2726              		.cfi_offset 7, -8
 2727              		.cfi_offset 14, -4
 2728 0002 84B0     		sub	sp, sp, #16
 2729              		.cfi_def_cfa_offset 24
 2730 0004 00AF     		add	r7, sp, #0
 2731              		.cfi_def_cfa_register 7
 2732 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 103


 2733 0008 3960     		str	r1, [r7]
3063:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2734              		.loc 1 3065 0
 2735 000a 074B     		ldr	r3, .L183
 2736 000c 7A68     		ldr	r2, [r7, #4]
 2737 000e 9200     		lsls	r2, r2, #2
 2738 0010 D358     		ldr	r3, [r2, r3]
 2739 0012 FB60     		str	r3, [r7, #12]
3066:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2740              		.loc 1 3066 0
 2741 0014 044B     		ldr	r3, .L183
 2742 0016 7A68     		ldr	r2, [r7, #4]
 2743 0018 9200     		lsls	r2, r2, #2
 2744 001a 3968     		ldr	r1, [r7]
 2745 001c D150     		str	r1, [r2, r3]
3067:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2746              		.loc 1 3067 0
 2747 001e FB68     		ldr	r3, [r7, #12]
3068:Generated_Source\PSoC4/CyLib.c **** }
 2748              		.loc 1 3068 0
 2749 0020 1800     		movs	r0, r3
 2750 0022 BD46     		mov	sp, r7
 2751 0024 04B0     		add	sp, sp, #16
 2752              		@ sp needed
 2753 0026 80BD     		pop	{r7, pc}
 2754              	.L184:
 2755              		.align	2
 2756              	.L183:
 2757 0028 00000000 		.word	CySysTickCallbacks
 2758              		.cfi_endproc
 2759              	.LFE47:
 2760              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2761              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2762              		.align	2
 2763              		.global	CySysTickGetCallback
 2764              		.code	16
 2765              		.thumb_func
 2766              		.type	CySysTickGetCallback, %function
 2767              	CySysTickGetCallback:
 2768              	.LFB48:
3069:Generated_Source\PSoC4/CyLib.c **** 
3070:Generated_Source\PSoC4/CyLib.c **** 
3071:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3072:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3073:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3074:Generated_Source\PSoC4/CyLib.c **** *
3075:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3076:Generated_Source\PSoC4/CyLib.c **** *
3077:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3078:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** * \return
3081:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3082:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3083:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 104


3084:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3085:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3086:Generated_Source\PSoC4/CyLib.c **** {
 2769              		.loc 1 3086 0
 2770              		.cfi_startproc
 2771              		@ args = 0, pretend = 0, frame = 8
 2772              		@ frame_needed = 1, uses_anonymous_args = 0
 2773 0000 80B5     		push	{r7, lr}
 2774              		.cfi_def_cfa_offset 8
 2775              		.cfi_offset 7, -8
 2776              		.cfi_offset 14, -4
 2777 0002 82B0     		sub	sp, sp, #8
 2778              		.cfi_def_cfa_offset 16
 2779 0004 00AF     		add	r7, sp, #0
 2780              		.cfi_def_cfa_register 7
 2781 0006 7860     		str	r0, [r7, #4]
3087:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2782              		.loc 1 3087 0
 2783 0008 034B     		ldr	r3, .L187
 2784 000a 7A68     		ldr	r2, [r7, #4]
 2785 000c 9200     		lsls	r2, r2, #2
 2786 000e D358     		ldr	r3, [r2, r3]
3088:Generated_Source\PSoC4/CyLib.c **** }
 2787              		.loc 1 3088 0
 2788 0010 1800     		movs	r0, r3
 2789 0012 BD46     		mov	sp, r7
 2790 0014 02B0     		add	sp, sp, #8
 2791              		@ sp needed
 2792 0016 80BD     		pop	{r7, pc}
 2793              	.L188:
 2794              		.align	2
 2795              	.L187:
 2796 0018 00000000 		.word	CySysTickCallbacks
 2797              		.cfi_endproc
 2798              	.LFE48:
 2799              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2800              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2801              		.align	2
 2802              		.code	16
 2803              		.thumb_func
 2804              		.type	CySysTickServiceCallbacks, %function
 2805              	CySysTickServiceCallbacks:
 2806              	.LFB49:
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3093:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c **** *
3095:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3096:Generated_Source\PSoC4/CyLib.c **** *
3097:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3098:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3099:Generated_Source\PSoC4/CyLib.c **** {
 2807              		.loc 1 3099 0
 2808              		.cfi_startproc
 2809              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 105


 2810              		@ frame_needed = 1, uses_anonymous_args = 0
 2811 0000 80B5     		push	{r7, lr}
 2812              		.cfi_def_cfa_offset 8
 2813              		.cfi_offset 7, -8
 2814              		.cfi_offset 14, -4
 2815 0002 82B0     		sub	sp, sp, #8
 2816              		.cfi_def_cfa_offset 16
 2817 0004 00AF     		add	r7, sp, #0
 2818              		.cfi_def_cfa_register 7
3100:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3103:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2819              		.loc 1 3103 0
 2820 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2821 000a 0300     		movs	r3, r0
 2822 000c 012B     		cmp	r3, #1
 2823 000e 13D1     		bne	.L194
3104:Generated_Source\PSoC4/CyLib.c ****     {
3105:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2824              		.loc 1 3105 0
 2825 0010 0023     		movs	r3, #0
 2826 0012 7B60     		str	r3, [r7, #4]
 2827 0014 0DE0     		b	.L191
 2828              	.L193:
3106:Generated_Source\PSoC4/CyLib.c ****         {
3107:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2829              		.loc 1 3107 0
 2830 0016 0A4B     		ldr	r3, .L195
 2831 0018 7A68     		ldr	r2, [r7, #4]
 2832 001a 9200     		lsls	r2, r2, #2
 2833 001c D358     		ldr	r3, [r2, r3]
 2834 001e 002B     		cmp	r3, #0
 2835 0020 04D0     		beq	.L192
3108:Generated_Source\PSoC4/CyLib.c ****             {
3109:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2836              		.loc 1 3109 0
 2837 0022 074B     		ldr	r3, .L195
 2838 0024 7A68     		ldr	r2, [r7, #4]
 2839 0026 9200     		lsls	r2, r2, #2
 2840 0028 D358     		ldr	r3, [r2, r3]
 2841 002a 9847     		blx	r3
 2842              	.L192:
3105:Generated_Source\PSoC4/CyLib.c ****         {
 2843              		.loc 1 3105 0 discriminator 2
 2844 002c 7B68     		ldr	r3, [r7, #4]
 2845 002e 0133     		adds	r3, r3, #1
 2846 0030 7B60     		str	r3, [r7, #4]
 2847              	.L191:
3105:Generated_Source\PSoC4/CyLib.c ****         {
 2848              		.loc 1 3105 0 is_stmt 0 discriminator 1
 2849 0032 7B68     		ldr	r3, [r7, #4]
 2850 0034 042B     		cmp	r3, #4
 2851 0036 EED9     		bls	.L193
 2852              	.L194:
3110:Generated_Source\PSoC4/CyLib.c ****             }
3111:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 106


3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** }
 2853              		.loc 1 3113 0 is_stmt 1
 2854 0038 C046     		nop
 2855 003a BD46     		mov	sp, r7
 2856 003c 02B0     		add	sp, sp, #8
 2857              		@ sp needed
 2858 003e 80BD     		pop	{r7, pc}
 2859              	.L196:
 2860              		.align	2
 2861              	.L195:
 2862 0040 00000000 		.word	CySysTickCallbacks
 2863              		.cfi_endproc
 2864              	.LFE49:
 2865              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2866              		.section	.text.CyGetUniqueId,"ax",%progbits
 2867              		.align	2
 2868              		.global	CyGetUniqueId
 2869              		.code	16
 2870              		.thumb_func
 2871              		.type	CyGetUniqueId, %function
 2872              	CyGetUniqueId:
 2873              	.LFB50:
3114:Generated_Source\PSoC4/CyLib.c **** 
3115:Generated_Source\PSoC4/CyLib.c **** 
3116:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3117:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3118:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3119:Generated_Source\PSoC4/CyLib.c **** *
3120:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3121:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3122:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3123:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3126:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3127:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3128:Generated_Source\PSoC4/CyLib.c **** *
3129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3130:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3131:Generated_Source\PSoC4/CyLib.c **** {
 2874              		.loc 1 3131 0
 2875              		.cfi_startproc
 2876              		@ args = 0, pretend = 0, frame = 8
 2877              		@ frame_needed = 1, uses_anonymous_args = 0
 2878 0000 80B5     		push	{r7, lr}
 2879              		.cfi_def_cfa_offset 8
 2880              		.cfi_offset 7, -8
 2881              		.cfi_offset 14, -4
 2882 0002 82B0     		sub	sp, sp, #8
 2883              		.cfi_def_cfa_offset 16
 2884 0004 00AF     		add	r7, sp, #0
 2885              		.cfi_def_cfa_register 7
 2886 0006 7860     		str	r0, [r7, #4]
3132:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2887              		.loc 1 3133 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 107


 2888 0008 254B     		ldr	r3, .L198
 2889 000a 1B78     		ldrb	r3, [r3]
 2890 000c DBB2     		uxtb	r3, r3
 2891 000e 1A00     		movs	r2, r3
 2892 0010 7B68     		ldr	r3, [r7, #4]
 2893 0012 1A60     		str	r2, [r3]
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2894              		.loc 1 3134 0
 2895 0014 234B     		ldr	r3, .L198+4
 2896 0016 1B78     		ldrb	r3, [r3]
 2897 0018 DBB2     		uxtb	r3, r3
 2898 001a 1A02     		lsls	r2, r3, #8
 2899 001c 7B68     		ldr	r3, [r7, #4]
 2900 001e 1B68     		ldr	r3, [r3]
 2901 0020 1A43     		orrs	r2, r3
 2902 0022 7B68     		ldr	r3, [r7, #4]
 2903 0024 1A60     		str	r2, [r3]
3135:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2904              		.loc 1 3135 0
 2905 0026 204B     		ldr	r3, .L198+8
 2906 0028 1B78     		ldrb	r3, [r3]
 2907 002a DBB2     		uxtb	r3, r3
 2908 002c 1A04     		lsls	r2, r3, #16
 2909 002e 7B68     		ldr	r3, [r7, #4]
 2910 0030 1B68     		ldr	r3, [r3]
 2911 0032 1A43     		orrs	r2, r3
 2912 0034 7B68     		ldr	r3, [r7, #4]
 2913 0036 1A60     		str	r2, [r3]
3136:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2914              		.loc 1 3136 0
 2915 0038 1C4B     		ldr	r3, .L198+12
 2916 003a 1B78     		ldrb	r3, [r3]
 2917 003c DBB2     		uxtb	r3, r3
 2918 003e 1A06     		lsls	r2, r3, #24
 2919 0040 7B68     		ldr	r3, [r7, #4]
 2920 0042 1B68     		ldr	r3, [r3]
 2921 0044 1A43     		orrs	r2, r3
 2922 0046 7B68     		ldr	r3, [r7, #4]
 2923 0048 1A60     		str	r2, [r3]
3137:Generated_Source\PSoC4/CyLib.c **** 
3138:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2924              		.loc 1 3138 0
 2925 004a 7B68     		ldr	r3, [r7, #4]
 2926 004c 0433     		adds	r3, r3, #4
 2927 004e 184A     		ldr	r2, .L198+16
 2928 0050 1278     		ldrb	r2, [r2]
 2929 0052 D2B2     		uxtb	r2, r2
 2930 0054 1A60     		str	r2, [r3]
3139:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2931              		.loc 1 3139 0
 2932 0056 174B     		ldr	r3, .L198+20
 2933 0058 1B78     		ldrb	r3, [r3]
 2934 005a DBB2     		uxtb	r3, r3
 2935 005c 1902     		lsls	r1, r3, #8
 2936 005e 7B68     		ldr	r3, [r7, #4]
 2937 0060 0433     		adds	r3, r3, #4
 2938 0062 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 108


 2939 0064 0432     		adds	r2, r2, #4
 2940 0066 1268     		ldr	r2, [r2]
 2941 0068 0A43     		orrs	r2, r1
 2942 006a 1A60     		str	r2, [r3]
3140:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2943              		.loc 1 3140 0
 2944 006c 124B     		ldr	r3, .L198+24
 2945 006e 1B78     		ldrb	r3, [r3]
 2946 0070 DBB2     		uxtb	r3, r3
 2947 0072 1904     		lsls	r1, r3, #16
 2948 0074 7B68     		ldr	r3, [r7, #4]
 2949 0076 0433     		adds	r3, r3, #4
 2950 0078 7A68     		ldr	r2, [r7, #4]
 2951 007a 0432     		adds	r2, r2, #4
 2952 007c 1268     		ldr	r2, [r2]
 2953 007e 0A43     		orrs	r2, r1
 2954 0080 1A60     		str	r2, [r3]
3141:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2955              		.loc 1 3141 0
 2956 0082 0E4B     		ldr	r3, .L198+28
 2957 0084 1B78     		ldrb	r3, [r3]
 2958 0086 DBB2     		uxtb	r3, r3
 2959 0088 1906     		lsls	r1, r3, #24
 2960 008a 7B68     		ldr	r3, [r7, #4]
 2961 008c 0433     		adds	r3, r3, #4
 2962 008e 7A68     		ldr	r2, [r7, #4]
 2963 0090 0432     		adds	r2, r2, #4
 2964 0092 1268     		ldr	r2, [r2]
 2965 0094 0A43     		orrs	r2, r1
 2966 0096 1A60     		str	r2, [r3]
3142:Generated_Source\PSoC4/CyLib.c **** #else
3143:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3144:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3145:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3146:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3147:Generated_Source\PSoC4/CyLib.c **** 
3148:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3149:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3150:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3151:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3152:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3153:Generated_Source\PSoC4/CyLib.c **** }
 2967              		.loc 1 3153 0
 2968 0098 C046     		nop
 2969 009a BD46     		mov	sp, r7
 2970 009c 02B0     		add	sp, sp, #8
 2971              		@ sp needed
 2972 009e 80BD     		pop	{r7, pc}
 2973              	.L199:
 2974              		.align	2
 2975              	.L198:
 2976 00a0 78F1FF0F 		.word	268431736
 2977 00a4 79F1FF0F 		.word	268431737
 2978 00a8 7AF1FF0F 		.word	268431738
 2979 00ac 7BF1FF0F 		.word	268431739
 2980 00b0 7CF1FF0F 		.word	268431740
 2981 00b4 7DF1FF0F 		.word	268431741
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 109


 2982 00b8 7EF1FF0F 		.word	268431742
 2983 00bc 7FF1FF0F 		.word	268431743
 2984              		.cfi_endproc
 2985              	.LFE50:
 2986              		.size	CyGetUniqueId, .-CyGetUniqueId
 2987              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2988              		.align	2
 2989              		.global	CySysSetRamAccessArbPriority
 2990              		.code	16
 2991              		.thumb_func
 2992              		.type	CySysSetRamAccessArbPriority, %function
 2993              	CySysSetRamAccessArbPriority:
 2994              	.LFB51:
3154:Generated_Source\PSoC4/CyLib.c **** 
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3157:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3159:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c ****     *
3161:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3162:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3163:Generated_Source\PSoC4/CyLib.c ****     *  details.
3164:Generated_Source\PSoC4/CyLib.c ****     *
3165:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3166:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3167:Generated_Source\PSoC4/CyLib.c ****     *
3168:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3169:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3170:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3171:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3172:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3173:Generated_Source\PSoC4/CyLib.c ****     *
3174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3175:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3176:Generated_Source\PSoC4/CyLib.c ****     {
 2995              		.loc 1 3176 0
 2996              		.cfi_startproc
 2997              		@ args = 0, pretend = 0, frame = 16
 2998              		@ frame_needed = 1, uses_anonymous_args = 0
 2999 0000 80B5     		push	{r7, lr}
 3000              		.cfi_def_cfa_offset 8
 3001              		.cfi_offset 7, -8
 3002              		.cfi_offset 14, -4
 3003 0002 84B0     		sub	sp, sp, #16
 3004              		.cfi_def_cfa_offset 24
 3005 0004 00AF     		add	r7, sp, #0
 3006              		.cfi_def_cfa_register 7
 3007 0006 7860     		str	r0, [r7, #4]
3177:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3178:Generated_Source\PSoC4/CyLib.c **** 
3179:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 3008              		.loc 1 3179 0
 3009 0008 094B     		ldr	r3, .L201
 3010 000a 1B68     		ldr	r3, [r3]
 3011 000c 094A     		ldr	r2, .L201+4
 3012 000e 1340     		ands	r3, r2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 110


 3013 0010 FB60     		str	r3, [r7, #12]
3180:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 3014              		.loc 1 3180 0
 3015 0012 7B68     		ldr	r3, [r7, #4]
 3016 0014 5A04     		lsls	r2, r3, #17
 3017 0016 C023     		movs	r3, #192
 3018 0018 DB02     		lsls	r3, r3, #11
 3019 001a 1340     		ands	r3, r2
 3020 001c FA68     		ldr	r2, [r7, #12]
 3021 001e 1343     		orrs	r3, r2
 3022 0020 FB60     		str	r3, [r7, #12]
3181:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 3023              		.loc 1 3181 0
 3024 0022 034B     		ldr	r3, .L201
 3025 0024 FA68     		ldr	r2, [r7, #12]
 3026 0026 1A60     		str	r2, [r3]
3182:Generated_Source\PSoC4/CyLib.c ****     }
 3027              		.loc 1 3182 0
 3028 0028 C046     		nop
 3029 002a BD46     		mov	sp, r7
 3030 002c 04B0     		add	sp, sp, #16
 3031              		@ sp needed
 3032 002e 80BD     		pop	{r7, pc}
 3033              	.L202:
 3034              		.align	2
 3035              	.L201:
 3036 0030 38001040 		.word	1074790456
 3037 0034 FFFFF9FF 		.word	-393217
 3038              		.cfi_endproc
 3039              	.LFE51:
 3040              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 3041              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 3042              		.align	2
 3043              		.global	CySysSetFlashAccessArbPriority
 3044              		.code	16
 3045              		.thumb_func
 3046              		.type	CySysSetFlashAccessArbPriority, %function
 3047              	CySysSetFlashAccessArbPriority:
 3048              	.LFB52:
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** 
3185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3188:Generated_Source\PSoC4/CyLib.c ****     *
3189:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3190:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3191:Generated_Source\PSoC4/CyLib.c ****     *  details.
3192:Generated_Source\PSoC4/CyLib.c ****     *
3193:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3194:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3195:Generated_Source\PSoC4/CyLib.c ****     *
3196:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3197:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3198:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3199:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3200:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 111


3201:Generated_Source\PSoC4/CyLib.c ****     *
3202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3203:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3204:Generated_Source\PSoC4/CyLib.c ****     {
 3049              		.loc 1 3204 0
 3050              		.cfi_startproc
 3051              		@ args = 0, pretend = 0, frame = 16
 3052              		@ frame_needed = 1, uses_anonymous_args = 0
 3053 0000 80B5     		push	{r7, lr}
 3054              		.cfi_def_cfa_offset 8
 3055              		.cfi_offset 7, -8
 3056              		.cfi_offset 14, -4
 3057 0002 84B0     		sub	sp, sp, #16
 3058              		.cfi_def_cfa_offset 24
 3059 0004 00AF     		add	r7, sp, #0
 3060              		.cfi_def_cfa_register 7
 3061 0006 7860     		str	r0, [r7, #4]
3205:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3206:Generated_Source\PSoC4/CyLib.c **** 
3207:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 3062              		.loc 1 3207 0
 3063 0008 094B     		ldr	r3, .L204
 3064 000a 1B68     		ldr	r3, [r3]
 3065 000c 094A     		ldr	r2, .L204+4
 3066 000e 1340     		ands	r3, r2
 3067 0010 FB60     		str	r3, [r7, #12]
3208:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 3068              		.loc 1 3208 0
 3069 0012 7B68     		ldr	r3, [r7, #4]
 3070 0014 5A04     		lsls	r2, r3, #17
 3071 0016 C023     		movs	r3, #192
 3072 0018 DB02     		lsls	r3, r3, #11
 3073 001a 1340     		ands	r3, r2
 3074 001c FA68     		ldr	r2, [r7, #12]
 3075 001e 1343     		orrs	r3, r2
 3076 0020 FB60     		str	r3, [r7, #12]
3209:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 3077              		.loc 1 3209 0
 3078 0022 034B     		ldr	r3, .L204
 3079 0024 FA68     		ldr	r2, [r7, #12]
 3080 0026 1A60     		str	r2, [r3]
3210:Generated_Source\PSoC4/CyLib.c ****     }
 3081              		.loc 1 3210 0
 3082 0028 C046     		nop
 3083 002a BD46     		mov	sp, r7
 3084 002c 04B0     		add	sp, sp, #16
 3085              		@ sp needed
 3086 002e 80BD     		pop	{r7, pc}
 3087              	.L205:
 3088              		.align	2
 3089              	.L204:
 3090 0030 30001040 		.word	1074790448
 3091 0034 FFFFF9FF 		.word	-393217
 3092              		.cfi_endproc
 3093              	.LFE52:
 3094              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 3095              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 112


 3096              		.align	2
 3097              		.global	CySysSetDmacAccessArbPriority
 3098              		.code	16
 3099              		.thumb_func
 3100              		.type	CySysSetDmacAccessArbPriority, %function
 3101              	CySysSetDmacAccessArbPriority:
 3102              	.LFB53:
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c **** 
3213:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3214:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3215:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3216:Generated_Source\PSoC4/CyLib.c ****     *
3217:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3218:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3219:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3220:Generated_Source\PSoC4/CyLib.c ****     *
3221:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3222:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3223:Generated_Source\PSoC4/CyLib.c ****     *
3224:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3225:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3226:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3227:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3228:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3229:Generated_Source\PSoC4/CyLib.c ****     *
3230:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3232:Generated_Source\PSoC4/CyLib.c ****     {
 3103              		.loc 1 3232 0
 3104              		.cfi_startproc
 3105              		@ args = 0, pretend = 0, frame = 16
 3106              		@ frame_needed = 1, uses_anonymous_args = 0
 3107 0000 80B5     		push	{r7, lr}
 3108              		.cfi_def_cfa_offset 8
 3109              		.cfi_offset 7, -8
 3110              		.cfi_offset 14, -4
 3111 0002 84B0     		sub	sp, sp, #16
 3112              		.cfi_def_cfa_offset 24
 3113 0004 00AF     		add	r7, sp, #0
 3114              		.cfi_def_cfa_register 7
 3115 0006 7860     		str	r0, [r7, #4]
3233:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3234:Generated_Source\PSoC4/CyLib.c **** 
3235:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 3116              		.loc 1 3235 0
 3117 0008 094B     		ldr	r3, .L207
 3118 000a 1B68     		ldr	r3, [r3]
 3119 000c 094A     		ldr	r2, .L207+4
 3120 000e 1340     		ands	r3, r2
 3121 0010 FB60     		str	r3, [r7, #12]
3236:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 3122              		.loc 1 3236 0
 3123 0012 7B68     		ldr	r3, [r7, #4]
 3124 0014 5A04     		lsls	r2, r3, #17
 3125 0016 C023     		movs	r3, #192
 3126 0018 DB02     		lsls	r3, r3, #11
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 113


 3127 001a 1340     		ands	r3, r2
 3128 001c FA68     		ldr	r2, [r7, #12]
 3129 001e 1343     		orrs	r3, r2
 3130 0020 FB60     		str	r3, [r7, #12]
3237:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 3131              		.loc 1 3237 0
 3132 0022 034B     		ldr	r3, .L207
 3133 0024 FA68     		ldr	r2, [r7, #12]
 3134 0026 1A60     		str	r2, [r3]
3238:Generated_Source\PSoC4/CyLib.c ****     }
 3135              		.loc 1 3238 0
 3136 0028 C046     		nop
 3137 002a BD46     		mov	sp, r7
 3138 002c 04B0     		add	sp, sp, #16
 3139              		@ sp needed
 3140 002e 80BD     		pop	{r7, pc}
 3141              	.L208:
 3142              		.align	2
 3143              	.L207:
 3144 0030 3C001040 		.word	1074790460
 3145 0034 FFFFF9FF 		.word	-393217
 3146              		.cfi_endproc
 3147              	.LFE53:
 3148              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 3149              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 3150              		.align	2
 3151              		.global	CySysSetPeripheralAccessArbPriority
 3152              		.code	16
 3153              		.thumb_func
 3154              		.type	CySysSetPeripheralAccessArbPriority, %function
 3155              	CySysSetPeripheralAccessArbPriority:
 3156              	.LFB54:
3239:Generated_Source\PSoC4/CyLib.c **** 
3240:Generated_Source\PSoC4/CyLib.c **** 
3241:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3242:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3243:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3244:Generated_Source\PSoC4/CyLib.c ****     *
3245:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3246:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3247:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3248:Generated_Source\PSoC4/CyLib.c ****     *
3249:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with 
3250:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3251:Generated_Source\PSoC4/CyLib.c ****     *
3252:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3253:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3254:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3255:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3256:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3257:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3258:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3259:Generated_Source\PSoC4/CyLib.c ****     *
3260:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3261:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3262:Generated_Source\PSoC4/CyLib.c ****     {
 3157              		.loc 1 3262 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 114


 3158              		.cfi_startproc
 3159              		@ args = 0, pretend = 0, frame = 16
 3160              		@ frame_needed = 1, uses_anonymous_args = 0
 3161 0000 80B5     		push	{r7, lr}
 3162              		.cfi_def_cfa_offset 8
 3163              		.cfi_offset 7, -8
 3164              		.cfi_offset 14, -4
 3165 0002 84B0     		sub	sp, sp, #16
 3166              		.cfi_def_cfa_offset 24
 3167 0004 00AF     		add	r7, sp, #0
 3168              		.cfi_def_cfa_register 7
 3169 0006 7860     		str	r0, [r7, #4]
 3170 0008 3960     		str	r1, [r7]
3263:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3264:Generated_Source\PSoC4/CyLib.c **** 
3265:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 3171              		.loc 1 3265 0
 3172 000a 7B68     		ldr	r3, [r7, #4]
 3173 000c 002B     		cmp	r3, #0
 3174 000e 10D1     		bne	.L210
3266:Generated_Source\PSoC4/CyLib.c ****         {
3267:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 3175              		.loc 1 3267 0
 3176 0010 1F4B     		ldr	r3, .L215
 3177 0012 1B68     		ldr	r3, [r3]
 3178 0014 1F4A     		ldr	r2, .L215+4
 3179 0016 1340     		ands	r3, r2
 3180 0018 FB60     		str	r3, [r7, #12]
3268:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3181              		.loc 1 3268 0
 3182 001a 3B68     		ldr	r3, [r7]
 3183 001c 5A04     		lsls	r2, r3, #17
 3184 001e C023     		movs	r3, #192
 3185 0020 DB02     		lsls	r3, r3, #11
 3186 0022 1340     		ands	r3, r2
 3187 0024 FA68     		ldr	r2, [r7, #12]
 3188 0026 1343     		orrs	r3, r2
 3189 0028 FB60     		str	r3, [r7, #12]
3269:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 3190              		.loc 1 3269 0
 3191 002a 194B     		ldr	r3, .L215
 3192 002c FA68     		ldr	r2, [r7, #12]
 3193 002e 1A60     		str	r2, [r3]
3270:Generated_Source\PSoC4/CyLib.c ****         } else
3271:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3272:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
3273:Generated_Source\PSoC4/CyLib.c ****         {
3274:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3275:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3276:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3277:Generated_Source\PSoC4/CyLib.c ****         } else
3278:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3279:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3280:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
3281:Generated_Source\PSoC4/CyLib.c ****         {
3282:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3283:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 115


3284:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
3285:Generated_Source\PSoC4/CyLib.c ****         } else
3286:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3287:Generated_Source\PSoC4/CyLib.c ****         {
3288:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3289:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
3290:Generated_Source\PSoC4/CyLib.c ****         }
3291:Generated_Source\PSoC4/CyLib.c ****     }
 3194              		.loc 1 3291 0
 3195 0030 2AE0     		b	.L214
 3196              	.L210:
3272:Generated_Source\PSoC4/CyLib.c ****         {
 3197              		.loc 1 3272 0
 3198 0032 7B68     		ldr	r3, [r7, #4]
 3199 0034 012B     		cmp	r3, #1
 3200 0036 10D1     		bne	.L212
3274:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3201              		.loc 1 3274 0
 3202 0038 174B     		ldr	r3, .L215+8
 3203 003a 1B68     		ldr	r3, [r3]
 3204 003c 154A     		ldr	r2, .L215+4
 3205 003e 1340     		ands	r3, r2
 3206 0040 FB60     		str	r3, [r7, #12]
3275:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 3207              		.loc 1 3275 0
 3208 0042 3B68     		ldr	r3, [r7]
 3209 0044 5A04     		lsls	r2, r3, #17
 3210 0046 C023     		movs	r3, #192
 3211 0048 DB02     		lsls	r3, r3, #11
 3212 004a 1340     		ands	r3, r2
 3213 004c FA68     		ldr	r2, [r7, #12]
 3214 004e 1343     		orrs	r3, r2
 3215 0050 FB60     		str	r3, [r7, #12]
3276:Generated_Source\PSoC4/CyLib.c ****         } else
 3216              		.loc 1 3276 0
 3217 0052 114B     		ldr	r3, .L215+8
 3218 0054 FA68     		ldr	r2, [r7, #12]
 3219 0056 1A60     		str	r2, [r3]
 3220              		.loc 1 3291 0
 3221 0058 16E0     		b	.L214
 3222              	.L212:
3280:Generated_Source\PSoC4/CyLib.c ****         {
 3223              		.loc 1 3280 0
 3224 005a 7B68     		ldr	r3, [r7, #4]
 3225 005c 022B     		cmp	r3, #2
 3226 005e 10D1     		bne	.L213
3282:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3227              		.loc 1 3282 0
 3228 0060 0E4B     		ldr	r3, .L215+12
 3229 0062 1B68     		ldr	r3, [r3]
 3230 0064 0B4A     		ldr	r2, .L215+4
 3231 0066 1340     		ands	r3, r2
 3232 0068 FB60     		str	r3, [r7, #12]
3283:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 3233              		.loc 1 3283 0
 3234 006a 3B68     		ldr	r3, [r7]
 3235 006c 5A04     		lsls	r2, r3, #17
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 116


 3236 006e C023     		movs	r3, #192
 3237 0070 DB02     		lsls	r3, r3, #11
 3238 0072 1340     		ands	r3, r2
 3239 0074 FA68     		ldr	r2, [r7, #12]
 3240 0076 1343     		orrs	r3, r2
 3241 0078 FB60     		str	r3, [r7, #12]
3284:Generated_Source\PSoC4/CyLib.c ****         } else
 3242              		.loc 1 3284 0
 3243 007a 084B     		ldr	r3, .L215+12
 3244 007c FA68     		ldr	r2, [r7, #12]
 3245 007e 1A60     		str	r2, [r3]
 3246              		.loc 1 3291 0
 3247 0080 02E0     		b	.L214
 3248              	.L213:
3289:Generated_Source\PSoC4/CyLib.c ****         }
 3249              		.loc 1 3289 0 discriminator 1
 3250 0082 0020     		movs	r0, #0
 3251 0084 FFF7FEFF 		bl	CyHalt
 3252              	.L214:
 3253              		.loc 1 3291 0
 3254 0088 C046     		nop
 3255 008a BD46     		mov	sp, r7
 3256 008c 04B0     		add	sp, sp, #16
 3257              		@ sp needed
 3258 008e 80BD     		pop	{r7, pc}
 3259              	.L216:
 3260              		.align	2
 3261              	.L215:
 3262 0090 00011040 		.word	1074790656
 3263 0094 FFFFF9FF 		.word	-393217
 3264 0098 04011040 		.word	1074790660
 3265 009c 08011040 		.word	1074790664
 3266              		.cfi_endproc
 3267              	.LFE54:
 3268              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 3269              		.text
 3270              	.Letext0:
 3271              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 3272              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 3273              		.section	.debug_info,"",%progbits
 3274              	.Ldebug_info0:
 3275 0000 C70A0000 		.4byte	0xac7
 3276 0004 0400     		.2byte	0x4
 3277 0006 00000000 		.4byte	.Ldebug_abbrev0
 3278 000a 04       		.byte	0x4
 3279 000b 01       		.uleb128 0x1
 3280 000c 55030000 		.4byte	.LASF115
 3281 0010 0C       		.byte	0xc
 3282 0011 47070000 		.4byte	.LASF116
 3283 0015 3B060000 		.4byte	.LASF117
 3284 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3285 001d 00000000 		.4byte	0
 3286 0021 00000000 		.4byte	.Ldebug_line0
 3287 0025 02       		.uleb128 0x2
 3288 0026 01       		.byte	0x1
 3289 0027 06       		.byte	0x6
 3290 0028 F9000000 		.4byte	.LASF0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 117


 3291 002c 02       		.uleb128 0x2
 3292 002d 01       		.byte	0x1
 3293 002e 08       		.byte	0x8
 3294 002f 89050000 		.4byte	.LASF1
 3295 0033 02       		.uleb128 0x2
 3296 0034 02       		.byte	0x2
 3297 0035 05       		.byte	0x5
 3298 0036 97050000 		.4byte	.LASF2
 3299 003a 02       		.uleb128 0x2
 3300 003b 02       		.byte	0x2
 3301 003c 07       		.byte	0x7
 3302 003d EF020000 		.4byte	.LASF3
 3303 0041 02       		.uleb128 0x2
 3304 0042 04       		.byte	0x4
 3305 0043 05       		.byte	0x5
 3306 0044 5E010000 		.4byte	.LASF4
 3307 0048 02       		.uleb128 0x2
 3308 0049 04       		.byte	0x4
 3309 004a 07       		.byte	0x7
 3310 004b 79020000 		.4byte	.LASF5
 3311 004f 02       		.uleb128 0x2
 3312 0050 08       		.byte	0x8
 3313 0051 05       		.byte	0x5
 3314 0052 EB000000 		.4byte	.LASF6
 3315 0056 02       		.uleb128 0x2
 3316 0057 08       		.byte	0x8
 3317 0058 07       		.byte	0x7
 3318 0059 75000000 		.4byte	.LASF7
 3319 005d 03       		.uleb128 0x3
 3320 005e 04       		.byte	0x4
 3321 005f 05       		.byte	0x5
 3322 0060 696E7400 		.ascii	"int\000"
 3323 0064 02       		.uleb128 0x2
 3324 0065 04       		.byte	0x4
 3325 0066 07       		.byte	0x7
 3326 0067 5D020000 		.4byte	.LASF8
 3327 006b 04       		.uleb128 0x4
 3328 006c 7E010000 		.4byte	.LASF9
 3329 0070 02       		.byte	0x2
 3330 0071 E401     		.2byte	0x1e4
 3331 0073 2C000000 		.4byte	0x2c
 3332 0077 04       		.uleb128 0x4
 3333 0078 0F000000 		.4byte	.LASF10
 3334 007c 02       		.byte	0x2
 3335 007d E501     		.2byte	0x1e5
 3336 007f 3A000000 		.4byte	0x3a
 3337 0083 04       		.uleb128 0x4
 3338 0084 BE010000 		.4byte	.LASF11
 3339 0088 02       		.byte	0x2
 3340 0089 E601     		.2byte	0x1e6
 3341 008b 48000000 		.4byte	0x48
 3342 008f 02       		.uleb128 0x2
 3343 0090 04       		.byte	0x4
 3344 0091 04       		.byte	0x4
 3345 0092 13050000 		.4byte	.LASF12
 3346 0096 02       		.uleb128 0x2
 3347 0097 08       		.byte	0x8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 118


 3348 0098 04       		.byte	0x4
 3349 0099 9A010000 		.4byte	.LASF13
 3350 009d 02       		.uleb128 0x2
 3351 009e 01       		.byte	0x1
 3352 009f 08       		.byte	0x8
 3353 00a0 DA050000 		.4byte	.LASF14
 3354 00a4 04       		.uleb128 0x4
 3355 00a5 56050000 		.4byte	.LASF15
 3356 00a9 02       		.byte	0x2
 3357 00aa 8E02     		.2byte	0x28e
 3358 00ac B0000000 		.4byte	0xb0
 3359 00b0 05       		.uleb128 0x5
 3360 00b1 6B000000 		.4byte	0x6b
 3361 00b5 04       		.uleb128 0x4
 3362 00b6 2E040000 		.4byte	.LASF16
 3363 00ba 02       		.byte	0x2
 3364 00bb 9002     		.2byte	0x290
 3365 00bd C1000000 		.4byte	0xc1
 3366 00c1 05       		.uleb128 0x5
 3367 00c2 83000000 		.4byte	0x83
 3368 00c6 04       		.uleb128 0x4
 3369 00c7 DF050000 		.4byte	.LASF17
 3370 00cb 02       		.byte	0x2
 3371 00cc A002     		.2byte	0x2a0
 3372 00ce D2000000 		.4byte	0xd2
 3373 00d2 06       		.uleb128 0x6
 3374 00d3 04       		.byte	0x4
 3375 00d4 D8000000 		.4byte	0xd8
 3376 00d8 07       		.uleb128 0x7
 3377 00d9 02       		.uleb128 0x2
 3378 00da 08       		.byte	0x8
 3379 00db 04       		.byte	0x4
 3380 00dc A7040000 		.4byte	.LASF18
 3381 00e0 02       		.uleb128 0x2
 3382 00e1 04       		.byte	0x4
 3383 00e2 07       		.byte	0x7
 3384 00e3 57040000 		.4byte	.LASF19
 3385 00e7 08       		.uleb128 0x8
 3386 00e8 28050000 		.4byte	.LASF20
 3387 00ec 03       		.byte	0x3
 3388 00ed F5       		.byte	0xf5
 3389 00ee D2000000 		.4byte	0xd2
 3390 00f2 09       		.uleb128 0x9
 3391 00f3 36070000 		.4byte	.LASF21
 3392 00f7 01       		.byte	0x1
 3393 00f8 62       		.byte	0x62
 3394 00f9 00000000 		.4byte	.LFB1
 3395 00fd 1C000000 		.4byte	.LFE1-.LFB1
 3396 0101 01       		.uleb128 0x1
 3397 0102 9C       		.byte	0x9c
 3398 0103 0A       		.uleb128 0xa
 3399 0104 A6020000 		.4byte	.LASF22
 3400 0108 01       		.byte	0x1
 3401 0109 82       		.byte	0x82
 3402 010a 00000000 		.4byte	.LFB2
 3403 010e 20000000 		.4byte	.LFE2-.LFB2
 3404 0112 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 119


 3405 0113 9C       		.byte	0x9c
 3406 0114 0B       		.uleb128 0xb
 3407 0115 E2010000 		.4byte	.LASF28
 3408 0119 01       		.byte	0x1
 3409 011a A6       		.byte	0xa6
 3410 011b 00000000 		.4byte	.LFB3
 3411 011f 44010000 		.4byte	.LFE3-.LFB3
 3412 0123 01       		.uleb128 0x1
 3413 0124 9C       		.byte	0x9c
 3414 0125 7C010000 		.4byte	0x17c
 3415 0129 0C       		.uleb128 0xc
 3416 012a 6900     		.ascii	"i\000"
 3417 012c 01       		.byte	0x1
 3418 012d A9       		.byte	0xa9
 3419 012e 83000000 		.4byte	0x83
 3420 0132 02       		.uleb128 0x2
 3421 0133 91       		.byte	0x91
 3422 0134 6C       		.sleb128 -20
 3423 0135 0D       		.uleb128 0xd
 3424 0136 05010000 		.4byte	.LASF23
 3425 013a 01       		.byte	0x1
 3426 013b AC       		.byte	0xac
 3427 013c 83000000 		.4byte	0x83
 3428 0140 02       		.uleb128 0x2
 3429 0141 91       		.byte	0x91
 3430 0142 68       		.sleb128 -24
 3431 0143 0D       		.uleb128 0xd
 3432 0144 16010000 		.4byte	.LASF24
 3433 0148 01       		.byte	0x1
 3434 0149 AD       		.byte	0xad
 3435 014a 6B000000 		.4byte	0x6b
 3436 014e 02       		.uleb128 0x2
 3437 014f 91       		.byte	0x91
 3438 0150 63       		.sleb128 -29
 3439 0151 0D       		.uleb128 0xd
 3440 0152 02030000 		.4byte	.LASF25
 3441 0156 01       		.byte	0x1
 3442 0157 AE       		.byte	0xae
 3443 0158 83000000 		.4byte	0x83
 3444 015c 02       		.uleb128 0x2
 3445 015d 91       		.byte	0x91
 3446 015e 5C       		.sleb128 -36
 3447 015f 0D       		.uleb128 0xd
 3448 0160 25010000 		.4byte	.LASF26
 3449 0164 01       		.byte	0x1
 3450 0165 AF       		.byte	0xaf
 3451 0166 83000000 		.4byte	0x83
 3452 016a 02       		.uleb128 0x2
 3453 016b 91       		.byte	0x91
 3454 016c 64       		.sleb128 -28
 3455 016d 0D       		.uleb128 0xd
 3456 016e 96060000 		.4byte	.LASF27
 3457 0172 01       		.byte	0x1
 3458 0173 B0       		.byte	0xb0
 3459 0174 C1000000 		.4byte	0xc1
 3460 0178 02       		.uleb128 0x2
 3461 0179 91       		.byte	0x91
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 120


 3462 017a 58       		.sleb128 -40
 3463 017b 00       		.byte	0
 3464 017c 0E       		.uleb128 0xe
 3465 017d 14040000 		.4byte	.LASF29
 3466 0181 01       		.byte	0x1
 3467 0182 1301     		.2byte	0x113
 3468 0184 00000000 		.4byte	.LFB4
 3469 0188 78000000 		.4byte	.LFE4-.LFB4
 3470 018c 01       		.uleb128 0x1
 3471 018d 9C       		.byte	0x9c
 3472 018e AF010000 		.4byte	0x1af
 3473 0192 0F       		.uleb128 0xf
 3474 0193 6900     		.ascii	"i\000"
 3475 0195 01       		.byte	0x1
 3476 0196 1601     		.2byte	0x116
 3477 0198 83000000 		.4byte	0x83
 3478 019c 02       		.uleb128 0x2
 3479 019d 91       		.byte	0x91
 3480 019e 74       		.sleb128 -12
 3481 019f 10       		.uleb128 0x10
 3482 01a0 05010000 		.4byte	.LASF23
 3483 01a4 01       		.byte	0x1
 3484 01a5 1901     		.2byte	0x119
 3485 01a7 83000000 		.4byte	0x83
 3486 01ab 02       		.uleb128 0x2
 3487 01ac 91       		.byte	0x91
 3488 01ad 70       		.sleb128 -16
 3489 01ae 00       		.byte	0
 3490 01af 11       		.uleb128 0x11
 3491 01b0 40010000 		.4byte	.LASF45
 3492 01b4 01       		.byte	0x1
 3493 01b5 4B01     		.2byte	0x14b
 3494 01b7 83000000 		.4byte	0x83
 3495 01bb 00000000 		.4byte	.LFB5
 3496 01bf 20000000 		.4byte	.LFE5-.LFB5
 3497 01c3 01       		.uleb128 0x1
 3498 01c4 9C       		.byte	0x9c
 3499 01c5 12       		.uleb128 0x12
 3500 01c6 1F000000 		.4byte	.LASF30
 3501 01ca 01       		.byte	0x1
 3502 01cb 1B02     		.2byte	0x21b
 3503 01cd 00000000 		.4byte	.LFB6
 3504 01d1 48000000 		.4byte	.LFE6-.LFB6
 3505 01d5 01       		.uleb128 0x1
 3506 01d6 9C       		.byte	0x9c
 3507 01d7 09020000 		.4byte	0x209
 3508 01db 13       		.uleb128 0x13
 3509 01dc BF050000 		.4byte	.LASF33
 3510 01e0 01       		.byte	0x1
 3511 01e1 1B02     		.2byte	0x21b
 3512 01e3 83000000 		.4byte	0x83
 3513 01e7 02       		.uleb128 0x2
 3514 01e8 91       		.byte	0x91
 3515 01e9 64       		.sleb128 -28
 3516 01ea 10       		.uleb128 0x10
 3517 01eb 16010000 		.4byte	.LASF24
 3518 01ef 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 121


 3519 01f0 1D02     		.2byte	0x21d
 3520 01f2 6B000000 		.4byte	0x6b
 3521 01f6 02       		.uleb128 0x2
 3522 01f7 91       		.byte	0x91
 3523 01f8 6F       		.sleb128 -17
 3524 01f9 10       		.uleb128 0x10
 3525 01fa 73070000 		.4byte	.LASF31
 3526 01fe 01       		.byte	0x1
 3527 01ff 1E02     		.2byte	0x21e
 3528 0201 83000000 		.4byte	0x83
 3529 0205 02       		.uleb128 0x2
 3530 0206 91       		.byte	0x91
 3531 0207 68       		.sleb128 -24
 3532 0208 00       		.byte	0
 3533 0209 0E       		.uleb128 0xe
 3534 020a 4B000000 		.4byte	.LASF32
 3535 020e 01       		.byte	0x1
 3536 020f 6302     		.2byte	0x263
 3537 0211 00000000 		.4byte	.LFB7
 3538 0215 50000000 		.4byte	.LFE7-.LFB7
 3539 0219 01       		.uleb128 0x1
 3540 021a 9C       		.byte	0x9c
 3541 021b 2F020000 		.4byte	0x22f
 3542 021f 13       		.uleb128 0x13
 3543 0220 93010000 		.4byte	.LASF34
 3544 0224 01       		.byte	0x1
 3545 0225 6302     		.2byte	0x263
 3546 0227 83000000 		.4byte	0x83
 3547 022b 02       		.uleb128 0x2
 3548 022c 91       		.byte	0x91
 3549 022d 74       		.sleb128 -12
 3550 022e 00       		.byte	0
 3551 022f 14       		.uleb128 0x14
 3552 0230 CA010000 		.4byte	.LASF48
 3553 0234 01       		.byte	0x1
 3554 0235 8802     		.2byte	0x288
 3555 0237 83000000 		.4byte	0x83
 3556 023b 00000000 		.4byte	.LFB8
 3557 023f 34000000 		.4byte	.LFE8-.LFB8
 3558 0243 01       		.uleb128 0x1
 3559 0244 9C       		.byte	0x9c
 3560 0245 68020000 		.4byte	0x268
 3561 0249 10       		.uleb128 0x10
 3562 024a 16010000 		.4byte	.LASF24
 3563 024e 01       		.byte	0x1
 3564 024f 8A02     		.2byte	0x28a
 3565 0251 6B000000 		.4byte	0x6b
 3566 0255 02       		.uleb128 0x2
 3567 0256 91       		.byte	0x91
 3568 0257 6F       		.sleb128 -17
 3569 0258 10       		.uleb128 0x10
 3570 0259 BB040000 		.4byte	.LASF35
 3571 025d 01       		.byte	0x1
 3572 025e 8B02     		.2byte	0x28b
 3573 0260 83000000 		.4byte	0x83
 3574 0264 02       		.uleb128 0x2
 3575 0265 91       		.byte	0x91
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 122


 3576 0266 68       		.sleb128 -24
 3577 0267 00       		.byte	0
 3578 0268 12       		.uleb128 0x12
 3579 0269 FC050000 		.4byte	.LASF36
 3580 026d 01       		.byte	0x1
 3581 026e C502     		.2byte	0x2c5
 3582 0270 00000000 		.4byte	.LFB9
 3583 0274 48000000 		.4byte	.LFE9-.LFB9
 3584 0278 01       		.uleb128 0x1
 3585 0279 9C       		.byte	0x9c
 3586 027a 9D020000 		.4byte	0x29d
 3587 027e 13       		.uleb128 0x13
 3588 027f 2E070000 		.4byte	.LASF37
 3589 0283 01       		.byte	0x1
 3590 0284 C502     		.2byte	0x2c5
 3591 0286 83000000 		.4byte	0x83
 3592 028a 02       		.uleb128 0x2
 3593 028b 91       		.byte	0x91
 3594 028c 64       		.sleb128 -28
 3595 028d 10       		.uleb128 0x10
 3596 028e 16010000 		.4byte	.LASF24
 3597 0292 01       		.byte	0x1
 3598 0293 C702     		.2byte	0x2c7
 3599 0295 6B000000 		.4byte	0x6b
 3600 0299 02       		.uleb128 0x2
 3601 029a 91       		.byte	0x91
 3602 029b 6F       		.sleb128 -17
 3603 029c 00       		.byte	0
 3604 029d 12       		.uleb128 0x12
 3605 029e 40030000 		.4byte	.LASF38
 3606 02a2 01       		.byte	0x1
 3607 02a3 FF02     		.2byte	0x2ff
 3608 02a5 00000000 		.4byte	.LFB10
 3609 02a9 B8000000 		.4byte	.LFE10-.LFB10
 3610 02ad 01       		.uleb128 0x1
 3611 02ae 9C       		.byte	0x9c
 3612 02af FF020000 		.4byte	0x2ff
 3613 02b3 13       		.uleb128 0x13
 3614 02b4 05010000 		.4byte	.LASF23
 3615 02b8 01       		.byte	0x1
 3616 02b9 FF02     		.2byte	0x2ff
 3617 02bb 83000000 		.4byte	0x83
 3618 02bf 02       		.uleb128 0x2
 3619 02c0 91       		.byte	0x91
 3620 02c1 4C       		.sleb128 -52
 3621 02c2 10       		.uleb128 0x10
 3622 02c3 8C000000 		.4byte	.LASF39
 3623 02c7 01       		.byte	0x1
 3624 02c8 0203     		.2byte	0x302
 3625 02ca 0F030000 		.4byte	0x30f
 3626 02ce 02       		.uleb128 0x2
 3627 02cf 91       		.byte	0x91
 3628 02d0 60       		.sleb128 -32
 3629 02d1 10       		.uleb128 0x10
 3630 02d2 74010000 		.4byte	.LASF40
 3631 02d6 01       		.byte	0x1
 3632 02d7 0303     		.2byte	0x303
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 123


 3633 02d9 24030000 		.4byte	0x324
 3634 02dd 02       		.uleb128 0x2
 3635 02de 91       		.byte	0x91
 3636 02df 50       		.sleb128 -48
 3637 02e0 10       		.uleb128 0x10
 3638 02e1 56010000 		.4byte	.LASF41
 3639 02e5 01       		.byte	0x1
 3640 02e6 0C03     		.2byte	0x30c
 3641 02e8 83000000 		.4byte	0x83
 3642 02ec 02       		.uleb128 0x2
 3643 02ed 91       		.byte	0x91
 3644 02ee 6C       		.sleb128 -20
 3645 02ef 10       		.uleb128 0x10
 3646 02f0 16010000 		.4byte	.LASF24
 3647 02f4 01       		.byte	0x1
 3648 02f5 1303     		.2byte	0x313
 3649 02f7 6B000000 		.4byte	0x6b
 3650 02fb 02       		.uleb128 0x2
 3651 02fc 91       		.byte	0x91
 3652 02fd 6B       		.sleb128 -21
 3653 02fe 00       		.byte	0
 3654 02ff 15       		.uleb128 0x15
 3655 0300 C1000000 		.4byte	0xc1
 3656 0304 0F030000 		.4byte	0x30f
 3657 0308 16       		.uleb128 0x16
 3658 0309 E0000000 		.4byte	0xe0
 3659 030d 01       		.byte	0x1
 3660 030e 00       		.byte	0
 3661 030f 05       		.uleb128 0x5
 3662 0310 FF020000 		.4byte	0x2ff
 3663 0314 15       		.uleb128 0x15
 3664 0315 C1000000 		.4byte	0xc1
 3665 0319 24030000 		.4byte	0x324
 3666 031d 16       		.uleb128 0x16
 3667 031e E0000000 		.4byte	0xe0
 3668 0322 03       		.byte	0x3
 3669 0323 00       		.byte	0
 3670 0324 05       		.uleb128 0x5
 3671 0325 14030000 		.4byte	0x314
 3672 0329 12       		.uleb128 0x12
 3673 032a 19050000 		.4byte	.LASF42
 3674 032e 01       		.byte	0x1
 3675 032f DA08     		.2byte	0x8da
 3676 0331 00000000 		.4byte	.LFB11
 3677 0335 64000000 		.4byte	.LFE11-.LFB11
 3678 0339 01       		.uleb128 0x1
 3679 033a 9C       		.byte	0x9c
 3680 033b 4F030000 		.4byte	0x34f
 3681 033f 13       		.uleb128 0x13
 3682 0340 5B050000 		.4byte	.LASF43
 3683 0344 01       		.byte	0x1
 3684 0345 DA08     		.2byte	0x8da
 3685 0347 83000000 		.4byte	0x83
 3686 034b 02       		.uleb128 0x2
 3687 034c 91       		.byte	0x91
 3688 034d 74       		.sleb128 -12
 3689 034e 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 124


 3690 034f 17       		.uleb128 0x17
 3691 0350 DC060000 		.4byte	.LASF44
 3692 0354 01       		.byte	0x1
 3693 0355 F808     		.2byte	0x8f8
 3694 0357 00000000 		.4byte	.LFB12
 3695 035b 2C000000 		.4byte	.LFE12-.LFB12
 3696 035f 01       		.uleb128 0x1
 3697 0360 9C       		.byte	0x9c
 3698 0361 11       		.uleb128 0x11
 3699 0362 8B020000 		.4byte	.LASF46
 3700 0366 01       		.byte	0x1
 3701 0367 0A09     		.2byte	0x90a
 3702 0369 83000000 		.4byte	0x83
 3703 036d 00000000 		.4byte	.LFB13
 3704 0371 18000000 		.4byte	.LFE13-.LFB13
 3705 0375 01       		.uleb128 0x1
 3706 0376 9C       		.byte	0x9c
 3707 0377 17       		.uleb128 0x17
 3708 0378 A7010000 		.4byte	.LASF47
 3709 037c 01       		.byte	0x1
 3710 037d 1A09     		.2byte	0x91a
 3711 037f 00000000 		.4byte	.LFB14
 3712 0383 14000000 		.4byte	.LFE14-.LFB14
 3713 0387 01       		.uleb128 0x1
 3714 0388 9C       		.byte	0x9c
 3715 0389 18       		.uleb128 0x18
 3716 038a DB020000 		.4byte	.LASF49
 3717 038e 01       		.byte	0x1
 3718 038f 3409     		.2byte	0x934
 3719 0391 83000000 		.4byte	0x83
 3720 0395 00000000 		.4byte	.LFB15
 3721 0399 30000000 		.4byte	.LFE15-.LFB15
 3722 039d 01       		.uleb128 0x1
 3723 039e 9C       		.byte	0x9c
 3724 039f C2030000 		.4byte	0x3c2
 3725 03a3 13       		.uleb128 0x13
 3726 03a4 D3050000 		.4byte	.LASF50
 3727 03a8 01       		.byte	0x1
 3728 03a9 3409     		.2byte	0x934
 3729 03ab 83000000 		.4byte	0x83
 3730 03af 02       		.uleb128 0x2
 3731 03b0 91       		.byte	0x91
 3732 03b1 6C       		.sleb128 -20
 3733 03b2 10       		.uleb128 0x10
 3734 03b3 43040000 		.4byte	.LASF51
 3735 03b7 01       		.byte	0x1
 3736 03b8 3609     		.2byte	0x936
 3737 03ba 83000000 		.4byte	0x83
 3738 03be 02       		.uleb128 0x2
 3739 03bf 91       		.byte	0x91
 3740 03c0 74       		.sleb128 -12
 3741 03c1 00       		.byte	0
 3742 03c2 18       		.uleb128 0x18
 3743 03c3 67000000 		.4byte	.LASF52
 3744 03c7 01       		.byte	0x1
 3745 03c8 4B09     		.2byte	0x94b
 3746 03ca 83000000 		.4byte	0x83
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 125


 3747 03ce 00000000 		.4byte	.LFB16
 3748 03d2 24000000 		.4byte	.LFE16-.LFB16
 3749 03d6 01       		.uleb128 0x1
 3750 03d7 9C       		.byte	0x9c
 3751 03d8 EC030000 		.4byte	0x3ec
 3752 03dc 10       		.uleb128 0x10
 3753 03dd 16000000 		.4byte	.LASF53
 3754 03e1 01       		.byte	0x1
 3755 03e2 4D09     		.2byte	0x94d
 3756 03e4 83000000 		.4byte	0x83
 3757 03e8 02       		.uleb128 0x2
 3758 03e9 91       		.byte	0x91
 3759 03ea 74       		.sleb128 -12
 3760 03eb 00       		.byte	0
 3761 03ec 0E       		.uleb128 0xe
 3762 03ed 97000000 		.4byte	.LASF54
 3763 03f1 01       		.byte	0x1
 3764 03f2 6209     		.2byte	0x962
 3765 03f4 00000000 		.4byte	.LFB17
 3766 03f8 1C000000 		.4byte	.LFE17-.LFB17
 3767 03fc 01       		.uleb128 0x1
 3768 03fd 9C       		.byte	0x9c
 3769 03fe 12040000 		.4byte	0x412
 3770 0402 13       		.uleb128 0x13
 3771 0403 C5010000 		.4byte	.LASF55
 3772 0407 01       		.byte	0x1
 3773 0408 6209     		.2byte	0x962
 3774 040a 83000000 		.4byte	0x83
 3775 040e 02       		.uleb128 0x2
 3776 040f 91       		.byte	0x91
 3777 0410 74       		.sleb128 -12
 3778 0411 00       		.byte	0
 3779 0412 14       		.uleb128 0x14
 3780 0413 02040000 		.4byte	.LASF56
 3781 0417 01       		.byte	0x1
 3782 0418 7B09     		.2byte	0x97b
 3783 041a C6000000 		.4byte	0xc6
 3784 041e 00000000 		.4byte	.LFB18
 3785 0422 48000000 		.4byte	.LFE18-.LFB18
 3786 0426 01       		.uleb128 0x1
 3787 0427 9C       		.byte	0x9c
 3788 0428 69040000 		.4byte	0x469
 3789 042c 13       		.uleb128 0x13
 3790 042d 30030000 		.4byte	.LASF57
 3791 0431 01       		.byte	0x1
 3792 0432 7B09     		.2byte	0x97b
 3793 0434 6B000000 		.4byte	0x6b
 3794 0438 02       		.uleb128 0x2
 3795 0439 91       		.byte	0x91
 3796 043a 6F       		.sleb128 -17
 3797 043b 13       		.uleb128 0x13
 3798 043c B3040000 		.4byte	.LASF58
 3799 0440 01       		.byte	0x1
 3800 0441 7B09     		.2byte	0x97b
 3801 0443 C6000000 		.4byte	0xc6
 3802 0447 02       		.uleb128 0x2
 3803 0448 91       		.byte	0x91
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 126


 3804 0449 68       		.sleb128 -24
 3805 044a 10       		.uleb128 0x10
 3806 044b EC060000 		.4byte	.LASF59
 3807 044f 01       		.byte	0x1
 3808 0450 7D09     		.2byte	0x97d
 3809 0452 C6000000 		.4byte	0xc6
 3810 0456 02       		.uleb128 0x2
 3811 0457 91       		.byte	0x91
 3812 0458 70       		.sleb128 -16
 3813 0459 10       		.uleb128 0x10
 3814 045a 00000000 		.4byte	.LASF60
 3815 045e 01       		.byte	0x1
 3816 045f 7E09     		.2byte	0x97e
 3817 0461 69040000 		.4byte	0x469
 3818 0465 02       		.uleb128 0x2
 3819 0466 91       		.byte	0x91
 3820 0467 74       		.sleb128 -12
 3821 0468 00       		.byte	0
 3822 0469 06       		.uleb128 0x6
 3823 046a 04       		.byte	0x4
 3824 046b C6000000 		.4byte	0xc6
 3825 046f 14       		.uleb128 0x14
 3826 0470 AD050000 		.4byte	.LASF61
 3827 0474 01       		.byte	0x1
 3828 0475 9D09     		.2byte	0x99d
 3829 0477 C6000000 		.4byte	0xc6
 3830 047b 00000000 		.4byte	.LFB19
 3831 047f 34000000 		.4byte	.LFE19-.LFB19
 3832 0483 01       		.uleb128 0x1
 3833 0484 9C       		.byte	0x9c
 3834 0485 A8040000 		.4byte	0x4a8
 3835 0489 13       		.uleb128 0x13
 3836 048a 30030000 		.4byte	.LASF57
 3837 048e 01       		.byte	0x1
 3838 048f 9D09     		.2byte	0x99d
 3839 0491 6B000000 		.4byte	0x6b
 3840 0495 02       		.uleb128 0x2
 3841 0496 91       		.byte	0x91
 3842 0497 6F       		.sleb128 -17
 3843 0498 10       		.uleb128 0x10
 3844 0499 00000000 		.4byte	.LASF60
 3845 049d 01       		.byte	0x1
 3846 049e 9F09     		.2byte	0x99f
 3847 04a0 69040000 		.4byte	0x469
 3848 04a4 02       		.uleb128 0x2
 3849 04a5 91       		.byte	0x91
 3850 04a6 74       		.sleb128 -12
 3851 04a7 00       		.byte	0
 3852 04a8 14       		.uleb128 0x14
 3853 04a9 21030000 		.4byte	.LASF62
 3854 04ad 01       		.byte	0x1
 3855 04ae B309     		.2byte	0x9b3
 3856 04b0 C6000000 		.4byte	0xc6
 3857 04b4 00000000 		.4byte	.LFB20
 3858 04b8 4C000000 		.4byte	.LFE20-.LFB20
 3859 04bc 01       		.uleb128 0x1
 3860 04bd 9C       		.byte	0x9c
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 127


 3861 04be FF040000 		.4byte	0x4ff
 3862 04c2 13       		.uleb128 0x13
 3863 04c3 30030000 		.4byte	.LASF57
 3864 04c7 01       		.byte	0x1
 3865 04c8 B309     		.2byte	0x9b3
 3866 04ca 6B000000 		.4byte	0x6b
 3867 04ce 02       		.uleb128 0x2
 3868 04cf 91       		.byte	0x91
 3869 04d0 6F       		.sleb128 -17
 3870 04d1 13       		.uleb128 0x13
 3871 04d2 B3040000 		.4byte	.LASF58
 3872 04d6 01       		.byte	0x1
 3873 04d7 B309     		.2byte	0x9b3
 3874 04d9 C6000000 		.4byte	0xc6
 3875 04dd 02       		.uleb128 0x2
 3876 04de 91       		.byte	0x91
 3877 04df 68       		.sleb128 -24
 3878 04e0 10       		.uleb128 0x10
 3879 04e1 EC060000 		.4byte	.LASF59
 3880 04e5 01       		.byte	0x1
 3881 04e6 B509     		.2byte	0x9b5
 3882 04e8 C6000000 		.4byte	0xc6
 3883 04ec 02       		.uleb128 0x2
 3884 04ed 91       		.byte	0x91
 3885 04ee 70       		.sleb128 -16
 3886 04ef 10       		.uleb128 0x10
 3887 04f0 00000000 		.4byte	.LASF60
 3888 04f4 01       		.byte	0x1
 3889 04f5 B609     		.2byte	0x9b6
 3890 04f7 69040000 		.4byte	0x469
 3891 04fb 02       		.uleb128 0x2
 3892 04fc 91       		.byte	0x91
 3893 04fd 74       		.sleb128 -12
 3894 04fe 00       		.byte	0
 3895 04ff 14       		.uleb128 0x14
 3896 0500 3A050000 		.4byte	.LASF63
 3897 0504 01       		.byte	0x1
 3898 0505 CF09     		.2byte	0x9cf
 3899 0507 C6000000 		.4byte	0xc6
 3900 050b 00000000 		.4byte	.LFB21
 3901 050f 36000000 		.4byte	.LFE21-.LFB21
 3902 0513 01       		.uleb128 0x1
 3903 0514 9C       		.byte	0x9c
 3904 0515 38050000 		.4byte	0x538
 3905 0519 13       		.uleb128 0x13
 3906 051a 30030000 		.4byte	.LASF57
 3907 051e 01       		.byte	0x1
 3908 051f CF09     		.2byte	0x9cf
 3909 0521 6B000000 		.4byte	0x6b
 3910 0525 02       		.uleb128 0x2
 3911 0526 91       		.byte	0x91
 3912 0527 6F       		.sleb128 -17
 3913 0528 10       		.uleb128 0x10
 3914 0529 00000000 		.4byte	.LASF60
 3915 052d 01       		.byte	0x1
 3916 052e D109     		.2byte	0x9d1
 3917 0530 69040000 		.4byte	0x469
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 128


 3918 0534 02       		.uleb128 0x2
 3919 0535 91       		.byte	0x91
 3920 0536 74       		.sleb128 -12
 3921 0537 00       		.byte	0
 3922 0538 12       		.uleb128 0x12
 3923 0539 02050000 		.4byte	.LASF64
 3924 053d 01       		.byte	0x1
 3925 053e E209     		.2byte	0x9e2
 3926 0540 00000000 		.4byte	.LFB22
 3927 0544 A8000000 		.4byte	.LFE22-.LFB22
 3928 0548 01       		.uleb128 0x1
 3929 0549 9C       		.byte	0x9c
 3930 054a 9A050000 		.4byte	0x59a
 3931 054e 13       		.uleb128 0x13
 3932 054f 30030000 		.4byte	.LASF57
 3933 0553 01       		.byte	0x1
 3934 0554 E209     		.2byte	0x9e2
 3935 0556 6B000000 		.4byte	0x6b
 3936 055a 02       		.uleb128 0x2
 3937 055b 91       		.byte	0x91
 3938 055c 5F       		.sleb128 -33
 3939 055d 13       		.uleb128 0x13
 3940 055e 37030000 		.4byte	.LASF65
 3941 0562 01       		.byte	0x1
 3942 0563 E209     		.2byte	0x9e2
 3943 0565 6B000000 		.4byte	0x6b
 3944 0569 02       		.uleb128 0x2
 3945 056a 91       		.byte	0x91
 3946 056b 5E       		.sleb128 -34
 3947 056c 10       		.uleb128 0x10
 3948 056d 16010000 		.4byte	.LASF24
 3949 0571 01       		.byte	0x1
 3950 0572 E409     		.2byte	0x9e4
 3951 0574 6B000000 		.4byte	0x6b
 3952 0578 02       		.uleb128 0x2
 3953 0579 91       		.byte	0x91
 3954 057a 6B       		.sleb128 -21
 3955 057b 10       		.uleb128 0x10
 3956 057c A1010000 		.4byte	.LASF66
 3957 0580 01       		.byte	0x1
 3958 0581 E509     		.2byte	0x9e5
 3959 0583 83000000 		.4byte	0x83
 3960 0587 02       		.uleb128 0x2
 3961 0588 91       		.byte	0x91
 3962 0589 6C       		.sleb128 -20
 3963 058a 10       		.uleb128 0x10
 3964 058b 27020000 		.4byte	.LASF67
 3965 058f 01       		.byte	0x1
 3966 0590 E609     		.2byte	0x9e6
 3967 0592 83000000 		.4byte	0x83
 3968 0596 02       		.uleb128 0x2
 3969 0597 91       		.byte	0x91
 3970 0598 64       		.sleb128 -28
 3971 0599 00       		.byte	0
 3972 059a 14       		.uleb128 0x14
 3973 059b FB010000 		.4byte	.LASF68
 3974 059f 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 129


 3975 05a0 040A     		.2byte	0xa04
 3976 05a2 6B000000 		.4byte	0x6b
 3977 05a6 00000000 		.4byte	.LFB23
 3978 05aa 58000000 		.4byte	.LFE23-.LFB23
 3979 05ae 01       		.uleb128 0x1
 3980 05af 9C       		.byte	0x9c
 3981 05b0 D3050000 		.4byte	0x5d3
 3982 05b4 13       		.uleb128 0x13
 3983 05b5 30030000 		.4byte	.LASF57
 3984 05b9 01       		.byte	0x1
 3985 05ba 040A     		.2byte	0xa04
 3986 05bc 6B000000 		.4byte	0x6b
 3987 05c0 02       		.uleb128 0x2
 3988 05c1 91       		.byte	0x91
 3989 05c2 6F       		.sleb128 -17
 3990 05c3 10       		.uleb128 0x10
 3991 05c4 37030000 		.4byte	.LASF65
 3992 05c8 01       		.byte	0x1
 3993 05c9 060A     		.2byte	0xa06
 3994 05cb 6B000000 		.4byte	0x6b
 3995 05cf 02       		.uleb128 0x2
 3996 05d0 91       		.byte	0x91
 3997 05d1 77       		.sleb128 -9
 3998 05d2 00       		.byte	0
 3999 05d3 0E       		.uleb128 0xe
 4000 05d4 A1050000 		.4byte	.LASF69
 4001 05d8 01       		.byte	0x1
 4002 05d9 190A     		.2byte	0xa19
 4003 05db 00000000 		.4byte	.LFB24
 4004 05df 2C000000 		.4byte	.LFE24-.LFB24
 4005 05e3 01       		.uleb128 0x1
 4006 05e4 9C       		.byte	0x9c
 4007 05e5 F9050000 		.4byte	0x5f9
 4008 05e9 13       		.uleb128 0x13
 4009 05ea 30030000 		.4byte	.LASF57
 4010 05ee 01       		.byte	0x1
 4011 05ef 190A     		.2byte	0xa19
 4012 05f1 6B000000 		.4byte	0x6b
 4013 05f5 02       		.uleb128 0x2
 4014 05f6 91       		.byte	0x91
 4015 05f7 77       		.sleb128 -9
 4016 05f8 00       		.byte	0
 4017 05f9 18       		.uleb128 0x18
 4018 05fa DD000000 		.4byte	.LASF70
 4019 05fe 01       		.byte	0x1
 4020 05ff 2B0A     		.2byte	0xa2b
 4021 0601 6B000000 		.4byte	0x6b
 4022 0605 00000000 		.4byte	.LFB25
 4023 0609 30000000 		.4byte	.LFE25-.LFB25
 4024 060d 01       		.uleb128 0x1
 4025 060e 9C       		.byte	0x9c
 4026 060f 23060000 		.4byte	0x623
 4027 0613 13       		.uleb128 0x13
 4028 0614 30030000 		.4byte	.LASF57
 4029 0618 01       		.byte	0x1
 4030 0619 2B0A     		.2byte	0xa2b
 4031 061b 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 130


 4032 061f 02       		.uleb128 0x2
 4033 0620 91       		.byte	0x91
 4034 0621 77       		.sleb128 -9
 4035 0622 00       		.byte	0
 4036 0623 0E       		.uleb128 0xe
 4037 0624 67010000 		.4byte	.LASF71
 4038 0628 01       		.byte	0x1
 4039 0629 3B0A     		.2byte	0xa3b
 4040 062b 00000000 		.4byte	.LFB26
 4041 062f 2C000000 		.4byte	.LFE26-.LFB26
 4042 0633 01       		.uleb128 0x1
 4043 0634 9C       		.byte	0x9c
 4044 0635 49060000 		.4byte	0x649
 4045 0639 13       		.uleb128 0x13
 4046 063a 30030000 		.4byte	.LASF57
 4047 063e 01       		.byte	0x1
 4048 063f 3B0A     		.2byte	0xa3b
 4049 0641 6B000000 		.4byte	0x6b
 4050 0645 02       		.uleb128 0x2
 4051 0646 91       		.byte	0x91
 4052 0647 77       		.sleb128 -9
 4053 0648 00       		.byte	0
 4054 0649 0E       		.uleb128 0xe
 4055 064a B6020000 		.4byte	.LASF72
 4056 064e 01       		.byte	0x1
 4057 064f 490A     		.2byte	0xa49
 4058 0651 00000000 		.4byte	.LFB27
 4059 0655 2C000000 		.4byte	.LFE27-.LFB27
 4060 0659 01       		.uleb128 0x1
 4061 065a 9C       		.byte	0x9c
 4062 065b 6F060000 		.4byte	0x66f
 4063 065f 13       		.uleb128 0x13
 4064 0660 30030000 		.4byte	.LASF57
 4065 0664 01       		.byte	0x1
 4066 0665 490A     		.2byte	0xa49
 4067 0667 6B000000 		.4byte	0x6b
 4068 066b 02       		.uleb128 0x2
 4069 066c 91       		.byte	0x91
 4070 066d 77       		.sleb128 -9
 4071 066e 00       		.byte	0
 4072 066f 0E       		.uleb128 0xe
 4073 0670 95040000 		.4byte	.LASF73
 4074 0674 01       		.byte	0x1
 4075 0675 580A     		.2byte	0xa58
 4076 0677 00000000 		.4byte	.LFB28
 4077 067b 2C000000 		.4byte	.LFE28-.LFB28
 4078 067f 01       		.uleb128 0x1
 4079 0680 9C       		.byte	0x9c
 4080 0681 95060000 		.4byte	0x695
 4081 0685 13       		.uleb128 0x13
 4082 0686 30030000 		.4byte	.LASF57
 4083 068a 01       		.byte	0x1
 4084 068b 580A     		.2byte	0xa58
 4085 068d 6B000000 		.4byte	0x6b
 4086 0691 02       		.uleb128 0x2
 4087 0692 91       		.byte	0x91
 4088 0693 77       		.sleb128 -9
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 131


 4089 0694 00       		.byte	0
 4090 0695 0E       		.uleb128 0xe
 4091 0696 65050000 		.4byte	.LASF74
 4092 069a 01       		.byte	0x1
 4093 069b 670A     		.2byte	0xa67
 4094 069d 00000000 		.4byte	.LFB29
 4095 06a1 16000000 		.4byte	.LFE29-.LFB29
 4096 06a5 01       		.uleb128 0x1
 4097 06a6 9C       		.byte	0x9c
 4098 06a7 BB060000 		.4byte	0x6bb
 4099 06ab 13       		.uleb128 0x13
 4100 06ac D3050000 		.4byte	.LASF50
 4101 06b0 01       		.byte	0x1
 4102 06b1 670A     		.2byte	0xa67
 4103 06b3 6B000000 		.4byte	0x6b
 4104 06b7 02       		.uleb128 0x2
 4105 06b8 91       		.byte	0x91
 4106 06b9 77       		.sleb128 -9
 4107 06ba 00       		.byte	0
 4108 06bb 17       		.uleb128 0x17
 4109 06bc B4000000 		.4byte	.LASF75
 4110 06c0 01       		.byte	0x1
 4111 06c1 7F0A     		.2byte	0xa7f
 4112 06c3 00000000 		.4byte	.LFB30
 4113 06c7 24000000 		.4byte	.LFE30-.LFB30
 4114 06cb 01       		.uleb128 0x1
 4115 06cc 9C       		.byte	0x9c
 4116 06cd 12       		.uleb128 0x12
 4117 06ce A2060000 		.4byte	.LASF76
 4118 06d2 01       		.byte	0x1
 4119 06d3 930A     		.2byte	0xa93
 4120 06d5 00000000 		.4byte	.LFB31
 4121 06d9 4C000000 		.4byte	.LFE31-.LFB31
 4122 06dd 01       		.uleb128 0x1
 4123 06de 9C       		.byte	0x9c
 4124 06df F3060000 		.4byte	0x6f3
 4125 06e3 13       		.uleb128 0x13
 4126 06e4 49050000 		.4byte	.LASF77
 4127 06e8 01       		.byte	0x1
 4128 06e9 930A     		.2byte	0xa93
 4129 06eb 83000000 		.4byte	0x83
 4130 06ef 02       		.uleb128 0x2
 4131 06f0 91       		.byte	0x91
 4132 06f1 74       		.sleb128 -12
 4133 06f2 00       		.byte	0
 4134 06f3 12       		.uleb128 0x12
 4135 06f4 C9050000 		.4byte	.LASF78
 4136 06f8 01       		.byte	0x1
 4137 06f9 AA0A     		.2byte	0xaaa
 4138 06fb 00000000 		.4byte	.LFB32
 4139 06ff 28000000 		.4byte	.LFE32-.LFB32
 4140 0703 01       		.uleb128 0x1
 4141 0704 9C       		.byte	0x9c
 4142 0705 19070000 		.4byte	0x719
 4143 0709 13       		.uleb128 0x13
 4144 070a 66070000 		.4byte	.LASF79
 4145 070e 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 132


 4146 070f AA0A     		.2byte	0xaaa
 4147 0711 77000000 		.4byte	0x77
 4148 0715 02       		.uleb128 0x2
 4149 0716 91       		.byte	0x91
 4150 0717 76       		.sleb128 -10
 4151 0718 00       		.byte	0
 4152 0719 12       		.uleb128 0x12
 4153 071a 0A010000 		.4byte	.LASF80
 4154 071e 01       		.byte	0x1
 4155 071f B80A     		.2byte	0xab8
 4156 0721 00000000 		.4byte	.LFB33
 4157 0725 84000000 		.4byte	.LFE33-.LFB33
 4158 0729 01       		.uleb128 0x1
 4159 072a 9C       		.byte	0x9c
 4160 072b 3F070000 		.4byte	0x73f
 4161 072f 13       		.uleb128 0x13
 4162 0730 05010000 		.4byte	.LASF23
 4163 0734 01       		.byte	0x1
 4164 0735 B80A     		.2byte	0xab8
 4165 0737 83000000 		.4byte	0x83
 4166 073b 02       		.uleb128 0x2
 4167 073c 91       		.byte	0x91
 4168 073d 74       		.sleb128 -12
 4169 073e 00       		.byte	0
 4170 073f 19       		.uleb128 0x19
 4171 0740 34040000 		.4byte	.LASF81
 4172 0744 01       		.byte	0x1
 4173 0745 D80A     		.2byte	0xad8
 4174 0747 00000000 		.4byte	.LFB34
 4175 074b 24000000 		.4byte	.LFE34-.LFB34
 4176 074f 01       		.uleb128 0x1
 4177 0750 9C       		.byte	0x9c
 4178 0751 12       		.uleb128 0x12
 4179 0752 19020000 		.4byte	.LASF82
 4180 0756 01       		.byte	0x1
 4181 0757 F50A     		.2byte	0xaf5
 4182 0759 00000000 		.4byte	.LFB35
 4183 075d 60000000 		.4byte	.LFE35-.LFB35
 4184 0761 01       		.uleb128 0x1
 4185 0762 9C       		.byte	0x9c
 4186 0763 75070000 		.4byte	0x775
 4187 0767 0F       		.uleb128 0xf
 4188 0768 6900     		.ascii	"i\000"
 4189 076a 01       		.byte	0x1
 4190 076b F70A     		.2byte	0xaf7
 4191 076d 83000000 		.4byte	0x83
 4192 0771 02       		.uleb128 0x2
 4193 0772 91       		.byte	0x91
 4194 0773 74       		.sleb128 -12
 4195 0774 00       		.byte	0
 4196 0775 19       		.uleb128 0x19
 4197 0776 EC050000 		.4byte	.LASF83
 4198 077a 01       		.byte	0x1
 4199 077b 130B     		.2byte	0xb13
 4200 077d 00000000 		.4byte	.LFB36
 4201 0781 20000000 		.4byte	.LFE36-.LFB36
 4202 0785 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 133


 4203 0786 9C       		.byte	0x9c
 4204 0787 17       		.uleb128 0x17
 4205 0788 20070000 		.4byte	.LASF84
 4206 078c 01       		.byte	0x1
 4207 078d 240B     		.2byte	0xb24
 4208 078f 00000000 		.4byte	.LFB37
 4209 0793 1C000000 		.4byte	.LFE37-.LFB37
 4210 0797 01       		.uleb128 0x1
 4211 0798 9C       		.byte	0x9c
 4212 0799 17       		.uleb128 0x17
 4213 079a C4000000 		.4byte	.LASF85
 4214 079e 01       		.byte	0x1
 4215 079f 340B     		.2byte	0xb34
 4216 07a1 00000000 		.4byte	.LFB38
 4217 07a5 1C000000 		.4byte	.LFE38-.LFB38
 4218 07a9 01       		.uleb128 0x1
 4219 07aa 9C       		.byte	0x9c
 4220 07ab 17       		.uleb128 0x17
 4221 07ac C2060000 		.4byte	.LASF86
 4222 07b0 01       		.byte	0x1
 4223 07b1 440B     		.2byte	0xb44
 4224 07b3 00000000 		.4byte	.LFB39
 4225 07b7 1C000000 		.4byte	.LFE39-.LFB39
 4226 07bb 01       		.uleb128 0x1
 4227 07bc 9C       		.byte	0x9c
 4228 07bd 0E       		.uleb128 0xe
 4229 07be 7A070000 		.4byte	.LASF87
 4230 07c2 01       		.byte	0x1
 4231 07c3 550B     		.2byte	0xb55
 4232 07c5 00000000 		.4byte	.LFB40
 4233 07c9 20000000 		.4byte	.LFE40-.LFB40
 4234 07cd 01       		.uleb128 0x1
 4235 07ce 9C       		.byte	0x9c
 4236 07cf E3070000 		.4byte	0x7e3
 4237 07d3 13       		.uleb128 0x13
 4238 07d4 27020000 		.4byte	.LASF67
 4239 07d8 01       		.byte	0x1
 4240 07d9 550B     		.2byte	0xb55
 4241 07db 83000000 		.4byte	0x83
 4242 07df 02       		.uleb128 0x2
 4243 07e0 91       		.byte	0x91
 4244 07e1 74       		.sleb128 -12
 4245 07e2 00       		.byte	0
 4246 07e3 11       		.uleb128 0x11
 4247 07e4 2D010000 		.4byte	.LASF88
 4248 07e8 01       		.byte	0x1
 4249 07e9 650B     		.2byte	0xb65
 4250 07eb 83000000 		.4byte	0x83
 4251 07ef 00000000 		.4byte	.LFB41
 4252 07f3 18000000 		.4byte	.LFE41-.LFB41
 4253 07f7 01       		.uleb128 0x1
 4254 07f8 9C       		.byte	0x9c
 4255 07f9 11       		.uleb128 0x11
 4256 07fa E2040000 		.4byte	.LASF89
 4257 07fe 01       		.byte	0x1
 4258 07ff 750B     		.2byte	0xb75
 4259 0801 83000000 		.4byte	0x83
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 134


 4260 0805 00000000 		.4byte	.LFB42
 4261 0809 18000000 		.4byte	.LFE42-.LFB42
 4262 080d 01       		.uleb128 0x1
 4263 080e 9C       		.byte	0x9c
 4264 080f 0E       		.uleb128 0xe
 4265 0810 09030000 		.4byte	.LASF90
 4266 0814 01       		.byte	0x1
 4267 0815 950B     		.2byte	0xb95
 4268 0817 00000000 		.4byte	.LFB43
 4269 081b 34000000 		.4byte	.LFE43-.LFB43
 4270 081f 01       		.uleb128 0x1
 4271 0820 9C       		.byte	0x9c
 4272 0821 35080000 		.4byte	0x835
 4273 0825 13       		.uleb128 0x13
 4274 0826 2D020000 		.4byte	.LASF91
 4275 082a 01       		.byte	0x1
 4276 082b 950B     		.2byte	0xb95
 4277 082d 83000000 		.4byte	0x83
 4278 0831 02       		.uleb128 0x2
 4279 0832 91       		.byte	0x91
 4280 0833 74       		.sleb128 -12
 4281 0834 00       		.byte	0
 4282 0835 11       		.uleb128 0x11
 4283 0836 AA060000 		.4byte	.LASF92
 4284 083a 01       		.byte	0x1
 4285 083b AE0B     		.2byte	0xbae
 4286 083d 83000000 		.4byte	0x83
 4287 0841 00000000 		.4byte	.LFB44
 4288 0845 18000000 		.4byte	.LFE44-.LFB44
 4289 0849 01       		.uleb128 0x1
 4290 084a 9C       		.byte	0x9c
 4291 084b 11       		.uleb128 0x11
 4292 084c 47020000 		.4byte	.LASF93
 4293 0850 01       		.byte	0x1
 4294 0851 C50B     		.2byte	0xbc5
 4295 0853 83000000 		.4byte	0x83
 4296 0857 00000000 		.4byte	.LFB45
 4297 085b 18000000 		.4byte	.LFE45-.LFB45
 4298 085f 01       		.uleb128 0x1
 4299 0860 9C       		.byte	0x9c
 4300 0861 17       		.uleb128 0x17
 4301 0862 6A020000 		.4byte	.LASF94
 4302 0866 01       		.byte	0x1
 4303 0867 D20B     		.2byte	0xbd2
 4304 0869 00000000 		.4byte	.LFB46
 4305 086d 14000000 		.4byte	.LFE46-.LFB46
 4306 0871 01       		.uleb128 0x1
 4307 0872 9C       		.byte	0x9c
 4308 0873 18       		.uleb128 0x18
 4309 0874 13060000 		.4byte	.LASF95
 4310 0878 01       		.byte	0x1
 4311 0879 F50B     		.2byte	0xbf5
 4312 087b E7000000 		.4byte	0xe7
 4313 087f 00000000 		.4byte	.LFB47
 4314 0883 2C000000 		.4byte	.LFE47-.LFB47
 4315 0887 01       		.uleb128 0x1
 4316 0888 9C       		.byte	0x9c
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 135


 4317 0889 BB080000 		.4byte	0x8bb
 4318 088d 13       		.uleb128 0x13
 4319 088e 30030000 		.4byte	.LASF57
 4320 0892 01       		.byte	0x1
 4321 0893 F50B     		.2byte	0xbf5
 4322 0895 83000000 		.4byte	0x83
 4323 0899 02       		.uleb128 0x2
 4324 089a 91       		.byte	0x91
 4325 089b 6C       		.sleb128 -20
 4326 089c 13       		.uleb128 0x13
 4327 089d C8040000 		.4byte	.LASF96
 4328 08a1 01       		.byte	0x1
 4329 08a2 F50B     		.2byte	0xbf5
 4330 08a4 E7000000 		.4byte	0xe7
 4331 08a8 02       		.uleb128 0x2
 4332 08a9 91       		.byte	0x91
 4333 08aa 68       		.sleb128 -24
 4334 08ab 10       		.uleb128 0x10
 4335 08ac 60000000 		.4byte	.LASF97
 4336 08b0 01       		.byte	0x1
 4337 08b1 F70B     		.2byte	0xbf7
 4338 08b3 E7000000 		.4byte	0xe7
 4339 08b7 02       		.uleb128 0x2
 4340 08b8 91       		.byte	0x91
 4341 08b9 74       		.sleb128 -12
 4342 08ba 00       		.byte	0
 4343 08bb 18       		.uleb128 0x18
 4344 08bc C6020000 		.4byte	.LASF98
 4345 08c0 01       		.byte	0x1
 4346 08c1 0D0C     		.2byte	0xc0d
 4347 08c3 E7000000 		.4byte	0xe7
 4348 08c7 00000000 		.4byte	.LFB48
 4349 08cb 1C000000 		.4byte	.LFE48-.LFB48
 4350 08cf 01       		.uleb128 0x1
 4351 08d0 9C       		.byte	0x9c
 4352 08d1 E5080000 		.4byte	0x8e5
 4353 08d5 13       		.uleb128 0x13
 4354 08d6 30030000 		.4byte	.LASF57
 4355 08da 01       		.byte	0x1
 4356 08db 0D0C     		.2byte	0xc0d
 4357 08dd 83000000 		.4byte	0x83
 4358 08e1 02       		.uleb128 0x2
 4359 08e2 91       		.byte	0x91
 4360 08e3 74       		.sleb128 -12
 4361 08e4 00       		.byte	0
 4362 08e5 1A       		.uleb128 0x1a
 4363 08e6 8D070000 		.4byte	.LASF118
 4364 08ea 01       		.byte	0x1
 4365 08eb 1A0C     		.2byte	0xc1a
 4366 08ed 00000000 		.4byte	.LFB49
 4367 08f1 44000000 		.4byte	.LFE49-.LFB49
 4368 08f5 01       		.uleb128 0x1
 4369 08f6 9C       		.byte	0x9c
 4370 08f7 09090000 		.4byte	0x909
 4371 08fb 0F       		.uleb128 0xf
 4372 08fc 6900     		.ascii	"i\000"
 4373 08fe 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 136


 4374 08ff 1C0C     		.2byte	0xc1c
 4375 0901 83000000 		.4byte	0x83
 4376 0905 02       		.uleb128 0x2
 4377 0906 91       		.byte	0x91
 4378 0907 74       		.sleb128 -12
 4379 0908 00       		.byte	0
 4380 0909 0E       		.uleb128 0xe
 4381 090a 39020000 		.4byte	.LASF99
 4382 090e 01       		.byte	0x1
 4383 090f 3A0C     		.2byte	0xc3a
 4384 0911 00000000 		.4byte	.LFB50
 4385 0915 C0000000 		.4byte	.LFE50-.LFB50
 4386 0919 01       		.uleb128 0x1
 4387 091a 9C       		.byte	0x9c
 4388 091b 2F090000 		.4byte	0x92f
 4389 091f 13       		.uleb128 0x13
 4390 0920 8D060000 		.4byte	.LASF100
 4391 0924 01       		.byte	0x1
 4392 0925 3A0C     		.2byte	0xc3a
 4393 0927 2F090000 		.4byte	0x92f
 4394 092b 02       		.uleb128 0x2
 4395 092c 91       		.byte	0x91
 4396 092d 74       		.sleb128 -12
 4397 092e 00       		.byte	0
 4398 092f 06       		.uleb128 0x6
 4399 0930 04       		.byte	0x4
 4400 0931 83000000 		.4byte	0x83
 4401 0935 0E       		.uleb128 0xe
 4402 0936 6C050000 		.4byte	.LASF101
 4403 093a 01       		.byte	0x1
 4404 093b 670C     		.2byte	0xc67
 4405 093d 00000000 		.4byte	.LFB51
 4406 0941 38000000 		.4byte	.LFE51-.LFB51
 4407 0945 01       		.uleb128 0x1
 4408 0946 9C       		.byte	0x9c
 4409 0947 6A090000 		.4byte	0x96a
 4410 094b 13       		.uleb128 0x13
 4411 094c 50040000 		.4byte	.LASF102
 4412 0950 01       		.byte	0x1
 4413 0951 670C     		.2byte	0xc67
 4414 0953 83000000 		.4byte	0x83
 4415 0957 02       		.uleb128 0x2
 4416 0958 91       		.byte	0x91
 4417 0959 6C       		.sleb128 -20
 4418 095a 10       		.uleb128 0x10
 4419 095b 02030000 		.4byte	.LASF25
 4420 095f 01       		.byte	0x1
 4421 0960 690C     		.2byte	0xc69
 4422 0962 83000000 		.4byte	0x83
 4423 0966 02       		.uleb128 0x2
 4424 0967 91       		.byte	0x91
 4425 0968 74       		.sleb128 -12
 4426 0969 00       		.byte	0
 4427 096a 0E       		.uleb128 0xe
 4428 096b E3030000 		.4byte	.LASF103
 4429 096f 01       		.byte	0x1
 4430 0970 830C     		.2byte	0xc83
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 137


 4431 0972 00000000 		.4byte	.LFB52
 4432 0976 38000000 		.4byte	.LFE52-.LFB52
 4433 097a 01       		.uleb128 0x1
 4434 097b 9C       		.byte	0x9c
 4435 097c 9F090000 		.4byte	0x99f
 4436 0980 13       		.uleb128 0x13
 4437 0981 50040000 		.4byte	.LASF102
 4438 0985 01       		.byte	0x1
 4439 0986 830C     		.2byte	0xc83
 4440 0988 83000000 		.4byte	0x83
 4441 098c 02       		.uleb128 0x2
 4442 098d 91       		.byte	0x91
 4443 098e 6C       		.sleb128 -20
 4444 098f 10       		.uleb128 0x10
 4445 0990 02030000 		.4byte	.LASF25
 4446 0994 01       		.byte	0x1
 4447 0995 850C     		.2byte	0xc85
 4448 0997 83000000 		.4byte	0x83
 4449 099b 02       		.uleb128 0x2
 4450 099c 91       		.byte	0x91
 4451 099d 74       		.sleb128 -12
 4452 099e 00       		.byte	0
 4453 099f 0E       		.uleb128 0xe
 4454 09a0 02070000 		.4byte	.LASF104
 4455 09a4 01       		.byte	0x1
 4456 09a5 9F0C     		.2byte	0xc9f
 4457 09a7 00000000 		.4byte	.LFB53
 4458 09ab 38000000 		.4byte	.LFE53-.LFB53
 4459 09af 01       		.uleb128 0x1
 4460 09b0 9C       		.byte	0x9c
 4461 09b1 D4090000 		.4byte	0x9d4
 4462 09b5 13       		.uleb128 0x13
 4463 09b6 50040000 		.4byte	.LASF102
 4464 09ba 01       		.byte	0x1
 4465 09bb 9F0C     		.2byte	0xc9f
 4466 09bd 83000000 		.4byte	0x83
 4467 09c1 02       		.uleb128 0x2
 4468 09c2 91       		.byte	0x91
 4469 09c3 6C       		.sleb128 -20
 4470 09c4 10       		.uleb128 0x10
 4471 09c5 02030000 		.4byte	.LASF25
 4472 09c9 01       		.byte	0x1
 4473 09ca A10C     		.2byte	0xca1
 4474 09cc 83000000 		.4byte	0x83
 4475 09d0 02       		.uleb128 0x2
 4476 09d1 91       		.byte	0x91
 4477 09d2 74       		.sleb128 -12
 4478 09d3 00       		.byte	0
 4479 09d4 12       		.uleb128 0x12
 4480 09d5 71040000 		.4byte	.LASF105
 4481 09d9 01       		.byte	0x1
 4482 09da BD0C     		.2byte	0xcbd
 4483 09dc 00000000 		.4byte	.LFB54
 4484 09e0 A0000000 		.4byte	.LFE54-.LFB54
 4485 09e4 01       		.uleb128 0x1
 4486 09e5 9C       		.byte	0x9c
 4487 09e6 180A0000 		.4byte	0xa18
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 138


 4488 09ea 13       		.uleb128 0x13
 4489 09eb A4000000 		.4byte	.LASF106
 4490 09ef 01       		.byte	0x1
 4491 09f0 BD0C     		.2byte	0xcbd
 4492 09f2 83000000 		.4byte	0x83
 4493 09f6 02       		.uleb128 0x2
 4494 09f7 91       		.byte	0x91
 4495 09f8 6C       		.sleb128 -20
 4496 09f9 13       		.uleb128 0x13
 4497 09fa 50040000 		.4byte	.LASF102
 4498 09fe 01       		.byte	0x1
 4499 09ff BD0C     		.2byte	0xcbd
 4500 0a01 83000000 		.4byte	0x83
 4501 0a05 02       		.uleb128 0x2
 4502 0a06 91       		.byte	0x91
 4503 0a07 68       		.sleb128 -24
 4504 0a08 10       		.uleb128 0x10
 4505 0a09 02030000 		.4byte	.LASF25
 4506 0a0d 01       		.byte	0x1
 4507 0a0e BF0C     		.2byte	0xcbf
 4508 0a10 83000000 		.4byte	0x83
 4509 0a14 02       		.uleb128 0x2
 4510 0a15 91       		.byte	0x91
 4511 0a16 74       		.sleb128 -12
 4512 0a17 00       		.byte	0
 4513 0a18 15       		.uleb128 0x15
 4514 0a19 E7000000 		.4byte	0xe7
 4515 0a1d 280A0000 		.4byte	0xa28
 4516 0a21 16       		.uleb128 0x16
 4517 0a22 E0000000 		.4byte	0xe0
 4518 0a26 04       		.byte	0x4
 4519 0a27 00       		.byte	0
 4520 0a28 0D       		.uleb128 0xd
 4521 0a29 28060000 		.4byte	.LASF107
 4522 0a2d 01       		.byte	0x1
 4523 0a2e 22       		.byte	0x22
 4524 0a2f 180A0000 		.4byte	0xa18
 4525 0a33 05       		.uleb128 0x5
 4526 0a34 03       		.byte	0x3
 4527 0a35 00000000 		.4byte	CySysTickCallbacks
 4528 0a39 1B       		.uleb128 0x1b
 4529 0a3a F4040000 		.4byte	.LASF108
 4530 0a3e 01       		.byte	0x1
 4531 0a3f 1B       		.byte	0x1b
 4532 0a40 83000000 		.4byte	0x83
 4533 0a44 05       		.uleb128 0x5
 4534 0a45 03       		.byte	0x3
 4535 0a46 00000000 		.4byte	cydelayFreqHz
 4536 0a4a 1B       		.uleb128 0x1b
 4537 0a4b 84010000 		.4byte	.LASF109
 4538 0a4f 01       		.byte	0x1
 4539 0a50 1C       		.byte	0x1c
 4540 0a51 83000000 		.4byte	0x83
 4541 0a55 05       		.uleb128 0x5
 4542 0a56 03       		.byte	0x3
 4543 0a57 00000000 		.4byte	cydelayFreqKhz
 4544 0a5b 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 139


 4545 0a5c F3060000 		.4byte	.LASF110
 4546 0a60 01       		.byte	0x1
 4547 0a61 1D       		.byte	0x1d
 4548 0a62 6B000000 		.4byte	0x6b
 4549 0a66 05       		.uleb128 0x5
 4550 0a67 03       		.byte	0x3
 4551 0a68 00000000 		.4byte	cydelayFreqMhz
 4552 0a6c 1B       		.uleb128 0x1b
 4553 0a6d 0C020000 		.4byte	.LASF111
 4554 0a71 01       		.byte	0x1
 4555 0a72 1E       		.byte	0x1e
 4556 0a73 83000000 		.4byte	0x83
 4557 0a77 05       		.uleb128 0x5
 4558 0a78 03       		.byte	0x3
 4559 0a79 00000000 		.4byte	cydelay32kMs
 4560 0a7d 1B       		.uleb128 0x1b
 4561 0a7e 60040000 		.4byte	.LASF112
 4562 0a82 01       		.byte	0x1
 4563 0a83 36       		.byte	0x36
 4564 0a84 83000000 		.4byte	0x83
 4565 0a88 05       		.uleb128 0x5
 4566 0a89 03       		.byte	0x3
 4567 0a8a 00000000 		.4byte	CySysTickInitVar
 4568 0a8e 15       		.uleb128 0x15
 4569 0a8f 9E0A0000 		.4byte	0xa9e
 4570 0a93 9E0A0000 		.4byte	0xa9e
 4571 0a97 16       		.uleb128 0x16
 4572 0a98 E0000000 		.4byte	0xe0
 4573 0a9c 2D       		.byte	0x2d
 4574 0a9d 00       		.byte	0
 4575 0a9e 1C       		.uleb128 0x1c
 4576 0a9f 6B000000 		.4byte	0x6b
 4577 0aa3 1B       		.uleb128 0x1b
 4578 0aa4 D1040000 		.4byte	.LASF113
 4579 0aa8 01       		.byte	0x1
 4580 0aa9 3B       		.byte	0x3b
 4581 0aaa B40A0000 		.4byte	0xab4
 4582 0aae 05       		.uleb128 0x5
 4583 0aaf 03       		.byte	0x3
 4584 0ab0 00000000 		.4byte	cyImoFreqMhz2Reg
 4585 0ab4 1C       		.uleb128 0x1c
 4586 0ab5 8E0A0000 		.4byte	0xa8e
 4587 0ab9 1B       		.uleb128 0x1b
 4588 0aba 38000000 		.4byte	.LASF114
 4589 0abe 01       		.byte	0x1
 4590 0abf 51       		.byte	0x51
 4591 0ac0 83000000 		.4byte	0x83
 4592 0ac4 05       		.uleb128 0x5
 4593 0ac5 03       		.byte	0x3
 4594 0ac6 00000000 		.4byte	CySysClkPumpConfig
 4595 0aca 00       		.byte	0
 4596              		.section	.debug_abbrev,"",%progbits
 4597              	.Ldebug_abbrev0:
 4598 0000 01       		.uleb128 0x1
 4599 0001 11       		.uleb128 0x11
 4600 0002 01       		.byte	0x1
 4601 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 140


 4602 0004 0E       		.uleb128 0xe
 4603 0005 13       		.uleb128 0x13
 4604 0006 0B       		.uleb128 0xb
 4605 0007 03       		.uleb128 0x3
 4606 0008 0E       		.uleb128 0xe
 4607 0009 1B       		.uleb128 0x1b
 4608 000a 0E       		.uleb128 0xe
 4609 000b 55       		.uleb128 0x55
 4610 000c 17       		.uleb128 0x17
 4611 000d 11       		.uleb128 0x11
 4612 000e 01       		.uleb128 0x1
 4613 000f 10       		.uleb128 0x10
 4614 0010 17       		.uleb128 0x17
 4615 0011 00       		.byte	0
 4616 0012 00       		.byte	0
 4617 0013 02       		.uleb128 0x2
 4618 0014 24       		.uleb128 0x24
 4619 0015 00       		.byte	0
 4620 0016 0B       		.uleb128 0xb
 4621 0017 0B       		.uleb128 0xb
 4622 0018 3E       		.uleb128 0x3e
 4623 0019 0B       		.uleb128 0xb
 4624 001a 03       		.uleb128 0x3
 4625 001b 0E       		.uleb128 0xe
 4626 001c 00       		.byte	0
 4627 001d 00       		.byte	0
 4628 001e 03       		.uleb128 0x3
 4629 001f 24       		.uleb128 0x24
 4630 0020 00       		.byte	0
 4631 0021 0B       		.uleb128 0xb
 4632 0022 0B       		.uleb128 0xb
 4633 0023 3E       		.uleb128 0x3e
 4634 0024 0B       		.uleb128 0xb
 4635 0025 03       		.uleb128 0x3
 4636 0026 08       		.uleb128 0x8
 4637 0027 00       		.byte	0
 4638 0028 00       		.byte	0
 4639 0029 04       		.uleb128 0x4
 4640 002a 16       		.uleb128 0x16
 4641 002b 00       		.byte	0
 4642 002c 03       		.uleb128 0x3
 4643 002d 0E       		.uleb128 0xe
 4644 002e 3A       		.uleb128 0x3a
 4645 002f 0B       		.uleb128 0xb
 4646 0030 3B       		.uleb128 0x3b
 4647 0031 05       		.uleb128 0x5
 4648 0032 49       		.uleb128 0x49
 4649 0033 13       		.uleb128 0x13
 4650 0034 00       		.byte	0
 4651 0035 00       		.byte	0
 4652 0036 05       		.uleb128 0x5
 4653 0037 35       		.uleb128 0x35
 4654 0038 00       		.byte	0
 4655 0039 49       		.uleb128 0x49
 4656 003a 13       		.uleb128 0x13
 4657 003b 00       		.byte	0
 4658 003c 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 141


 4659 003d 06       		.uleb128 0x6
 4660 003e 0F       		.uleb128 0xf
 4661 003f 00       		.byte	0
 4662 0040 0B       		.uleb128 0xb
 4663 0041 0B       		.uleb128 0xb
 4664 0042 49       		.uleb128 0x49
 4665 0043 13       		.uleb128 0x13
 4666 0044 00       		.byte	0
 4667 0045 00       		.byte	0
 4668 0046 07       		.uleb128 0x7
 4669 0047 15       		.uleb128 0x15
 4670 0048 00       		.byte	0
 4671 0049 27       		.uleb128 0x27
 4672 004a 19       		.uleb128 0x19
 4673 004b 00       		.byte	0
 4674 004c 00       		.byte	0
 4675 004d 08       		.uleb128 0x8
 4676 004e 16       		.uleb128 0x16
 4677 004f 00       		.byte	0
 4678 0050 03       		.uleb128 0x3
 4679 0051 0E       		.uleb128 0xe
 4680 0052 3A       		.uleb128 0x3a
 4681 0053 0B       		.uleb128 0xb
 4682 0054 3B       		.uleb128 0x3b
 4683 0055 0B       		.uleb128 0xb
 4684 0056 49       		.uleb128 0x49
 4685 0057 13       		.uleb128 0x13
 4686 0058 00       		.byte	0
 4687 0059 00       		.byte	0
 4688 005a 09       		.uleb128 0x9
 4689 005b 2E       		.uleb128 0x2e
 4690 005c 00       		.byte	0
 4691 005d 3F       		.uleb128 0x3f
 4692 005e 19       		.uleb128 0x19
 4693 005f 03       		.uleb128 0x3
 4694 0060 0E       		.uleb128 0xe
 4695 0061 3A       		.uleb128 0x3a
 4696 0062 0B       		.uleb128 0xb
 4697 0063 3B       		.uleb128 0x3b
 4698 0064 0B       		.uleb128 0xb
 4699 0065 27       		.uleb128 0x27
 4700 0066 19       		.uleb128 0x19
 4701 0067 11       		.uleb128 0x11
 4702 0068 01       		.uleb128 0x1
 4703 0069 12       		.uleb128 0x12
 4704 006a 06       		.uleb128 0x6
 4705 006b 40       		.uleb128 0x40
 4706 006c 18       		.uleb128 0x18
 4707 006d 9742     		.uleb128 0x2117
 4708 006f 19       		.uleb128 0x19
 4709 0070 00       		.byte	0
 4710 0071 00       		.byte	0
 4711 0072 0A       		.uleb128 0xa
 4712 0073 2E       		.uleb128 0x2e
 4713 0074 00       		.byte	0
 4714 0075 3F       		.uleb128 0x3f
 4715 0076 19       		.uleb128 0x19
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 142


 4716 0077 03       		.uleb128 0x3
 4717 0078 0E       		.uleb128 0xe
 4718 0079 3A       		.uleb128 0x3a
 4719 007a 0B       		.uleb128 0xb
 4720 007b 3B       		.uleb128 0x3b
 4721 007c 0B       		.uleb128 0xb
 4722 007d 27       		.uleb128 0x27
 4723 007e 19       		.uleb128 0x19
 4724 007f 11       		.uleb128 0x11
 4725 0080 01       		.uleb128 0x1
 4726 0081 12       		.uleb128 0x12
 4727 0082 06       		.uleb128 0x6
 4728 0083 40       		.uleb128 0x40
 4729 0084 18       		.uleb128 0x18
 4730 0085 9642     		.uleb128 0x2116
 4731 0087 19       		.uleb128 0x19
 4732 0088 00       		.byte	0
 4733 0089 00       		.byte	0
 4734 008a 0B       		.uleb128 0xb
 4735 008b 2E       		.uleb128 0x2e
 4736 008c 01       		.byte	0x1
 4737 008d 3F       		.uleb128 0x3f
 4738 008e 19       		.uleb128 0x19
 4739 008f 03       		.uleb128 0x3
 4740 0090 0E       		.uleb128 0xe
 4741 0091 3A       		.uleb128 0x3a
 4742 0092 0B       		.uleb128 0xb
 4743 0093 3B       		.uleb128 0x3b
 4744 0094 0B       		.uleb128 0xb
 4745 0095 27       		.uleb128 0x27
 4746 0096 19       		.uleb128 0x19
 4747 0097 11       		.uleb128 0x11
 4748 0098 01       		.uleb128 0x1
 4749 0099 12       		.uleb128 0x12
 4750 009a 06       		.uleb128 0x6
 4751 009b 40       		.uleb128 0x40
 4752 009c 18       		.uleb128 0x18
 4753 009d 9642     		.uleb128 0x2116
 4754 009f 19       		.uleb128 0x19
 4755 00a0 01       		.uleb128 0x1
 4756 00a1 13       		.uleb128 0x13
 4757 00a2 00       		.byte	0
 4758 00a3 00       		.byte	0
 4759 00a4 0C       		.uleb128 0xc
 4760 00a5 34       		.uleb128 0x34
 4761 00a6 00       		.byte	0
 4762 00a7 03       		.uleb128 0x3
 4763 00a8 08       		.uleb128 0x8
 4764 00a9 3A       		.uleb128 0x3a
 4765 00aa 0B       		.uleb128 0xb
 4766 00ab 3B       		.uleb128 0x3b
 4767 00ac 0B       		.uleb128 0xb
 4768 00ad 49       		.uleb128 0x49
 4769 00ae 13       		.uleb128 0x13
 4770 00af 02       		.uleb128 0x2
 4771 00b0 18       		.uleb128 0x18
 4772 00b1 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 143


 4773 00b2 00       		.byte	0
 4774 00b3 0D       		.uleb128 0xd
 4775 00b4 34       		.uleb128 0x34
 4776 00b5 00       		.byte	0
 4777 00b6 03       		.uleb128 0x3
 4778 00b7 0E       		.uleb128 0xe
 4779 00b8 3A       		.uleb128 0x3a
 4780 00b9 0B       		.uleb128 0xb
 4781 00ba 3B       		.uleb128 0x3b
 4782 00bb 0B       		.uleb128 0xb
 4783 00bc 49       		.uleb128 0x49
 4784 00bd 13       		.uleb128 0x13
 4785 00be 02       		.uleb128 0x2
 4786 00bf 18       		.uleb128 0x18
 4787 00c0 00       		.byte	0
 4788 00c1 00       		.byte	0
 4789 00c2 0E       		.uleb128 0xe
 4790 00c3 2E       		.uleb128 0x2e
 4791 00c4 01       		.byte	0x1
 4792 00c5 3F       		.uleb128 0x3f
 4793 00c6 19       		.uleb128 0x19
 4794 00c7 03       		.uleb128 0x3
 4795 00c8 0E       		.uleb128 0xe
 4796 00c9 3A       		.uleb128 0x3a
 4797 00ca 0B       		.uleb128 0xb
 4798 00cb 3B       		.uleb128 0x3b
 4799 00cc 05       		.uleb128 0x5
 4800 00cd 27       		.uleb128 0x27
 4801 00ce 19       		.uleb128 0x19
 4802 00cf 11       		.uleb128 0x11
 4803 00d0 01       		.uleb128 0x1
 4804 00d1 12       		.uleb128 0x12
 4805 00d2 06       		.uleb128 0x6
 4806 00d3 40       		.uleb128 0x40
 4807 00d4 18       		.uleb128 0x18
 4808 00d5 9742     		.uleb128 0x2117
 4809 00d7 19       		.uleb128 0x19
 4810 00d8 01       		.uleb128 0x1
 4811 00d9 13       		.uleb128 0x13
 4812 00da 00       		.byte	0
 4813 00db 00       		.byte	0
 4814 00dc 0F       		.uleb128 0xf
 4815 00dd 34       		.uleb128 0x34
 4816 00de 00       		.byte	0
 4817 00df 03       		.uleb128 0x3
 4818 00e0 08       		.uleb128 0x8
 4819 00e1 3A       		.uleb128 0x3a
 4820 00e2 0B       		.uleb128 0xb
 4821 00e3 3B       		.uleb128 0x3b
 4822 00e4 05       		.uleb128 0x5
 4823 00e5 49       		.uleb128 0x49
 4824 00e6 13       		.uleb128 0x13
 4825 00e7 02       		.uleb128 0x2
 4826 00e8 18       		.uleb128 0x18
 4827 00e9 00       		.byte	0
 4828 00ea 00       		.byte	0
 4829 00eb 10       		.uleb128 0x10
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 144


 4830 00ec 34       		.uleb128 0x34
 4831 00ed 00       		.byte	0
 4832 00ee 03       		.uleb128 0x3
 4833 00ef 0E       		.uleb128 0xe
 4834 00f0 3A       		.uleb128 0x3a
 4835 00f1 0B       		.uleb128 0xb
 4836 00f2 3B       		.uleb128 0x3b
 4837 00f3 05       		.uleb128 0x5
 4838 00f4 49       		.uleb128 0x49
 4839 00f5 13       		.uleb128 0x13
 4840 00f6 02       		.uleb128 0x2
 4841 00f7 18       		.uleb128 0x18
 4842 00f8 00       		.byte	0
 4843 00f9 00       		.byte	0
 4844 00fa 11       		.uleb128 0x11
 4845 00fb 2E       		.uleb128 0x2e
 4846 00fc 00       		.byte	0
 4847 00fd 3F       		.uleb128 0x3f
 4848 00fe 19       		.uleb128 0x19
 4849 00ff 03       		.uleb128 0x3
 4850 0100 0E       		.uleb128 0xe
 4851 0101 3A       		.uleb128 0x3a
 4852 0102 0B       		.uleb128 0xb
 4853 0103 3B       		.uleb128 0x3b
 4854 0104 05       		.uleb128 0x5
 4855 0105 27       		.uleb128 0x27
 4856 0106 19       		.uleb128 0x19
 4857 0107 49       		.uleb128 0x49
 4858 0108 13       		.uleb128 0x13
 4859 0109 11       		.uleb128 0x11
 4860 010a 01       		.uleb128 0x1
 4861 010b 12       		.uleb128 0x12
 4862 010c 06       		.uleb128 0x6
 4863 010d 40       		.uleb128 0x40
 4864 010e 18       		.uleb128 0x18
 4865 010f 9742     		.uleb128 0x2117
 4866 0111 19       		.uleb128 0x19
 4867 0112 00       		.byte	0
 4868 0113 00       		.byte	0
 4869 0114 12       		.uleb128 0x12
 4870 0115 2E       		.uleb128 0x2e
 4871 0116 01       		.byte	0x1
 4872 0117 3F       		.uleb128 0x3f
 4873 0118 19       		.uleb128 0x19
 4874 0119 03       		.uleb128 0x3
 4875 011a 0E       		.uleb128 0xe
 4876 011b 3A       		.uleb128 0x3a
 4877 011c 0B       		.uleb128 0xb
 4878 011d 3B       		.uleb128 0x3b
 4879 011e 05       		.uleb128 0x5
 4880 011f 27       		.uleb128 0x27
 4881 0120 19       		.uleb128 0x19
 4882 0121 11       		.uleb128 0x11
 4883 0122 01       		.uleb128 0x1
 4884 0123 12       		.uleb128 0x12
 4885 0124 06       		.uleb128 0x6
 4886 0125 40       		.uleb128 0x40
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 145


 4887 0126 18       		.uleb128 0x18
 4888 0127 9642     		.uleb128 0x2116
 4889 0129 19       		.uleb128 0x19
 4890 012a 01       		.uleb128 0x1
 4891 012b 13       		.uleb128 0x13
 4892 012c 00       		.byte	0
 4893 012d 00       		.byte	0
 4894 012e 13       		.uleb128 0x13
 4895 012f 05       		.uleb128 0x5
 4896 0130 00       		.byte	0
 4897 0131 03       		.uleb128 0x3
 4898 0132 0E       		.uleb128 0xe
 4899 0133 3A       		.uleb128 0x3a
 4900 0134 0B       		.uleb128 0xb
 4901 0135 3B       		.uleb128 0x3b
 4902 0136 05       		.uleb128 0x5
 4903 0137 49       		.uleb128 0x49
 4904 0138 13       		.uleb128 0x13
 4905 0139 02       		.uleb128 0x2
 4906 013a 18       		.uleb128 0x18
 4907 013b 00       		.byte	0
 4908 013c 00       		.byte	0
 4909 013d 14       		.uleb128 0x14
 4910 013e 2E       		.uleb128 0x2e
 4911 013f 01       		.byte	0x1
 4912 0140 3F       		.uleb128 0x3f
 4913 0141 19       		.uleb128 0x19
 4914 0142 03       		.uleb128 0x3
 4915 0143 0E       		.uleb128 0xe
 4916 0144 3A       		.uleb128 0x3a
 4917 0145 0B       		.uleb128 0xb
 4918 0146 3B       		.uleb128 0x3b
 4919 0147 05       		.uleb128 0x5
 4920 0148 27       		.uleb128 0x27
 4921 0149 19       		.uleb128 0x19
 4922 014a 49       		.uleb128 0x49
 4923 014b 13       		.uleb128 0x13
 4924 014c 11       		.uleb128 0x11
 4925 014d 01       		.uleb128 0x1
 4926 014e 12       		.uleb128 0x12
 4927 014f 06       		.uleb128 0x6
 4928 0150 40       		.uleb128 0x40
 4929 0151 18       		.uleb128 0x18
 4930 0152 9642     		.uleb128 0x2116
 4931 0154 19       		.uleb128 0x19
 4932 0155 01       		.uleb128 0x1
 4933 0156 13       		.uleb128 0x13
 4934 0157 00       		.byte	0
 4935 0158 00       		.byte	0
 4936 0159 15       		.uleb128 0x15
 4937 015a 01       		.uleb128 0x1
 4938 015b 01       		.byte	0x1
 4939 015c 49       		.uleb128 0x49
 4940 015d 13       		.uleb128 0x13
 4941 015e 01       		.uleb128 0x1
 4942 015f 13       		.uleb128 0x13
 4943 0160 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 146


 4944 0161 00       		.byte	0
 4945 0162 16       		.uleb128 0x16
 4946 0163 21       		.uleb128 0x21
 4947 0164 00       		.byte	0
 4948 0165 49       		.uleb128 0x49
 4949 0166 13       		.uleb128 0x13
 4950 0167 2F       		.uleb128 0x2f
 4951 0168 0B       		.uleb128 0xb
 4952 0169 00       		.byte	0
 4953 016a 00       		.byte	0
 4954 016b 17       		.uleb128 0x17
 4955 016c 2E       		.uleb128 0x2e
 4956 016d 00       		.byte	0
 4957 016e 3F       		.uleb128 0x3f
 4958 016f 19       		.uleb128 0x19
 4959 0170 03       		.uleb128 0x3
 4960 0171 0E       		.uleb128 0xe
 4961 0172 3A       		.uleb128 0x3a
 4962 0173 0B       		.uleb128 0xb
 4963 0174 3B       		.uleb128 0x3b
 4964 0175 05       		.uleb128 0x5
 4965 0176 27       		.uleb128 0x27
 4966 0177 19       		.uleb128 0x19
 4967 0178 11       		.uleb128 0x11
 4968 0179 01       		.uleb128 0x1
 4969 017a 12       		.uleb128 0x12
 4970 017b 06       		.uleb128 0x6
 4971 017c 40       		.uleb128 0x40
 4972 017d 18       		.uleb128 0x18
 4973 017e 9742     		.uleb128 0x2117
 4974 0180 19       		.uleb128 0x19
 4975 0181 00       		.byte	0
 4976 0182 00       		.byte	0
 4977 0183 18       		.uleb128 0x18
 4978 0184 2E       		.uleb128 0x2e
 4979 0185 01       		.byte	0x1
 4980 0186 3F       		.uleb128 0x3f
 4981 0187 19       		.uleb128 0x19
 4982 0188 03       		.uleb128 0x3
 4983 0189 0E       		.uleb128 0xe
 4984 018a 3A       		.uleb128 0x3a
 4985 018b 0B       		.uleb128 0xb
 4986 018c 3B       		.uleb128 0x3b
 4987 018d 05       		.uleb128 0x5
 4988 018e 27       		.uleb128 0x27
 4989 018f 19       		.uleb128 0x19
 4990 0190 49       		.uleb128 0x49
 4991 0191 13       		.uleb128 0x13
 4992 0192 11       		.uleb128 0x11
 4993 0193 01       		.uleb128 0x1
 4994 0194 12       		.uleb128 0x12
 4995 0195 06       		.uleb128 0x6
 4996 0196 40       		.uleb128 0x40
 4997 0197 18       		.uleb128 0x18
 4998 0198 9742     		.uleb128 0x2117
 4999 019a 19       		.uleb128 0x19
 5000 019b 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 147


 5001 019c 13       		.uleb128 0x13
 5002 019d 00       		.byte	0
 5003 019e 00       		.byte	0
 5004 019f 19       		.uleb128 0x19
 5005 01a0 2E       		.uleb128 0x2e
 5006 01a1 00       		.byte	0
 5007 01a2 3F       		.uleb128 0x3f
 5008 01a3 19       		.uleb128 0x19
 5009 01a4 03       		.uleb128 0x3
 5010 01a5 0E       		.uleb128 0xe
 5011 01a6 3A       		.uleb128 0x3a
 5012 01a7 0B       		.uleb128 0xb
 5013 01a8 3B       		.uleb128 0x3b
 5014 01a9 05       		.uleb128 0x5
 5015 01aa 27       		.uleb128 0x27
 5016 01ab 19       		.uleb128 0x19
 5017 01ac 11       		.uleb128 0x11
 5018 01ad 01       		.uleb128 0x1
 5019 01ae 12       		.uleb128 0x12
 5020 01af 06       		.uleb128 0x6
 5021 01b0 40       		.uleb128 0x40
 5022 01b1 18       		.uleb128 0x18
 5023 01b2 9642     		.uleb128 0x2116
 5024 01b4 19       		.uleb128 0x19
 5025 01b5 00       		.byte	0
 5026 01b6 00       		.byte	0
 5027 01b7 1A       		.uleb128 0x1a
 5028 01b8 2E       		.uleb128 0x2e
 5029 01b9 01       		.byte	0x1
 5030 01ba 03       		.uleb128 0x3
 5031 01bb 0E       		.uleb128 0xe
 5032 01bc 3A       		.uleb128 0x3a
 5033 01bd 0B       		.uleb128 0xb
 5034 01be 3B       		.uleb128 0x3b
 5035 01bf 05       		.uleb128 0x5
 5036 01c0 27       		.uleb128 0x27
 5037 01c1 19       		.uleb128 0x19
 5038 01c2 11       		.uleb128 0x11
 5039 01c3 01       		.uleb128 0x1
 5040 01c4 12       		.uleb128 0x12
 5041 01c5 06       		.uleb128 0x6
 5042 01c6 40       		.uleb128 0x40
 5043 01c7 18       		.uleb128 0x18
 5044 01c8 9642     		.uleb128 0x2116
 5045 01ca 19       		.uleb128 0x19
 5046 01cb 01       		.uleb128 0x1
 5047 01cc 13       		.uleb128 0x13
 5048 01cd 00       		.byte	0
 5049 01ce 00       		.byte	0
 5050 01cf 1B       		.uleb128 0x1b
 5051 01d0 34       		.uleb128 0x34
 5052 01d1 00       		.byte	0
 5053 01d2 03       		.uleb128 0x3
 5054 01d3 0E       		.uleb128 0xe
 5055 01d4 3A       		.uleb128 0x3a
 5056 01d5 0B       		.uleb128 0xb
 5057 01d6 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 148


 5058 01d7 0B       		.uleb128 0xb
 5059 01d8 49       		.uleb128 0x49
 5060 01d9 13       		.uleb128 0x13
 5061 01da 3F       		.uleb128 0x3f
 5062 01db 19       		.uleb128 0x19
 5063 01dc 02       		.uleb128 0x2
 5064 01dd 18       		.uleb128 0x18
 5065 01de 00       		.byte	0
 5066 01df 00       		.byte	0
 5067 01e0 1C       		.uleb128 0x1c
 5068 01e1 26       		.uleb128 0x26
 5069 01e2 00       		.byte	0
 5070 01e3 49       		.uleb128 0x49
 5071 01e4 13       		.uleb128 0x13
 5072 01e5 00       		.byte	0
 5073 01e6 00       		.byte	0
 5074 01e7 00       		.byte	0
 5075              		.section	.debug_aranges,"",%progbits
 5076 0000 C4010000 		.4byte	0x1c4
 5077 0004 0200     		.2byte	0x2
 5078 0006 00000000 		.4byte	.Ldebug_info0
 5079 000a 04       		.byte	0x4
 5080 000b 00       		.byte	0
 5081 000c 0000     		.2byte	0
 5082 000e 0000     		.2byte	0
 5083 0010 00000000 		.4byte	.LFB1
 5084 0014 1C000000 		.4byte	.LFE1-.LFB1
 5085 0018 00000000 		.4byte	.LFB2
 5086 001c 20000000 		.4byte	.LFE2-.LFB2
 5087 0020 00000000 		.4byte	.LFB3
 5088 0024 44010000 		.4byte	.LFE3-.LFB3
 5089 0028 00000000 		.4byte	.LFB4
 5090 002c 78000000 		.4byte	.LFE4-.LFB4
 5091 0030 00000000 		.4byte	.LFB5
 5092 0034 20000000 		.4byte	.LFE5-.LFB5
 5093 0038 00000000 		.4byte	.LFB6
 5094 003c 48000000 		.4byte	.LFE6-.LFB6
 5095 0040 00000000 		.4byte	.LFB7
 5096 0044 50000000 		.4byte	.LFE7-.LFB7
 5097 0048 00000000 		.4byte	.LFB8
 5098 004c 34000000 		.4byte	.LFE8-.LFB8
 5099 0050 00000000 		.4byte	.LFB9
 5100 0054 48000000 		.4byte	.LFE9-.LFB9
 5101 0058 00000000 		.4byte	.LFB10
 5102 005c B8000000 		.4byte	.LFE10-.LFB10
 5103 0060 00000000 		.4byte	.LFB11
 5104 0064 64000000 		.4byte	.LFE11-.LFB11
 5105 0068 00000000 		.4byte	.LFB12
 5106 006c 2C000000 		.4byte	.LFE12-.LFB12
 5107 0070 00000000 		.4byte	.LFB13
 5108 0074 18000000 		.4byte	.LFE13-.LFB13
 5109 0078 00000000 		.4byte	.LFB14
 5110 007c 14000000 		.4byte	.LFE14-.LFB14
 5111 0080 00000000 		.4byte	.LFB15
 5112 0084 30000000 		.4byte	.LFE15-.LFB15
 5113 0088 00000000 		.4byte	.LFB16
 5114 008c 24000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 149


 5115 0090 00000000 		.4byte	.LFB17
 5116 0094 1C000000 		.4byte	.LFE17-.LFB17
 5117 0098 00000000 		.4byte	.LFB18
 5118 009c 48000000 		.4byte	.LFE18-.LFB18
 5119 00a0 00000000 		.4byte	.LFB19
 5120 00a4 34000000 		.4byte	.LFE19-.LFB19
 5121 00a8 00000000 		.4byte	.LFB20
 5122 00ac 4C000000 		.4byte	.LFE20-.LFB20
 5123 00b0 00000000 		.4byte	.LFB21
 5124 00b4 36000000 		.4byte	.LFE21-.LFB21
 5125 00b8 00000000 		.4byte	.LFB22
 5126 00bc A8000000 		.4byte	.LFE22-.LFB22
 5127 00c0 00000000 		.4byte	.LFB23
 5128 00c4 58000000 		.4byte	.LFE23-.LFB23
 5129 00c8 00000000 		.4byte	.LFB24
 5130 00cc 2C000000 		.4byte	.LFE24-.LFB24
 5131 00d0 00000000 		.4byte	.LFB25
 5132 00d4 30000000 		.4byte	.LFE25-.LFB25
 5133 00d8 00000000 		.4byte	.LFB26
 5134 00dc 2C000000 		.4byte	.LFE26-.LFB26
 5135 00e0 00000000 		.4byte	.LFB27
 5136 00e4 2C000000 		.4byte	.LFE27-.LFB27
 5137 00e8 00000000 		.4byte	.LFB28
 5138 00ec 2C000000 		.4byte	.LFE28-.LFB28
 5139 00f0 00000000 		.4byte	.LFB29
 5140 00f4 16000000 		.4byte	.LFE29-.LFB29
 5141 00f8 00000000 		.4byte	.LFB30
 5142 00fc 24000000 		.4byte	.LFE30-.LFB30
 5143 0100 00000000 		.4byte	.LFB31
 5144 0104 4C000000 		.4byte	.LFE31-.LFB31
 5145 0108 00000000 		.4byte	.LFB32
 5146 010c 28000000 		.4byte	.LFE32-.LFB32
 5147 0110 00000000 		.4byte	.LFB33
 5148 0114 84000000 		.4byte	.LFE33-.LFB33
 5149 0118 00000000 		.4byte	.LFB34
 5150 011c 24000000 		.4byte	.LFE34-.LFB34
 5151 0120 00000000 		.4byte	.LFB35
 5152 0124 60000000 		.4byte	.LFE35-.LFB35
 5153 0128 00000000 		.4byte	.LFB36
 5154 012c 20000000 		.4byte	.LFE36-.LFB36
 5155 0130 00000000 		.4byte	.LFB37
 5156 0134 1C000000 		.4byte	.LFE37-.LFB37
 5157 0138 00000000 		.4byte	.LFB38
 5158 013c 1C000000 		.4byte	.LFE38-.LFB38
 5159 0140 00000000 		.4byte	.LFB39
 5160 0144 1C000000 		.4byte	.LFE39-.LFB39
 5161 0148 00000000 		.4byte	.LFB40
 5162 014c 20000000 		.4byte	.LFE40-.LFB40
 5163 0150 00000000 		.4byte	.LFB41
 5164 0154 18000000 		.4byte	.LFE41-.LFB41
 5165 0158 00000000 		.4byte	.LFB42
 5166 015c 18000000 		.4byte	.LFE42-.LFB42
 5167 0160 00000000 		.4byte	.LFB43
 5168 0164 34000000 		.4byte	.LFE43-.LFB43
 5169 0168 00000000 		.4byte	.LFB44
 5170 016c 18000000 		.4byte	.LFE44-.LFB44
 5171 0170 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 150


 5172 0174 18000000 		.4byte	.LFE45-.LFB45
 5173 0178 00000000 		.4byte	.LFB46
 5174 017c 14000000 		.4byte	.LFE46-.LFB46
 5175 0180 00000000 		.4byte	.LFB47
 5176 0184 2C000000 		.4byte	.LFE47-.LFB47
 5177 0188 00000000 		.4byte	.LFB48
 5178 018c 1C000000 		.4byte	.LFE48-.LFB48
 5179 0190 00000000 		.4byte	.LFB49
 5180 0194 44000000 		.4byte	.LFE49-.LFB49
 5181 0198 00000000 		.4byte	.LFB50
 5182 019c C0000000 		.4byte	.LFE50-.LFB50
 5183 01a0 00000000 		.4byte	.LFB51
 5184 01a4 38000000 		.4byte	.LFE51-.LFB51
 5185 01a8 00000000 		.4byte	.LFB52
 5186 01ac 38000000 		.4byte	.LFE52-.LFB52
 5187 01b0 00000000 		.4byte	.LFB53
 5188 01b4 38000000 		.4byte	.LFE53-.LFB53
 5189 01b8 00000000 		.4byte	.LFB54
 5190 01bc A0000000 		.4byte	.LFE54-.LFB54
 5191 01c0 00000000 		.4byte	0
 5192 01c4 00000000 		.4byte	0
 5193              		.section	.debug_ranges,"",%progbits
 5194              	.Ldebug_ranges0:
 5195 0000 00000000 		.4byte	.LFB1
 5196 0004 1C000000 		.4byte	.LFE1
 5197 0008 00000000 		.4byte	.LFB2
 5198 000c 20000000 		.4byte	.LFE2
 5199 0010 00000000 		.4byte	.LFB3
 5200 0014 44010000 		.4byte	.LFE3
 5201 0018 00000000 		.4byte	.LFB4
 5202 001c 78000000 		.4byte	.LFE4
 5203 0020 00000000 		.4byte	.LFB5
 5204 0024 20000000 		.4byte	.LFE5
 5205 0028 00000000 		.4byte	.LFB6
 5206 002c 48000000 		.4byte	.LFE6
 5207 0030 00000000 		.4byte	.LFB7
 5208 0034 50000000 		.4byte	.LFE7
 5209 0038 00000000 		.4byte	.LFB8
 5210 003c 34000000 		.4byte	.LFE8
 5211 0040 00000000 		.4byte	.LFB9
 5212 0044 48000000 		.4byte	.LFE9
 5213 0048 00000000 		.4byte	.LFB10
 5214 004c B8000000 		.4byte	.LFE10
 5215 0050 00000000 		.4byte	.LFB11
 5216 0054 64000000 		.4byte	.LFE11
 5217 0058 00000000 		.4byte	.LFB12
 5218 005c 2C000000 		.4byte	.LFE12
 5219 0060 00000000 		.4byte	.LFB13
 5220 0064 18000000 		.4byte	.LFE13
 5221 0068 00000000 		.4byte	.LFB14
 5222 006c 14000000 		.4byte	.LFE14
 5223 0070 00000000 		.4byte	.LFB15
 5224 0074 30000000 		.4byte	.LFE15
 5225 0078 00000000 		.4byte	.LFB16
 5226 007c 24000000 		.4byte	.LFE16
 5227 0080 00000000 		.4byte	.LFB17
 5228 0084 1C000000 		.4byte	.LFE17
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 151


 5229 0088 00000000 		.4byte	.LFB18
 5230 008c 48000000 		.4byte	.LFE18
 5231 0090 00000000 		.4byte	.LFB19
 5232 0094 34000000 		.4byte	.LFE19
 5233 0098 00000000 		.4byte	.LFB20
 5234 009c 4C000000 		.4byte	.LFE20
 5235 00a0 00000000 		.4byte	.LFB21
 5236 00a4 36000000 		.4byte	.LFE21
 5237 00a8 00000000 		.4byte	.LFB22
 5238 00ac A8000000 		.4byte	.LFE22
 5239 00b0 00000000 		.4byte	.LFB23
 5240 00b4 58000000 		.4byte	.LFE23
 5241 00b8 00000000 		.4byte	.LFB24
 5242 00bc 2C000000 		.4byte	.LFE24
 5243 00c0 00000000 		.4byte	.LFB25
 5244 00c4 30000000 		.4byte	.LFE25
 5245 00c8 00000000 		.4byte	.LFB26
 5246 00cc 2C000000 		.4byte	.LFE26
 5247 00d0 00000000 		.4byte	.LFB27
 5248 00d4 2C000000 		.4byte	.LFE27
 5249 00d8 00000000 		.4byte	.LFB28
 5250 00dc 2C000000 		.4byte	.LFE28
 5251 00e0 00000000 		.4byte	.LFB29
 5252 00e4 16000000 		.4byte	.LFE29
 5253 00e8 00000000 		.4byte	.LFB30
 5254 00ec 24000000 		.4byte	.LFE30
 5255 00f0 00000000 		.4byte	.LFB31
 5256 00f4 4C000000 		.4byte	.LFE31
 5257 00f8 00000000 		.4byte	.LFB32
 5258 00fc 28000000 		.4byte	.LFE32
 5259 0100 00000000 		.4byte	.LFB33
 5260 0104 84000000 		.4byte	.LFE33
 5261 0108 00000000 		.4byte	.LFB34
 5262 010c 24000000 		.4byte	.LFE34
 5263 0110 00000000 		.4byte	.LFB35
 5264 0114 60000000 		.4byte	.LFE35
 5265 0118 00000000 		.4byte	.LFB36
 5266 011c 20000000 		.4byte	.LFE36
 5267 0120 00000000 		.4byte	.LFB37
 5268 0124 1C000000 		.4byte	.LFE37
 5269 0128 00000000 		.4byte	.LFB38
 5270 012c 1C000000 		.4byte	.LFE38
 5271 0130 00000000 		.4byte	.LFB39
 5272 0134 1C000000 		.4byte	.LFE39
 5273 0138 00000000 		.4byte	.LFB40
 5274 013c 20000000 		.4byte	.LFE40
 5275 0140 00000000 		.4byte	.LFB41
 5276 0144 18000000 		.4byte	.LFE41
 5277 0148 00000000 		.4byte	.LFB42
 5278 014c 18000000 		.4byte	.LFE42
 5279 0150 00000000 		.4byte	.LFB43
 5280 0154 34000000 		.4byte	.LFE43
 5281 0158 00000000 		.4byte	.LFB44
 5282 015c 18000000 		.4byte	.LFE44
 5283 0160 00000000 		.4byte	.LFB45
 5284 0164 18000000 		.4byte	.LFE45
 5285 0168 00000000 		.4byte	.LFB46
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 152


 5286 016c 14000000 		.4byte	.LFE46
 5287 0170 00000000 		.4byte	.LFB47
 5288 0174 2C000000 		.4byte	.LFE47
 5289 0178 00000000 		.4byte	.LFB48
 5290 017c 1C000000 		.4byte	.LFE48
 5291 0180 00000000 		.4byte	.LFB49
 5292 0184 44000000 		.4byte	.LFE49
 5293 0188 00000000 		.4byte	.LFB50
 5294 018c C0000000 		.4byte	.LFE50
 5295 0190 00000000 		.4byte	.LFB51
 5296 0194 38000000 		.4byte	.LFE51
 5297 0198 00000000 		.4byte	.LFB52
 5298 019c 38000000 		.4byte	.LFE52
 5299 01a0 00000000 		.4byte	.LFB53
 5300 01a4 38000000 		.4byte	.LFE53
 5301 01a8 00000000 		.4byte	.LFB54
 5302 01ac A0000000 		.4byte	.LFE54
 5303 01b0 00000000 		.4byte	0
 5304 01b4 00000000 		.4byte	0
 5305              		.section	.debug_line,"",%progbits
 5306              	.Ldebug_line0:
 5307 0000 6E050000 		.section	.debug_str,"MS",%progbits,1
 5307      02004D00 
 5307      00000201 
 5307      FB0E0D00 
 5307      01010101 
 5308              	.LASF60:
 5309 0000 72616D56 		.ascii	"ramVectorTable\000"
 5309      6563746F 
 5309      72546162 
 5309      6C6500
 5310              	.LASF10:
 5311 000f 75696E74 		.ascii	"uint16\000"
 5311      313600
 5312              	.LASF53:
 5313 0016 696E7453 		.ascii	"intState\000"
 5313      74617465 
 5313      00
 5314              	.LASF30:
 5315 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5315      73436C6B 
 5315      57726974 
 5315      65486663 
 5315      6C6B4469 
 5316              	.LASF114:
 5317 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 5317      73436C6B 
 5317      50756D70 
 5317      436F6E66 
 5317      696700
 5318              	.LASF32:
 5319 004b 43795379 		.ascii	"CySysEnablePumpClock\000"
 5319      73456E61 
 5319      626C6550 
 5319      756D7043 
 5319      6C6F636B 
 5320              	.LASF97:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 153


 5321 0060 72657456 		.ascii	"retVal\000"
 5321      616C00
 5322              	.LASF52:
 5323 0067 43794469 		.ascii	"CyDisableInts\000"
 5323      7361626C 
 5323      65496E74 
 5323      7300
 5324              	.LASF7:
 5325 0075 6C6F6E67 		.ascii	"long long unsigned int\000"
 5325      206C6F6E 
 5325      6720756E 
 5325      7369676E 
 5325      65642069 
 5326              	.LASF39:
 5327 008c 70617261 		.ascii	"parameters\000"
 5327      6D657465 
 5327      727300
 5328              	.LASF54:
 5329 0097 4379456E 		.ascii	"CyEnableInts\000"
 5329      61626C65 
 5329      496E7473 
 5329      00
 5330              	.LASF106:
 5331 00a4 696E7465 		.ascii	"interfaceNumber\000"
 5331      72666163 
 5331      654E756D 
 5331      62657200 
 5332              	.LASF75:
 5333 00b4 4379536F 		.ascii	"CySoftwareReset\000"
 5333      66747761 
 5333      72655265 
 5333      73657400 
 5334              	.LASF85:
 5335 00c4 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5335      73546963 
 5335      6B456E61 
 5335      626C6549 
 5335      6E746572 
 5336              	.LASF70:
 5337 00dd 4379496E 		.ascii	"CyIntGetState\000"
 5337      74476574 
 5337      53746174 
 5337      6500
 5338              	.LASF6:
 5339 00eb 6C6F6E67 		.ascii	"long long int\000"
 5339      206C6F6E 
 5339      6720696E 
 5339      7400
 5340              	.LASF0:
 5341 00f9 7369676E 		.ascii	"signed char\000"
 5341      65642063 
 5341      68617200 
 5342              	.LASF23:
 5343 0105 66726571 		.ascii	"freq\000"
 5343      00
 5344              	.LASF80:
 5345 010a 43794465 		.ascii	"CyDelayFreq\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 154


 5345      6C617946 
 5345      72657100 
 5346              	.LASF24:
 5347 0116 696E7465 		.ascii	"interruptState\000"
 5347      72727570 
 5347      74537461 
 5347      746500
 5348              	.LASF26:
 5349 0125 6C664C69 		.ascii	"lfLimit\000"
 5349      6D697400 
 5350              	.LASF88:
 5351 012d 43795379 		.ascii	"CySysTickGetReload\000"
 5351      73546963 
 5351      6B476574 
 5351      52656C6F 
 5351      616400
 5352              	.LASF45:
 5353 0140 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5353      73436C6B 
 5353      496D6F47 
 5353      65745763 
 5353      6F4C6F63 
 5354              	.LASF41:
 5355 0156 77636F4C 		.ascii	"wcoLock\000"
 5355      6F636B00 
 5356              	.LASF4:
 5357 015e 6C6F6E67 		.ascii	"long int\000"
 5357      20696E74 
 5357      00
 5358              	.LASF71:
 5359 0167 4379496E 		.ascii	"CyIntDisable\000"
 5359      74446973 
 5359      61626C65 
 5359      00
 5360              	.LASF40:
 5361 0174 72656756 		.ascii	"regValues\000"
 5361      616C7565 
 5361      7300
 5362              	.LASF9:
 5363 017e 75696E74 		.ascii	"uint8\000"
 5363      3800
 5364              	.LASF109:
 5365 0184 63796465 		.ascii	"cydelayFreqKhz\000"
 5365      6C617946 
 5365      7265714B 
 5365      687A00
 5366              	.LASF34:
 5367 0193 656E6162 		.ascii	"enable\000"
 5367      6C6500
 5368              	.LASF13:
 5369 019a 646F7562 		.ascii	"double\000"
 5369      6C6500
 5370              	.LASF66:
 5371 01a1 73686966 		.ascii	"shift\000"
 5371      7400
 5372              	.LASF47:
 5373 01a7 43795379 		.ascii	"CySysLvdClearInterrupt\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 155


 5373      734C7664 
 5373      436C6561 
 5373      72496E74 
 5373      65727275 
 5374              	.LASF11:
 5375 01be 75696E74 		.ascii	"uint32\000"
 5375      333200
 5376              	.LASF55:
 5377 01c5 6D61736B 		.ascii	"mask\000"
 5377      00
 5378              	.LASF48:
 5379 01ca 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5379      73436C6B 
 5379      47657453 
 5379      7973636C 
 5379      6B536F75 
 5380              	.LASF28:
 5381 01e2 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5381      73436C6B 
 5381      496D6F45 
 5381      6E61626C 
 5381      6557636F 
 5382              	.LASF68:
 5383 01fb 4379496E 		.ascii	"CyIntGetPriority\000"
 5383      74476574 
 5383      5072696F 
 5383      72697479 
 5383      00
 5384              	.LASF111:
 5385 020c 63796465 		.ascii	"cydelay32kMs\000"
 5385      6C617933 
 5385      326B4D73 
 5385      00
 5386              	.LASF82:
 5387 0219 43795379 		.ascii	"CySysTickInit\000"
 5387      73546963 
 5387      6B496E69 
 5387      7400
 5388              	.LASF67:
 5389 0227 76616C75 		.ascii	"value\000"
 5389      6500
 5390              	.LASF91:
 5391 022d 636C6F63 		.ascii	"clockSource\000"
 5391      6B536F75 
 5391      72636500 
 5392              	.LASF99:
 5393 0239 43794765 		.ascii	"CyGetUniqueId\000"
 5393      74556E69 
 5393      71756549 
 5393      6400
 5394              	.LASF93:
 5395 0247 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5395      73546963 
 5395      6B476574 
 5395      436F756E 
 5395      74466C61 
 5396              	.LASF8:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 156


 5397 025d 756E7369 		.ascii	"unsigned int\000"
 5397      676E6564 
 5397      20696E74 
 5397      00
 5398              	.LASF94:
 5399 026a 43795379 		.ascii	"CySysTickClear\000"
 5399      73546963 
 5399      6B436C65 
 5399      617200
 5400              	.LASF5:
 5401 0279 6C6F6E67 		.ascii	"long unsigned int\000"
 5401      20756E73 
 5401      69676E65 
 5401      6420696E 
 5401      7400
 5402              	.LASF46:
 5403 028b 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5403      734C7664 
 5403      47657449 
 5403      6E746572 
 5403      72757074 
 5404              	.LASF22:
 5405 02a6 43795379 		.ascii	"CySysClkImoStop\000"
 5405      73436C6B 
 5405      496D6F53 
 5405      746F7000 
 5406              	.LASF72:
 5407 02b6 4379496E 		.ascii	"CyIntSetPending\000"
 5407      74536574 
 5407      50656E64 
 5407      696E6700 
 5408              	.LASF98:
 5409 02c6 43795379 		.ascii	"CySysTickGetCallback\000"
 5409      73546963 
 5409      6B476574 
 5409      43616C6C 
 5409      6261636B 
 5410              	.LASF49:
 5411 02db 43795379 		.ascii	"CySysGetResetReason\000"
 5411      73476574 
 5411      52657365 
 5411      74526561 
 5411      736F6E00 
 5412              	.LASF3:
 5413 02ef 73686F72 		.ascii	"short unsigned int\000"
 5413      7420756E 
 5413      7369676E 
 5413      65642069 
 5413      6E7400
 5414              	.LASF25:
 5415 0302 72656754 		.ascii	"regTmp\000"
 5415      6D7000
 5416              	.LASF90:
 5417 0309 43795379 		.ascii	"CySysTickSetClockSource\000"
 5417      73546963 
 5417      6B536574 
 5417      436C6F63 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 157


 5417      6B536F75 
 5418              	.LASF62:
 5419 0321 4379496E 		.ascii	"CyIntSetVector\000"
 5419      74536574 
 5419      56656374 
 5419      6F7200
 5420              	.LASF57:
 5421 0330 6E756D62 		.ascii	"number\000"
 5421      657200
 5422              	.LASF65:
 5423 0337 7072696F 		.ascii	"priority\000"
 5423      72697479 
 5423      00
 5424              	.LASF38:
 5425 0340 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5425      73436C6B 
 5425      57726974 
 5425      65496D6F 
 5425      46726571 
 5426              	.LASF115:
 5427 0355 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5427      43313120 
 5427      352E342E 
 5427      31203230 
 5427      31363036 
 5428 0388 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5428      20726576 
 5428      6973696F 
 5428      6E203233 
 5428      37373135 
 5429 03bb 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5429      66756E63 
 5429      74696F6E 
 5429      2D736563 
 5429      74696F6E 
 5430              	.LASF103:
 5431 03e3 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5431      73536574 
 5431      466C6173 
 5431      68416363 
 5431      65737341 
 5432              	.LASF56:
 5433 0402 4379496E 		.ascii	"CyIntSetSysVector\000"
 5433      74536574 
 5433      53797356 
 5433      6563746F 
 5433      7200
 5434              	.LASF29:
 5435 0414 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5435      73436C6B 
 5435      496D6F44 
 5435      69736162 
 5435      6C655763 
 5436              	.LASF16:
 5437 042e 72656733 		.ascii	"reg32\000"
 5437      3200
 5438              	.LASF81:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 158


 5439 0434 43795379 		.ascii	"CySysTickStart\000"
 5439      73546963 
 5439      6B537461 
 5439      727400
 5440              	.LASF51:
 5441 0443 72657475 		.ascii	"returnStatus\000"
 5441      726E5374 
 5441      61747573 
 5441      00
 5442              	.LASF102:
 5443 0450 736F7572 		.ascii	"source\000"
 5443      636500
 5444              	.LASF19:
 5445 0457 73697A65 		.ascii	"sizetype\000"
 5445      74797065 
 5445      00
 5446              	.LASF112:
 5447 0460 43795379 		.ascii	"CySysTickInitVar\000"
 5447      73546963 
 5447      6B496E69 
 5447      74566172 
 5447      00
 5448              	.LASF105:
 5449 0471 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5449      73536574 
 5449      50657269 
 5449      70686572 
 5449      616C4163 
 5450              	.LASF73:
 5451 0495 4379496E 		.ascii	"CyIntClearPending\000"
 5451      74436C65 
 5451      61725065 
 5451      6E64696E 
 5451      6700
 5452              	.LASF18:
 5453 04a7 6C6F6E67 		.ascii	"long double\000"
 5453      20646F75 
 5453      626C6500 
 5454              	.LASF58:
 5455 04b3 61646472 		.ascii	"address\000"
 5455      65737300 
 5456              	.LASF35:
 5457 04bb 73797363 		.ascii	"sysclkSource\000"
 5457      6C6B536F 
 5457      75726365 
 5457      00
 5458              	.LASF96:
 5459 04c8 66756E63 		.ascii	"function\000"
 5459      74696F6E 
 5459      00
 5460              	.LASF113:
 5461 04d1 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5461      6F467265 
 5461      714D687A 
 5461      32526567 
 5461      00
 5462              	.LASF89:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 159


 5463 04e2 43795379 		.ascii	"CySysTickGetValue\000"
 5463      73546963 
 5463      6B476574 
 5463      56616C75 
 5463      6500
 5464              	.LASF108:
 5465 04f4 63796465 		.ascii	"cydelayFreqHz\000"
 5465      6C617946 
 5465      72657148 
 5465      7A00
 5466              	.LASF64:
 5467 0502 4379496E 		.ascii	"CyIntSetPriority\000"
 5467      74536574 
 5467      5072696F 
 5467      72697479 
 5467      00
 5468              	.LASF12:
 5469 0513 666C6F61 		.ascii	"float\000"
 5469      7400
 5470              	.LASF42:
 5471 0519 43795379 		.ascii	"CySysLvdEnable\000"
 5471      734C7664 
 5471      456E6162 
 5471      6C6500
 5472              	.LASF20:
 5473 0528 63795379 		.ascii	"cySysTickCallback\000"
 5473      73546963 
 5473      6B43616C 
 5473      6C626163 
 5473      6B00
 5474              	.LASF63:
 5475 053a 4379496E 		.ascii	"CyIntGetVector\000"
 5475      74476574 
 5475      56656374 
 5475      6F7200
 5476              	.LASF77:
 5477 0549 6D696C6C 		.ascii	"milliseconds\000"
 5477      69736563 
 5477      6F6E6473 
 5477      00
 5478              	.LASF15:
 5479 0556 72656738 		.ascii	"reg8\000"
 5479      00
 5480              	.LASF43:
 5481 055b 74687265 		.ascii	"threshold\000"
 5481      73686F6C 
 5481      6400
 5482              	.LASF74:
 5483 0565 43794861 		.ascii	"CyHalt\000"
 5483      6C7400
 5484              	.LASF101:
 5485 056c 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5485      73536574 
 5485      52616D41 
 5485      63636573 
 5485      73417262 
 5486              	.LASF1:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 160


 5487 0589 756E7369 		.ascii	"unsigned char\000"
 5487      676E6564 
 5487      20636861 
 5487      7200
 5488              	.LASF2:
 5489 0597 73686F72 		.ascii	"short int\000"
 5489      7420696E 
 5489      7400
 5490              	.LASF69:
 5491 05a1 4379496E 		.ascii	"CyIntEnable\000"
 5491      74456E61 
 5491      626C6500 
 5492              	.LASF61:
 5493 05ad 4379496E 		.ascii	"CyIntGetSysVector\000"
 5493      74476574 
 5493      53797356 
 5493      6563746F 
 5493      7200
 5494              	.LASF33:
 5495 05bf 636C6B53 		.ascii	"clkSelect\000"
 5495      656C6563 
 5495      7400
 5496              	.LASF78:
 5497 05c9 43794465 		.ascii	"CyDelayUs\000"
 5497      6C617955 
 5497      7300
 5498              	.LASF50:
 5499 05d3 72656173 		.ascii	"reason\000"
 5499      6F6E00
 5500              	.LASF14:
 5501 05da 63686172 		.ascii	"char\000"
 5501      00
 5502              	.LASF17:
 5503 05df 63796973 		.ascii	"cyisraddress\000"
 5503      72616464 
 5503      72657373 
 5503      00
 5504              	.LASF83:
 5505 05ec 43795379 		.ascii	"CySysTickEnable\000"
 5505      73546963 
 5505      6B456E61 
 5505      626C6500 
 5506              	.LASF36:
 5507 05fc 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5507      73436C6B 
 5507      57726974 
 5507      65537973 
 5507      636C6B44 
 5508              	.LASF95:
 5509 0613 43795379 		.ascii	"CySysTickSetCallback\000"
 5509      73546963 
 5509      6B536574 
 5509      43616C6C 
 5509      6261636B 
 5510              	.LASF107:
 5511 0628 43795379 		.ascii	"CySysTickCallbacks\000"
 5511      73546963 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 161


 5511      6B43616C 
 5511      6C626163 
 5511      6B7300
 5512              	.LASF117:
 5513 063b 443A5C43 		.ascii	"D:\\CYTEST\\Micrium_CY8CKIT-044_OS3\\Examples\\Cypr"
 5513      59544553 
 5513      545C4D69 
 5513      63726975 
 5513      6D5F4359 
 5514 066a 6573735C 		.ascii	"ess\\CY8CKIT-044\\OS3\\PSoC\\OS3.cydsn\000"
 5514      43593843 
 5514      4B49542D 
 5514      3034345C 
 5514      4F53335C 
 5515              	.LASF100:
 5516 068d 756E6971 		.ascii	"uniqueId\000"
 5516      75654964 
 5516      00
 5517              	.LASF27:
 5518 0696 666C6173 		.ascii	"flashCtlReg\000"
 5518      6843746C 
 5518      52656700 
 5519              	.LASF76:
 5520 06a2 43794465 		.ascii	"CyDelay\000"
 5520      6C617900 
 5521              	.LASF92:
 5522 06aa 43795379 		.ascii	"CySysTickGetClockSource\000"
 5522      73546963 
 5522      6B476574 
 5522      436C6F63 
 5522      6B536F75 
 5523              	.LASF86:
 5524 06c2 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5524      73546963 
 5524      6B446973 
 5524      61626C65 
 5524      496E7465 
 5525              	.LASF44:
 5526 06dc 43795379 		.ascii	"CySysLvdDisable\000"
 5526      734C7664 
 5526      44697361 
 5526      626C6500 
 5527              	.LASF59:
 5528 06ec 6F6C6449 		.ascii	"oldIsr\000"
 5528      737200
 5529              	.LASF110:
 5530 06f3 63796465 		.ascii	"cydelayFreqMhz\000"
 5530      6C617946 
 5530      7265714D 
 5530      687A00
 5531              	.LASF104:
 5532 0702 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5532      73536574 
 5532      446D6163 
 5532      41636365 
 5532      73734172 
 5533              	.LASF84:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cccUozIC.s 			page 162


 5534 0720 43795379 		.ascii	"CySysTickStop\000"
 5534      73546963 
 5534      6B53746F 
 5534      7000
 5535              	.LASF37:
 5536 072e 64697669 		.ascii	"divider\000"
 5536      64657200 
 5537              	.LASF21:
 5538 0736 43795379 		.ascii	"CySysClkImoStart\000"
 5538      73436C6B 
 5538      496D6F53 
 5538      74617274 
 5538      00
 5539              	.LASF116:
 5540 0747 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5540      72617465 
 5540      645F536F 
 5540      75726365 
 5540      5C50536F 
 5541              	.LASF79:
 5542 0766 6D696372 		.ascii	"microseconds\000"
 5542      6F736563 
 5542      6F6E6473 
 5542      00
 5543              	.LASF31:
 5544 0773 746D7052 		.ascii	"tmpReg\000"
 5544      656700
 5545              	.LASF87:
 5546 077a 43795379 		.ascii	"CySysTickSetReload\000"
 5546      73546963 
 5546      6B536574 
 5546      52656C6F 
 5546      616400
 5547              	.LASF118:
 5548 078d 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5548      73546963 
 5548      6B536572 
 5548      76696365 
 5548      43616C6C 
 5549              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
