ARM GAS  ..\..\..\..\..\..\Software\uC-CPU\ARM-Cortex-M0\GNU\cpu_a.s 			page 1


   1              	@**************************************************************************************************
   2              	@                                                uC/CPU
   3              	@                                    CPU CONFIGURATION & PORT LAYER
   4              	@
   5              	@                          (c) Copyright 2004-2015; Micrium, Inc.; Weston, FL
   6              	@
   7              	@               All rights reserved.  Protected by international copyright laws.
   8              	@
   9              	@               uC/CPU is provided in source form to registered licensees ONLY.  It is
  10              	@               illegal to distribute this source code to any third party unless you receive
  11              	@               written permission by an authorized Micrium representative.  Knowledge of
  12              	@               the source code may NOT be used to develop a similar product.
  13              	@
  14              	@               Please help us continue to provide the Embedded community with the finest
  15              	@               software available.  Your honesty is greatly appreciated.
  16              	@
  17              	@               You can find our product's user manual, API reference, release notes and
  18              	@               more information at https://doc.micrium.com.
  19              	@               You can contact us at www.micrium.com.
  20              	@**************************************************************************************************
  21              	
  22              	@**************************************************************************************************
  23              	@
  24              	@                                            CPU PORT FILE
  25              	@
  26              	@                                            ARM-Cortex-M0
  27              	@                                           GNU C Compiler
  28              	@
  29              	@ Filename      : cpu_a.s
  30              	@ Version       : V1.30.02.00
  31              	@ Programmer(s) : JJL
  32              	@                 MD
  33              	@**************************************************************************************************
  34              	
  35              	
  36              	
  37              	@**************************************************************************************************
  38              	@                                           PUBLIC FUNCTIONS
  39              	@**************************************************************************************************
  40              	
  41              	.global  CPU_IntDis
  42              	.global  CPU_IntEn
  43              	
  44              	.global  CPU_SR_Save
  45              	.global  CPU_SR_Restore
  46              	
  47              	.global  CPU_WaitForInt
  48              	.global  CPU_WaitForExcept
  49              	
  50              	
  51              	@**************************************************************************************************
  52              	@                                      CODE GENERATION DIRECTIVES
  53              	@**************************************************************************************************
  54              	
  55              	.text
  56              	.align 2
  57              	.thumb
ARM GAS  ..\..\..\..\..\..\Software\uC-CPU\ARM-Cortex-M0\GNU\cpu_a.s 			page 2


  58              	.syntax unified
  59              	
  60              	
  61              	@**************************************************************************************************
  62              	@                                    DISABLE and ENABLE INTERRUPTS
  63              	@
  64              	@ Description : Disable/Enable interrupts.
  65              	@
  66              	@ Prototypes  : void  CPU_IntDis(void);
  67              	@               void  CPU_IntEn (void);
  68              	@**************************************************************************************************
  69              	
  70              	.thumb_func
  71              	CPU_IntDis:
  72 0000 72B6     	        CPSID   I
  73 0002 7047     	        BX      LR
  74              	
  75              	.thumb_func
  76              	CPU_IntEn:
  77 0004 62B6     	        CPSIE   I
  78 0006 7047     	        BX      LR
  79              	
  80              	
  81              	@**************************************************************************************************
  82              	@                                      CRITICAL SECTION FUNCTIONS
  83              	@
  84              	@ Description : Disable/Enable interrupts by preserving the state of interrupts.  Generally speakin
  85              	@               state of the interrupt disable flag is stored in the local variable 'cpu_sr' & inte
  86              	@               are then disabled ('cpu_sr' is allocated in all functions that need to disable inte
  87              	@               The previous interrupt state is restored by copying 'cpu_sr' into the CPU's status 
  88              	@
  89              	@ Prototypes  : CPU_SR  CPU_SR_Save   (void);
  90              	@               void    CPU_SR_Restore(CPU_SR  cpu_sr);
  91              	@
  92              	@ Note(s)     : (1) These functions are used in general like this :
  93              	@
  94              	@                       void  Task (void  *p_arg)
  95              	@                       {
  96              	@                           CPU_SR_ALLOC();                     /* Allocate storage for CPU status 
  97              	@                               :
  98              	@                               :
  99              	@                           CPU_CRITICAL_ENTER();               /* cpu_sr = CPU_SR_Save();         
 100              	@                               :
 101              	@                               :
 102              	@                           CPU_CRITICAL_EXIT();                /* CPU_SR_Restore(cpu_sr);         
 103              	@                               :
 104              	@                       }
 105              	@**************************************************************************************************
 106              	
 107              	.thumb_func
 108              	CPU_SR_Save:
 109 0008 EFF31080 	        MRS     R0, PRIMASK                     @ Set prio int mask to mask all (except faults)
 110 000c 72B6     	        CPSID   I
 111 000e 7047     	        BX      LR
 112              	
 113              	
 114              	.thumb_func
ARM GAS  ..\..\..\..\..\..\Software\uC-CPU\ARM-Cortex-M0\GNU\cpu_a.s 			page 3


 115              	CPU_SR_Restore:                                  @ See Note #2.
 116 0010 80F31088 	        MSR     PRIMASK, R0
 117 0014 7047     	        BX      LR
 118              	
 119              	
 120              	@**************************************************************************************************
 121              	@                                         WAIT FOR INTERRUPT
 122              	@
 123              	@ Description : Enters sleep state, which will be exited when an interrupt is received.
 124              	@
 125              	@ Prototypes  : void  CPU_WaitForInt (void)
 126              	@
 127              	@ Argument(s) : none.
 128              	@**************************************************************************************************
 129              	
 130              	.thumb_func
 131              	CPU_WaitForInt:
 132 0016 30BF     	        WFI                                     @ Wait for interrupt
 133 0018 7047     	        BX      LR
 134              	
 135              	
 136              	@**************************************************************************************************
 137              	@                                         WAIT FOR EXCEPTION
 138              	@
 139              	@ Description : Enters sleep state, which will be exited when an exception is received.
 140              	@
 141              	@ Prototypes  : void  CPU_WaitForExcept (void)
 142              	@
 143              	@ Argument(s) : none.
 144              	@**************************************************************************************************
 145              	
 146              	.thumb_func
 147              	CPU_WaitForExcept:
 148 001a 20BF     	        WFE                                     @ Wait for exception
 149 001c 7047     	        BX      LR
 150              	
 151              	
 152              	@**************************************************************************************************
 153              	@                                     CPU ASSEMBLY PORT FILE END
 154              	@**************************************************************************************************
 155              	
 156 001e C046     	.end
